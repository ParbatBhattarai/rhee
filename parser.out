Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    LGPARA
    RGPARA

Grammar

Rule 0     S' -> N
Rule 1     N -> element N
Rule 2     N -> <empty>
Rule 3     element -> stmt NEWLINE
Rule 4     stmt -> IDENTIFIER ASSIGNMENT exp
Rule 5     stmt -> dynamString LEKHA
Rule 6     stmt -> IDENTIFIER LEU
Rule 7     stmt -> IDENTIFIER incrementsign ASSIGNMENT exp
Rule 8     stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE
Rule 9     stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
Rule 10    stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
Rule 11    exp -> exp EQ exp
Rule 12    exp -> exp LE exp
Rule 13    exp -> exp GE exp
Rule 14    exp -> exp NE exp
Rule 15    exp -> exp LT exp
Rule 16    exp -> exp GT exp
Rule 17    exp -> exp PLUS exp
Rule 18    exp -> exp MINUS exp
Rule 19    exp -> exp TIMES exp
Rule 20    exp -> exp DIVIDE exp
Rule 21    exp -> exp POWER exp
Rule 22    exp -> IDENTIFIER
Rule 23    exp -> STRING
Rule 24    exp -> NUMBER
Rule 25    exp -> LPARA exp RPARA
Rule 26    dynamString -> exp COMMA dynamString
Rule 27    dynamString -> exp
Rule 28    condition -> condition RA condition
Rule 29    condition -> exp BHAE
Rule 30    condition -> exp NABHAE
Rule 31    cmpdstmt -> stmt NEWLINE cmpdstmt
Rule 32    cmpdstmt -> <empty>
Rule 33    optelse -> ATHAWA condition NEWLINE cmpdstmt optelse
Rule 34    optelse -> ATHAWA NEWLINE cmpdstmt
Rule 35    optelse -> <empty>
Rule 36    sign -> PLUS
Rule 37    sign -> MINUS
Rule 38    incrementsign -> sign
Rule 39    incrementsign -> TIMES
Rule 40    incrementsign -> DIVIDE
Rule 41    whilecond -> whilecond RA whilecond
Rule 42    whilecond -> exp CHHA
Rule 43    whilecond -> exp CHHAINA

Terminals, with rules where they appear

ASSIGNMENT           : 4 7 9
ATHAWA               : 33 34
BAISA                : 9
BAJA                 : 10
BHAE                 : 29
CHHA                 : 42
CHHAINA              : 43
COMMA                : 26
DEKHI                : 9
DIVIDE               : 20 40
DIYE                 : 8
EQ                   : 11
GE                   : 13
GT                   : 16
IDENTIFIER           : 4 6 7 9 22
JABA                 : 10
LE                   : 12
LEKHA                : 5
LEU                  : 6
LGPARA               : 
LPARA                : 25
LT                   : 15
MINUS                : 18 37
NABHAE               : 30
NE                   : 14
NEWLINE              : 3 8 9 10 31 33 34
NUMBER               : 24
PLUS                 : 17 36
POWER                : 21
RA                   : 28 41
RGPARA               : 
RPARA                : 25
SABEI                : 9
SAMMA                : 10
SEMICOLON            : 9
STRING               : 23
TIMES                : 19 39
YEDI                 : 8
error                : 

Nonterminals, with rules where they appear

N                    : 1 0
cmpdstmt             : 8 9 10 31 33 34
condition            : 8 28 28 33
dynamString          : 5 26
element              : 1
exp                  : 4 7 9 9 9 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 25 26 27 29 30 42 43
incrementsign        : 7
optelse              : 8 33
sign                 : 9 38
stmt                 : 3 31
whilecond            : 10 41 41

Parsing method: LALR

state 0

    (0) S' -> . N
    (1) N -> . element N
    (2) N -> .
    (3) element -> . stmt NEWLINE
    (4) stmt -> . IDENTIFIER ASSIGNMENT exp
    (5) stmt -> . dynamString LEKHA
    (6) stmt -> . IDENTIFIER LEU
    (7) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (8) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (9) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (10) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) dynamString -> . exp COMMA dynamString
    (27) dynamString -> . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    $end            reduce using rule 2 (N -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    stmt                           shift and go to state 8
    dynamString                    shift and go to state 10
    N                              shift and go to state 9
    exp                            shift and go to state 12
    element                        shift and go to state 11

state 1

    (8) stmt -> YEDI . condition NEWLINE cmpdstmt optelse DIYE
    (28) condition -> . condition RA condition
    (29) condition -> . exp BHAE
    (30) condition -> . exp NABHAE
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 15
    condition                      shift and go to state 14

state 2

    (25) exp -> LPARA . exp RPARA
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 16

state 3

    (24) exp -> NUMBER .

    EQ              reduce using rule 24 (exp -> NUMBER .)
    LE              reduce using rule 24 (exp -> NUMBER .)
    GE              reduce using rule 24 (exp -> NUMBER .)
    NE              reduce using rule 24 (exp -> NUMBER .)
    LT              reduce using rule 24 (exp -> NUMBER .)
    GT              reduce using rule 24 (exp -> NUMBER .)
    PLUS            reduce using rule 24 (exp -> NUMBER .)
    MINUS           reduce using rule 24 (exp -> NUMBER .)
    TIMES           reduce using rule 24 (exp -> NUMBER .)
    DIVIDE          reduce using rule 24 (exp -> NUMBER .)
    POWER           reduce using rule 24 (exp -> NUMBER .)
    NEWLINE         reduce using rule 24 (exp -> NUMBER .)
    BHAE            reduce using rule 24 (exp -> NUMBER .)
    NABHAE          reduce using rule 24 (exp -> NUMBER .)
    DEKHI           reduce using rule 24 (exp -> NUMBER .)
    COMMA           reduce using rule 24 (exp -> NUMBER .)
    LEKHA           reduce using rule 24 (exp -> NUMBER .)
    RPARA           reduce using rule 24 (exp -> NUMBER .)
    CHHA            reduce using rule 24 (exp -> NUMBER .)
    CHHAINA         reduce using rule 24 (exp -> NUMBER .)
    SEMICOLON       reduce using rule 24 (exp -> NUMBER .)


state 4

    (10) stmt -> JABA . SAMMA whilecond NEWLINE cmpdstmt BAJA

    SAMMA           shift and go to state 17


state 5

    (23) exp -> STRING .

    EQ              reduce using rule 23 (exp -> STRING .)
    LE              reduce using rule 23 (exp -> STRING .)
    GE              reduce using rule 23 (exp -> STRING .)
    NE              reduce using rule 23 (exp -> STRING .)
    LT              reduce using rule 23 (exp -> STRING .)
    GT              reduce using rule 23 (exp -> STRING .)
    PLUS            reduce using rule 23 (exp -> STRING .)
    MINUS           reduce using rule 23 (exp -> STRING .)
    TIMES           reduce using rule 23 (exp -> STRING .)
    DIVIDE          reduce using rule 23 (exp -> STRING .)
    POWER           reduce using rule 23 (exp -> STRING .)
    NEWLINE         reduce using rule 23 (exp -> STRING .)
    BHAE            reduce using rule 23 (exp -> STRING .)
    NABHAE          reduce using rule 23 (exp -> STRING .)
    DEKHI           reduce using rule 23 (exp -> STRING .)
    COMMA           reduce using rule 23 (exp -> STRING .)
    LEKHA           reduce using rule 23 (exp -> STRING .)
    RPARA           reduce using rule 23 (exp -> STRING .)
    CHHA            reduce using rule 23 (exp -> STRING .)
    CHHAINA         reduce using rule 23 (exp -> STRING .)
    SEMICOLON       reduce using rule 23 (exp -> STRING .)


state 6

    (4) stmt -> IDENTIFIER . ASSIGNMENT exp
    (6) stmt -> IDENTIFIER . LEU
    (7) stmt -> IDENTIFIER . incrementsign ASSIGNMENT exp
    (22) exp -> IDENTIFIER .
    (38) incrementsign -> . sign
    (39) incrementsign -> . TIMES
    (40) incrementsign -> . DIVIDE
    (36) sign -> . PLUS
    (37) sign -> . MINUS

    ASSIGNMENT      shift and go to state 20
    LEU             shift and go to state 23
    COMMA           reduce using rule 22 (exp -> IDENTIFIER .)
    EQ              reduce using rule 22 (exp -> IDENTIFIER .)
    LE              reduce using rule 22 (exp -> IDENTIFIER .)
    GE              reduce using rule 22 (exp -> IDENTIFIER .)
    NE              reduce using rule 22 (exp -> IDENTIFIER .)
    LT              reduce using rule 22 (exp -> IDENTIFIER .)
    GT              reduce using rule 22 (exp -> IDENTIFIER .)
    POWER           reduce using rule 22 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 22 (exp -> IDENTIFIER .)
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 18
    PLUS            shift and go to state 22
    MINUS           shift and go to state 25

  ! PLUS            [ reduce using rule 22 (exp -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 22 (exp -> IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 22 (exp -> IDENTIFIER .) ]
  ! DIVIDE          [ reduce using rule 22 (exp -> IDENTIFIER .) ]

    incrementsign                  shift and go to state 24
    sign                           shift and go to state 21

state 7

    (9) stmt -> SABEI . IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA

    IDENTIFIER      shift and go to state 26


state 8

    (3) element -> stmt . NEWLINE

    NEWLINE         shift and go to state 27


state 9

    (0) S' -> N .



state 10

    (5) stmt -> dynamString . LEKHA

    LEKHA           shift and go to state 28


state 11

    (1) N -> element . N
    (1) N -> . element N
    (2) N -> .
    (3) element -> . stmt NEWLINE
    (4) stmt -> . IDENTIFIER ASSIGNMENT exp
    (5) stmt -> . dynamString LEKHA
    (6) stmt -> . IDENTIFIER LEU
    (7) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (8) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (9) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (10) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) dynamString -> . exp COMMA dynamString
    (27) dynamString -> . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    $end            reduce using rule 2 (N -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    stmt                           shift and go to state 8
    dynamString                    shift and go to state 10
    exp                            shift and go to state 12
    element                        shift and go to state 11
    N                              shift and go to state 29

state 12

    (26) dynamString -> exp . COMMA dynamString
    (27) dynamString -> exp .
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    COMMA           shift and go to state 37
    LEKHA           reduce using rule 27 (dynamString -> exp .)
    EQ              shift and go to state 40
    LE              shift and go to state 30
    GE              shift and go to state 35
    NE              shift and go to state 34
    LT              shift and go to state 33
    GT              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 41
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 31
    POWER           shift and go to state 32


state 13

    (22) exp -> IDENTIFIER .

    EQ              reduce using rule 22 (exp -> IDENTIFIER .)
    LE              reduce using rule 22 (exp -> IDENTIFIER .)
    GE              reduce using rule 22 (exp -> IDENTIFIER .)
    NE              reduce using rule 22 (exp -> IDENTIFIER .)
    LT              reduce using rule 22 (exp -> IDENTIFIER .)
    GT              reduce using rule 22 (exp -> IDENTIFIER .)
    PLUS            reduce using rule 22 (exp -> IDENTIFIER .)
    MINUS           reduce using rule 22 (exp -> IDENTIFIER .)
    TIMES           reduce using rule 22 (exp -> IDENTIFIER .)
    DIVIDE          reduce using rule 22 (exp -> IDENTIFIER .)
    POWER           reduce using rule 22 (exp -> IDENTIFIER .)
    NEWLINE         reduce using rule 22 (exp -> IDENTIFIER .)
    BHAE            reduce using rule 22 (exp -> IDENTIFIER .)
    NABHAE          reduce using rule 22 (exp -> IDENTIFIER .)
    DEKHI           reduce using rule 22 (exp -> IDENTIFIER .)
    COMMA           reduce using rule 22 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 22 (exp -> IDENTIFIER .)
    RPARA           reduce using rule 22 (exp -> IDENTIFIER .)
    CHHA            reduce using rule 22 (exp -> IDENTIFIER .)
    CHHAINA         reduce using rule 22 (exp -> IDENTIFIER .)
    SEMICOLON       reduce using rule 22 (exp -> IDENTIFIER .)


state 14

    (8) stmt -> YEDI condition . NEWLINE cmpdstmt optelse DIYE
    (28) condition -> condition . RA condition

    NEWLINE         shift and go to state 42
    RA              shift and go to state 43


state 15

    (29) condition -> exp . BHAE
    (30) condition -> exp . NABHAE
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    BHAE            shift and go to state 44
    NABHAE          shift and go to state 45
    EQ              shift and go to state 40
    LE              shift and go to state 30
    GE              shift and go to state 35
    NE              shift and go to state 34
    LT              shift and go to state 33
    GT              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 41
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 31
    POWER           shift and go to state 32


state 16

    (25) exp -> LPARA exp . RPARA
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    RPARA           shift and go to state 46
    EQ              shift and go to state 40
    LE              shift and go to state 30
    GE              shift and go to state 35
    NE              shift and go to state 34
    LT              shift and go to state 33
    GT              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 41
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 31
    POWER           shift and go to state 32


state 17

    (10) stmt -> JABA SAMMA . whilecond NEWLINE cmpdstmt BAJA
    (41) whilecond -> . whilecond RA whilecond
    (42) whilecond -> . exp CHHA
    (43) whilecond -> . exp CHHAINA
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 48
    whilecond                      shift and go to state 47

state 18

    (40) incrementsign -> DIVIDE .

    ASSIGNMENT      reduce using rule 40 (incrementsign -> DIVIDE .)


state 19

    (39) incrementsign -> TIMES .

    ASSIGNMENT      reduce using rule 39 (incrementsign -> TIMES .)


state 20

    (4) stmt -> IDENTIFIER ASSIGNMENT . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 49

state 21

    (38) incrementsign -> sign .

    ASSIGNMENT      reduce using rule 38 (incrementsign -> sign .)


state 22

    (36) sign -> PLUS .

    ASSIGNMENT      reduce using rule 36 (sign -> PLUS .)
    IDENTIFIER      reduce using rule 36 (sign -> PLUS .)
    STRING          reduce using rule 36 (sign -> PLUS .)
    NUMBER          reduce using rule 36 (sign -> PLUS .)
    LPARA           reduce using rule 36 (sign -> PLUS .)


state 23

    (6) stmt -> IDENTIFIER LEU .

    NEWLINE         reduce using rule 6 (stmt -> IDENTIFIER LEU .)


state 24

    (7) stmt -> IDENTIFIER incrementsign . ASSIGNMENT exp

    ASSIGNMENT      shift and go to state 50


state 25

    (37) sign -> MINUS .

    ASSIGNMENT      reduce using rule 37 (sign -> MINUS .)
    IDENTIFIER      reduce using rule 37 (sign -> MINUS .)
    STRING          reduce using rule 37 (sign -> MINUS .)
    NUMBER          reduce using rule 37 (sign -> MINUS .)
    LPARA           reduce using rule 37 (sign -> MINUS .)


state 26

    (9) stmt -> SABEI IDENTIFIER . ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA

    ASSIGNMENT      shift and go to state 51


state 27

    (3) element -> stmt NEWLINE .

    IDENTIFIER      reduce using rule 3 (element -> stmt NEWLINE .)
    YEDI            reduce using rule 3 (element -> stmt NEWLINE .)
    SABEI           reduce using rule 3 (element -> stmt NEWLINE .)
    JABA            reduce using rule 3 (element -> stmt NEWLINE .)
    STRING          reduce using rule 3 (element -> stmt NEWLINE .)
    NUMBER          reduce using rule 3 (element -> stmt NEWLINE .)
    LPARA           reduce using rule 3 (element -> stmt NEWLINE .)
    $end            reduce using rule 3 (element -> stmt NEWLINE .)


state 28

    (5) stmt -> dynamString LEKHA .

    NEWLINE         reduce using rule 5 (stmt -> dynamString LEKHA .)


state 29

    (1) N -> element N .

    $end            reduce using rule 1 (N -> element N .)


state 30

    (12) exp -> exp LE . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 52

state 31

    (20) exp -> exp DIVIDE . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 53

state 32

    (21) exp -> exp POWER . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 54

state 33

    (15) exp -> exp LT . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 55

state 34

    (14) exp -> exp NE . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 56

state 35

    (13) exp -> exp GE . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 57

state 36

    (16) exp -> exp GT . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 58

state 37

    (26) dynamString -> exp COMMA . dynamString
    (26) dynamString -> . exp COMMA dynamString
    (27) dynamString -> . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 12
    dynamString                    shift and go to state 59

state 38

    (17) exp -> exp PLUS . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 60

state 39

    (19) exp -> exp TIMES . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 61

state 40

    (11) exp -> exp EQ . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 62

state 41

    (18) exp -> exp MINUS . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 63

state 42

    (8) stmt -> YEDI condition NEWLINE . cmpdstmt optelse DIYE
    (31) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (32) cmpdstmt -> .
    (4) stmt -> . IDENTIFIER ASSIGNMENT exp
    (5) stmt -> . dynamString LEKHA
    (6) stmt -> . IDENTIFIER LEU
    (7) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (8) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (9) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (10) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) dynamString -> . exp COMMA dynamString
    (27) dynamString -> . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    ATHAWA          reduce using rule 32 (cmpdstmt -> .)
    DIYE            reduce using rule 32 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    stmt                           shift and go to state 64
    dynamString                    shift and go to state 10
    cmpdstmt                       shift and go to state 65
    exp                            shift and go to state 12

state 43

    (28) condition -> condition RA . condition
    (28) condition -> . condition RA condition
    (29) condition -> . exp BHAE
    (30) condition -> . exp NABHAE
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 15
    condition                      shift and go to state 66

state 44

    (29) condition -> exp BHAE .

    NEWLINE         reduce using rule 29 (condition -> exp BHAE .)
    RA              reduce using rule 29 (condition -> exp BHAE .)


state 45

    (30) condition -> exp NABHAE .

    NEWLINE         reduce using rule 30 (condition -> exp NABHAE .)
    RA              reduce using rule 30 (condition -> exp NABHAE .)


state 46

    (25) exp -> LPARA exp RPARA .

    EQ              reduce using rule 25 (exp -> LPARA exp RPARA .)
    LE              reduce using rule 25 (exp -> LPARA exp RPARA .)
    GE              reduce using rule 25 (exp -> LPARA exp RPARA .)
    NE              reduce using rule 25 (exp -> LPARA exp RPARA .)
    LT              reduce using rule 25 (exp -> LPARA exp RPARA .)
    GT              reduce using rule 25 (exp -> LPARA exp RPARA .)
    PLUS            reduce using rule 25 (exp -> LPARA exp RPARA .)
    MINUS           reduce using rule 25 (exp -> LPARA exp RPARA .)
    TIMES           reduce using rule 25 (exp -> LPARA exp RPARA .)
    DIVIDE          reduce using rule 25 (exp -> LPARA exp RPARA .)
    POWER           reduce using rule 25 (exp -> LPARA exp RPARA .)
    NEWLINE         reduce using rule 25 (exp -> LPARA exp RPARA .)
    BHAE            reduce using rule 25 (exp -> LPARA exp RPARA .)
    NABHAE          reduce using rule 25 (exp -> LPARA exp RPARA .)
    DEKHI           reduce using rule 25 (exp -> LPARA exp RPARA .)
    COMMA           reduce using rule 25 (exp -> LPARA exp RPARA .)
    LEKHA           reduce using rule 25 (exp -> LPARA exp RPARA .)
    RPARA           reduce using rule 25 (exp -> LPARA exp RPARA .)
    CHHA            reduce using rule 25 (exp -> LPARA exp RPARA .)
    CHHAINA         reduce using rule 25 (exp -> LPARA exp RPARA .)
    SEMICOLON       reduce using rule 25 (exp -> LPARA exp RPARA .)


state 47

    (10) stmt -> JABA SAMMA whilecond . NEWLINE cmpdstmt BAJA
    (41) whilecond -> whilecond . RA whilecond

    NEWLINE         shift and go to state 67
    RA              shift and go to state 68


state 48

    (42) whilecond -> exp . CHHA
    (43) whilecond -> exp . CHHAINA
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    CHHA            shift and go to state 69
    CHHAINA         shift and go to state 70
    EQ              shift and go to state 40
    LE              shift and go to state 30
    GE              shift and go to state 35
    NE              shift and go to state 34
    LT              shift and go to state 33
    GT              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 41
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 31
    POWER           shift and go to state 32


state 49

    (4) stmt -> IDENTIFIER ASSIGNMENT exp .
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    NEWLINE         reduce using rule 4 (stmt -> IDENTIFIER ASSIGNMENT exp .)
    EQ              shift and go to state 40
    LE              shift and go to state 30
    GE              shift and go to state 35
    NE              shift and go to state 34
    LT              shift and go to state 33
    GT              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 41
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 31
    POWER           shift and go to state 32


state 50

    (7) stmt -> IDENTIFIER incrementsign ASSIGNMENT . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 71

state 51

    (9) stmt -> SABEI IDENTIFIER ASSIGNMENT . exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 72

state 52

    (12) exp -> exp LE exp .
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    EQ              reduce using rule 12 (exp -> exp LE exp .)
    LE              reduce using rule 12 (exp -> exp LE exp .)
    GE              reduce using rule 12 (exp -> exp LE exp .)
    NE              reduce using rule 12 (exp -> exp LE exp .)
    LT              reduce using rule 12 (exp -> exp LE exp .)
    GT              reduce using rule 12 (exp -> exp LE exp .)
    NEWLINE         reduce using rule 12 (exp -> exp LE exp .)
    BHAE            reduce using rule 12 (exp -> exp LE exp .)
    NABHAE          reduce using rule 12 (exp -> exp LE exp .)
    DEKHI           reduce using rule 12 (exp -> exp LE exp .)
    COMMA           reduce using rule 12 (exp -> exp LE exp .)
    LEKHA           reduce using rule 12 (exp -> exp LE exp .)
    RPARA           reduce using rule 12 (exp -> exp LE exp .)
    CHHA            reduce using rule 12 (exp -> exp LE exp .)
    CHHAINA         reduce using rule 12 (exp -> exp LE exp .)
    SEMICOLON       reduce using rule 12 (exp -> exp LE exp .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 41
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 31
    POWER           shift and go to state 32

  ! PLUS            [ reduce using rule 12 (exp -> exp LE exp .) ]
  ! MINUS           [ reduce using rule 12 (exp -> exp LE exp .) ]
  ! TIMES           [ reduce using rule 12 (exp -> exp LE exp .) ]
  ! DIVIDE          [ reduce using rule 12 (exp -> exp LE exp .) ]
  ! POWER           [ reduce using rule 12 (exp -> exp LE exp .) ]
  ! EQ              [ shift and go to state 40 ]
  ! LE              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 35 ]
  ! NE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 36 ]


state 53

    (20) exp -> exp DIVIDE exp .
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    EQ              reduce using rule 20 (exp -> exp DIVIDE exp .)
    LE              reduce using rule 20 (exp -> exp DIVIDE exp .)
    GE              reduce using rule 20 (exp -> exp DIVIDE exp .)
    NE              reduce using rule 20 (exp -> exp DIVIDE exp .)
    LT              reduce using rule 20 (exp -> exp DIVIDE exp .)
    GT              reduce using rule 20 (exp -> exp DIVIDE exp .)
    PLUS            reduce using rule 20 (exp -> exp DIVIDE exp .)
    MINUS           reduce using rule 20 (exp -> exp DIVIDE exp .)
    TIMES           reduce using rule 20 (exp -> exp DIVIDE exp .)
    DIVIDE          reduce using rule 20 (exp -> exp DIVIDE exp .)
    POWER           reduce using rule 20 (exp -> exp DIVIDE exp .)
    NEWLINE         reduce using rule 20 (exp -> exp DIVIDE exp .)
    BHAE            reduce using rule 20 (exp -> exp DIVIDE exp .)
    NABHAE          reduce using rule 20 (exp -> exp DIVIDE exp .)
    DEKHI           reduce using rule 20 (exp -> exp DIVIDE exp .)
    COMMA           reduce using rule 20 (exp -> exp DIVIDE exp .)
    LEKHA           reduce using rule 20 (exp -> exp DIVIDE exp .)
    RPARA           reduce using rule 20 (exp -> exp DIVIDE exp .)
    CHHA            reduce using rule 20 (exp -> exp DIVIDE exp .)
    CHHAINA         reduce using rule 20 (exp -> exp DIVIDE exp .)
    SEMICOLON       reduce using rule 20 (exp -> exp DIVIDE exp .)

  ! EQ              [ shift and go to state 40 ]
  ! LE              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 35 ]
  ! NE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 36 ]
  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 39 ]
  ! DIVIDE          [ shift and go to state 31 ]
  ! POWER           [ shift and go to state 32 ]


state 54

    (21) exp -> exp POWER exp .
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    EQ              reduce using rule 21 (exp -> exp POWER exp .)
    LE              reduce using rule 21 (exp -> exp POWER exp .)
    GE              reduce using rule 21 (exp -> exp POWER exp .)
    NE              reduce using rule 21 (exp -> exp POWER exp .)
    LT              reduce using rule 21 (exp -> exp POWER exp .)
    GT              reduce using rule 21 (exp -> exp POWER exp .)
    PLUS            reduce using rule 21 (exp -> exp POWER exp .)
    MINUS           reduce using rule 21 (exp -> exp POWER exp .)
    TIMES           reduce using rule 21 (exp -> exp POWER exp .)
    DIVIDE          reduce using rule 21 (exp -> exp POWER exp .)
    POWER           reduce using rule 21 (exp -> exp POWER exp .)
    NEWLINE         reduce using rule 21 (exp -> exp POWER exp .)
    BHAE            reduce using rule 21 (exp -> exp POWER exp .)
    NABHAE          reduce using rule 21 (exp -> exp POWER exp .)
    DEKHI           reduce using rule 21 (exp -> exp POWER exp .)
    COMMA           reduce using rule 21 (exp -> exp POWER exp .)
    LEKHA           reduce using rule 21 (exp -> exp POWER exp .)
    RPARA           reduce using rule 21 (exp -> exp POWER exp .)
    CHHA            reduce using rule 21 (exp -> exp POWER exp .)
    CHHAINA         reduce using rule 21 (exp -> exp POWER exp .)
    SEMICOLON       reduce using rule 21 (exp -> exp POWER exp .)

  ! EQ              [ shift and go to state 40 ]
  ! LE              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 35 ]
  ! NE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 36 ]
  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 39 ]
  ! DIVIDE          [ shift and go to state 31 ]
  ! POWER           [ shift and go to state 32 ]


state 55

    (15) exp -> exp LT exp .
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    EQ              reduce using rule 15 (exp -> exp LT exp .)
    LE              reduce using rule 15 (exp -> exp LT exp .)
    GE              reduce using rule 15 (exp -> exp LT exp .)
    NE              reduce using rule 15 (exp -> exp LT exp .)
    LT              reduce using rule 15 (exp -> exp LT exp .)
    GT              reduce using rule 15 (exp -> exp LT exp .)
    NEWLINE         reduce using rule 15 (exp -> exp LT exp .)
    BHAE            reduce using rule 15 (exp -> exp LT exp .)
    NABHAE          reduce using rule 15 (exp -> exp LT exp .)
    DEKHI           reduce using rule 15 (exp -> exp LT exp .)
    COMMA           reduce using rule 15 (exp -> exp LT exp .)
    LEKHA           reduce using rule 15 (exp -> exp LT exp .)
    RPARA           reduce using rule 15 (exp -> exp LT exp .)
    CHHA            reduce using rule 15 (exp -> exp LT exp .)
    CHHAINA         reduce using rule 15 (exp -> exp LT exp .)
    SEMICOLON       reduce using rule 15 (exp -> exp LT exp .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 41
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 31
    POWER           shift and go to state 32

  ! PLUS            [ reduce using rule 15 (exp -> exp LT exp .) ]
  ! MINUS           [ reduce using rule 15 (exp -> exp LT exp .) ]
  ! TIMES           [ reduce using rule 15 (exp -> exp LT exp .) ]
  ! DIVIDE          [ reduce using rule 15 (exp -> exp LT exp .) ]
  ! POWER           [ reduce using rule 15 (exp -> exp LT exp .) ]
  ! EQ              [ shift and go to state 40 ]
  ! LE              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 35 ]
  ! NE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 36 ]


state 56

    (14) exp -> exp NE exp .
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    NEWLINE         reduce using rule 14 (exp -> exp NE exp .)
    BHAE            reduce using rule 14 (exp -> exp NE exp .)
    NABHAE          reduce using rule 14 (exp -> exp NE exp .)
    DEKHI           reduce using rule 14 (exp -> exp NE exp .)
    COMMA           reduce using rule 14 (exp -> exp NE exp .)
    LEKHA           reduce using rule 14 (exp -> exp NE exp .)
    RPARA           reduce using rule 14 (exp -> exp NE exp .)
    CHHA            reduce using rule 14 (exp -> exp NE exp .)
    CHHAINA         reduce using rule 14 (exp -> exp NE exp .)
    SEMICOLON       reduce using rule 14 (exp -> exp NE exp .)
    EQ              shift and go to state 40
    LE              shift and go to state 30
    GE              shift and go to state 35
    NE              shift and go to state 34
    LT              shift and go to state 33
    GT              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 41
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 31
    POWER           shift and go to state 32

  ! EQ              [ reduce using rule 14 (exp -> exp NE exp .) ]
  ! LE              [ reduce using rule 14 (exp -> exp NE exp .) ]
  ! GE              [ reduce using rule 14 (exp -> exp NE exp .) ]
  ! NE              [ reduce using rule 14 (exp -> exp NE exp .) ]
  ! LT              [ reduce using rule 14 (exp -> exp NE exp .) ]
  ! GT              [ reduce using rule 14 (exp -> exp NE exp .) ]
  ! PLUS            [ reduce using rule 14 (exp -> exp NE exp .) ]
  ! MINUS           [ reduce using rule 14 (exp -> exp NE exp .) ]
  ! TIMES           [ reduce using rule 14 (exp -> exp NE exp .) ]
  ! DIVIDE          [ reduce using rule 14 (exp -> exp NE exp .) ]
  ! POWER           [ reduce using rule 14 (exp -> exp NE exp .) ]


state 57

    (13) exp -> exp GE exp .
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    EQ              reduce using rule 13 (exp -> exp GE exp .)
    LE              reduce using rule 13 (exp -> exp GE exp .)
    GE              reduce using rule 13 (exp -> exp GE exp .)
    NE              reduce using rule 13 (exp -> exp GE exp .)
    LT              reduce using rule 13 (exp -> exp GE exp .)
    GT              reduce using rule 13 (exp -> exp GE exp .)
    NEWLINE         reduce using rule 13 (exp -> exp GE exp .)
    BHAE            reduce using rule 13 (exp -> exp GE exp .)
    NABHAE          reduce using rule 13 (exp -> exp GE exp .)
    DEKHI           reduce using rule 13 (exp -> exp GE exp .)
    COMMA           reduce using rule 13 (exp -> exp GE exp .)
    LEKHA           reduce using rule 13 (exp -> exp GE exp .)
    RPARA           reduce using rule 13 (exp -> exp GE exp .)
    CHHA            reduce using rule 13 (exp -> exp GE exp .)
    CHHAINA         reduce using rule 13 (exp -> exp GE exp .)
    SEMICOLON       reduce using rule 13 (exp -> exp GE exp .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 41
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 31
    POWER           shift and go to state 32

  ! PLUS            [ reduce using rule 13 (exp -> exp GE exp .) ]
  ! MINUS           [ reduce using rule 13 (exp -> exp GE exp .) ]
  ! TIMES           [ reduce using rule 13 (exp -> exp GE exp .) ]
  ! DIVIDE          [ reduce using rule 13 (exp -> exp GE exp .) ]
  ! POWER           [ reduce using rule 13 (exp -> exp GE exp .) ]
  ! EQ              [ shift and go to state 40 ]
  ! LE              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 35 ]
  ! NE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 36 ]


state 58

    (16) exp -> exp GT exp .
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    EQ              reduce using rule 16 (exp -> exp GT exp .)
    LE              reduce using rule 16 (exp -> exp GT exp .)
    GE              reduce using rule 16 (exp -> exp GT exp .)
    NE              reduce using rule 16 (exp -> exp GT exp .)
    LT              reduce using rule 16 (exp -> exp GT exp .)
    GT              reduce using rule 16 (exp -> exp GT exp .)
    NEWLINE         reduce using rule 16 (exp -> exp GT exp .)
    BHAE            reduce using rule 16 (exp -> exp GT exp .)
    NABHAE          reduce using rule 16 (exp -> exp GT exp .)
    DEKHI           reduce using rule 16 (exp -> exp GT exp .)
    COMMA           reduce using rule 16 (exp -> exp GT exp .)
    LEKHA           reduce using rule 16 (exp -> exp GT exp .)
    RPARA           reduce using rule 16 (exp -> exp GT exp .)
    CHHA            reduce using rule 16 (exp -> exp GT exp .)
    CHHAINA         reduce using rule 16 (exp -> exp GT exp .)
    SEMICOLON       reduce using rule 16 (exp -> exp GT exp .)
    PLUS            shift and go to state 38
    MINUS           shift and go to state 41
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 31
    POWER           shift and go to state 32

  ! PLUS            [ reduce using rule 16 (exp -> exp GT exp .) ]
  ! MINUS           [ reduce using rule 16 (exp -> exp GT exp .) ]
  ! TIMES           [ reduce using rule 16 (exp -> exp GT exp .) ]
  ! DIVIDE          [ reduce using rule 16 (exp -> exp GT exp .) ]
  ! POWER           [ reduce using rule 16 (exp -> exp GT exp .) ]
  ! EQ              [ shift and go to state 40 ]
  ! LE              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 35 ]
  ! NE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 36 ]


state 59

    (26) dynamString -> exp COMMA dynamString .

    LEKHA           reduce using rule 26 (dynamString -> exp COMMA dynamString .)


state 60

    (17) exp -> exp PLUS exp .
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    EQ              reduce using rule 17 (exp -> exp PLUS exp .)
    LE              reduce using rule 17 (exp -> exp PLUS exp .)
    GE              reduce using rule 17 (exp -> exp PLUS exp .)
    NE              reduce using rule 17 (exp -> exp PLUS exp .)
    LT              reduce using rule 17 (exp -> exp PLUS exp .)
    GT              reduce using rule 17 (exp -> exp PLUS exp .)
    PLUS            reduce using rule 17 (exp -> exp PLUS exp .)
    MINUS           reduce using rule 17 (exp -> exp PLUS exp .)
    NEWLINE         reduce using rule 17 (exp -> exp PLUS exp .)
    BHAE            reduce using rule 17 (exp -> exp PLUS exp .)
    NABHAE          reduce using rule 17 (exp -> exp PLUS exp .)
    DEKHI           reduce using rule 17 (exp -> exp PLUS exp .)
    COMMA           reduce using rule 17 (exp -> exp PLUS exp .)
    LEKHA           reduce using rule 17 (exp -> exp PLUS exp .)
    RPARA           reduce using rule 17 (exp -> exp PLUS exp .)
    CHHA            reduce using rule 17 (exp -> exp PLUS exp .)
    CHHAINA         reduce using rule 17 (exp -> exp PLUS exp .)
    SEMICOLON       reduce using rule 17 (exp -> exp PLUS exp .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 31
    POWER           shift and go to state 32

  ! TIMES           [ reduce using rule 17 (exp -> exp PLUS exp .) ]
  ! DIVIDE          [ reduce using rule 17 (exp -> exp PLUS exp .) ]
  ! POWER           [ reduce using rule 17 (exp -> exp PLUS exp .) ]
  ! EQ              [ shift and go to state 40 ]
  ! LE              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 35 ]
  ! NE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 36 ]
  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 41 ]


state 61

    (19) exp -> exp TIMES exp .
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    EQ              reduce using rule 19 (exp -> exp TIMES exp .)
    LE              reduce using rule 19 (exp -> exp TIMES exp .)
    GE              reduce using rule 19 (exp -> exp TIMES exp .)
    NE              reduce using rule 19 (exp -> exp TIMES exp .)
    LT              reduce using rule 19 (exp -> exp TIMES exp .)
    GT              reduce using rule 19 (exp -> exp TIMES exp .)
    PLUS            reduce using rule 19 (exp -> exp TIMES exp .)
    MINUS           reduce using rule 19 (exp -> exp TIMES exp .)
    TIMES           reduce using rule 19 (exp -> exp TIMES exp .)
    DIVIDE          reduce using rule 19 (exp -> exp TIMES exp .)
    POWER           reduce using rule 19 (exp -> exp TIMES exp .)
    NEWLINE         reduce using rule 19 (exp -> exp TIMES exp .)
    BHAE            reduce using rule 19 (exp -> exp TIMES exp .)
    NABHAE          reduce using rule 19 (exp -> exp TIMES exp .)
    DEKHI           reduce using rule 19 (exp -> exp TIMES exp .)
    COMMA           reduce using rule 19 (exp -> exp TIMES exp .)
    LEKHA           reduce using rule 19 (exp -> exp TIMES exp .)
    RPARA           reduce using rule 19 (exp -> exp TIMES exp .)
    CHHA            reduce using rule 19 (exp -> exp TIMES exp .)
    CHHAINA         reduce using rule 19 (exp -> exp TIMES exp .)
    SEMICOLON       reduce using rule 19 (exp -> exp TIMES exp .)

  ! EQ              [ shift and go to state 40 ]
  ! LE              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 35 ]
  ! NE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 36 ]
  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 39 ]
  ! DIVIDE          [ shift and go to state 31 ]
  ! POWER           [ shift and go to state 32 ]


state 62

    (11) exp -> exp EQ exp .
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    EQ              reduce using rule 11 (exp -> exp EQ exp .)
    NE              reduce using rule 11 (exp -> exp EQ exp .)
    NEWLINE         reduce using rule 11 (exp -> exp EQ exp .)
    BHAE            reduce using rule 11 (exp -> exp EQ exp .)
    NABHAE          reduce using rule 11 (exp -> exp EQ exp .)
    DEKHI           reduce using rule 11 (exp -> exp EQ exp .)
    COMMA           reduce using rule 11 (exp -> exp EQ exp .)
    LEKHA           reduce using rule 11 (exp -> exp EQ exp .)
    RPARA           reduce using rule 11 (exp -> exp EQ exp .)
    CHHA            reduce using rule 11 (exp -> exp EQ exp .)
    CHHAINA         reduce using rule 11 (exp -> exp EQ exp .)
    SEMICOLON       reduce using rule 11 (exp -> exp EQ exp .)
    LE              shift and go to state 30
    GE              shift and go to state 35
    LT              shift and go to state 33
    GT              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 41
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 31
    POWER           shift and go to state 32

  ! LE              [ reduce using rule 11 (exp -> exp EQ exp .) ]
  ! GE              [ reduce using rule 11 (exp -> exp EQ exp .) ]
  ! LT              [ reduce using rule 11 (exp -> exp EQ exp .) ]
  ! GT              [ reduce using rule 11 (exp -> exp EQ exp .) ]
  ! PLUS            [ reduce using rule 11 (exp -> exp EQ exp .) ]
  ! MINUS           [ reduce using rule 11 (exp -> exp EQ exp .) ]
  ! TIMES           [ reduce using rule 11 (exp -> exp EQ exp .) ]
  ! DIVIDE          [ reduce using rule 11 (exp -> exp EQ exp .) ]
  ! POWER           [ reduce using rule 11 (exp -> exp EQ exp .) ]
  ! EQ              [ shift and go to state 40 ]
  ! NE              [ shift and go to state 34 ]


state 63

    (18) exp -> exp MINUS exp .
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    EQ              reduce using rule 18 (exp -> exp MINUS exp .)
    LE              reduce using rule 18 (exp -> exp MINUS exp .)
    GE              reduce using rule 18 (exp -> exp MINUS exp .)
    NE              reduce using rule 18 (exp -> exp MINUS exp .)
    LT              reduce using rule 18 (exp -> exp MINUS exp .)
    GT              reduce using rule 18 (exp -> exp MINUS exp .)
    PLUS            reduce using rule 18 (exp -> exp MINUS exp .)
    MINUS           reduce using rule 18 (exp -> exp MINUS exp .)
    NEWLINE         reduce using rule 18 (exp -> exp MINUS exp .)
    BHAE            reduce using rule 18 (exp -> exp MINUS exp .)
    NABHAE          reduce using rule 18 (exp -> exp MINUS exp .)
    DEKHI           reduce using rule 18 (exp -> exp MINUS exp .)
    COMMA           reduce using rule 18 (exp -> exp MINUS exp .)
    LEKHA           reduce using rule 18 (exp -> exp MINUS exp .)
    RPARA           reduce using rule 18 (exp -> exp MINUS exp .)
    CHHA            reduce using rule 18 (exp -> exp MINUS exp .)
    CHHAINA         reduce using rule 18 (exp -> exp MINUS exp .)
    SEMICOLON       reduce using rule 18 (exp -> exp MINUS exp .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 31
    POWER           shift and go to state 32

  ! TIMES           [ reduce using rule 18 (exp -> exp MINUS exp .) ]
  ! DIVIDE          [ reduce using rule 18 (exp -> exp MINUS exp .) ]
  ! POWER           [ reduce using rule 18 (exp -> exp MINUS exp .) ]
  ! EQ              [ shift and go to state 40 ]
  ! LE              [ shift and go to state 30 ]
  ! GE              [ shift and go to state 35 ]
  ! NE              [ shift and go to state 34 ]
  ! LT              [ shift and go to state 33 ]
  ! GT              [ shift and go to state 36 ]
  ! PLUS            [ shift and go to state 38 ]
  ! MINUS           [ shift and go to state 41 ]


state 64

    (31) cmpdstmt -> stmt . NEWLINE cmpdstmt

    NEWLINE         shift and go to state 73


state 65

    (8) stmt -> YEDI condition NEWLINE cmpdstmt . optelse DIYE
    (33) optelse -> . ATHAWA condition NEWLINE cmpdstmt optelse
    (34) optelse -> . ATHAWA NEWLINE cmpdstmt
    (35) optelse -> .

    ATHAWA          shift and go to state 75
    DIYE            reduce using rule 35 (optelse -> .)

    optelse                        shift and go to state 74

state 66

    (28) condition -> condition RA condition .
    (28) condition -> condition . RA condition

  ! shift/reduce conflict for RA resolved as shift
    NEWLINE         reduce using rule 28 (condition -> condition RA condition .)
    RA              shift and go to state 43

  ! RA              [ reduce using rule 28 (condition -> condition RA condition .) ]


state 67

    (10) stmt -> JABA SAMMA whilecond NEWLINE . cmpdstmt BAJA
    (31) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (32) cmpdstmt -> .
    (4) stmt -> . IDENTIFIER ASSIGNMENT exp
    (5) stmt -> . dynamString LEKHA
    (6) stmt -> . IDENTIFIER LEU
    (7) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (8) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (9) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (10) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) dynamString -> . exp COMMA dynamString
    (27) dynamString -> . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    BAJA            reduce using rule 32 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    stmt                           shift and go to state 64
    dynamString                    shift and go to state 10
    cmpdstmt                       shift and go to state 76
    exp                            shift and go to state 12

state 68

    (41) whilecond -> whilecond RA . whilecond
    (41) whilecond -> . whilecond RA whilecond
    (42) whilecond -> . exp CHHA
    (43) whilecond -> . exp CHHAINA
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 48
    whilecond                      shift and go to state 77

state 69

    (42) whilecond -> exp CHHA .

    NEWLINE         reduce using rule 42 (whilecond -> exp CHHA .)
    RA              reduce using rule 42 (whilecond -> exp CHHA .)


state 70

    (43) whilecond -> exp CHHAINA .

    NEWLINE         reduce using rule 43 (whilecond -> exp CHHAINA .)
    RA              reduce using rule 43 (whilecond -> exp CHHAINA .)


state 71

    (7) stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    NEWLINE         reduce using rule 7 (stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .)
    EQ              shift and go to state 40
    LE              shift and go to state 30
    GE              shift and go to state 35
    NE              shift and go to state 34
    LT              shift and go to state 33
    GT              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 41
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 31
    POWER           shift and go to state 32


state 72

    (9) stmt -> SABEI IDENTIFIER ASSIGNMENT exp . DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    DEKHI           shift and go to state 78
    EQ              shift and go to state 40
    LE              shift and go to state 30
    GE              shift and go to state 35
    NE              shift and go to state 34
    LT              shift and go to state 33
    GT              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 41
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 31
    POWER           shift and go to state 32


state 73

    (31) cmpdstmt -> stmt NEWLINE . cmpdstmt
    (31) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (32) cmpdstmt -> .
    (4) stmt -> . IDENTIFIER ASSIGNMENT exp
    (5) stmt -> . dynamString LEKHA
    (6) stmt -> . IDENTIFIER LEU
    (7) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (8) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (9) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (10) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) dynamString -> . exp COMMA dynamString
    (27) dynamString -> . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    ATHAWA          reduce using rule 32 (cmpdstmt -> .)
    DIYE            reduce using rule 32 (cmpdstmt -> .)
    BAJA            reduce using rule 32 (cmpdstmt -> .)
    BAISA           reduce using rule 32 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    stmt                           shift and go to state 64
    dynamString                    shift and go to state 10
    cmpdstmt                       shift and go to state 79
    exp                            shift and go to state 12

state 74

    (8) stmt -> YEDI condition NEWLINE cmpdstmt optelse . DIYE

    DIYE            shift and go to state 80


state 75

    (33) optelse -> ATHAWA . condition NEWLINE cmpdstmt optelse
    (34) optelse -> ATHAWA . NEWLINE cmpdstmt
    (28) condition -> . condition RA condition
    (29) condition -> . exp BHAE
    (30) condition -> . exp NABHAE
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    NEWLINE         shift and go to state 81
    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 15
    condition                      shift and go to state 82

state 76

    (10) stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt . BAJA

    BAJA            shift and go to state 83


state 77

    (41) whilecond -> whilecond RA whilecond .
    (41) whilecond -> whilecond . RA whilecond

  ! shift/reduce conflict for RA resolved as shift
    NEWLINE         reduce using rule 41 (whilecond -> whilecond RA whilecond .)
    RA              shift and go to state 68

  ! RA              [ reduce using rule 41 (whilecond -> whilecond RA whilecond .) ]


state 78

    (9) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI . exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 84

state 79

    (31) cmpdstmt -> stmt NEWLINE cmpdstmt .

    ATHAWA          reduce using rule 31 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    DIYE            reduce using rule 31 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    BAISA           reduce using rule 31 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    BAJA            reduce using rule 31 (cmpdstmt -> stmt NEWLINE cmpdstmt .)


state 80

    (8) stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .

    NEWLINE         reduce using rule 8 (stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .)


state 81

    (34) optelse -> ATHAWA NEWLINE . cmpdstmt
    (31) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (32) cmpdstmt -> .
    (4) stmt -> . IDENTIFIER ASSIGNMENT exp
    (5) stmt -> . dynamString LEKHA
    (6) stmt -> . IDENTIFIER LEU
    (7) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (8) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (9) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (10) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) dynamString -> . exp COMMA dynamString
    (27) dynamString -> . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    DIYE            reduce using rule 32 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    stmt                           shift and go to state 64
    dynamString                    shift and go to state 10
    cmpdstmt                       shift and go to state 85
    exp                            shift and go to state 12

state 82

    (33) optelse -> ATHAWA condition . NEWLINE cmpdstmt optelse
    (28) condition -> condition . RA condition

    NEWLINE         shift and go to state 86
    RA              shift and go to state 43


state 83

    (10) stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .

    NEWLINE         reduce using rule 10 (stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .)


state 84

    (9) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp . SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    SEMICOLON       shift and go to state 87
    EQ              shift and go to state 40
    LE              shift and go to state 30
    GE              shift and go to state 35
    NE              shift and go to state 34
    LT              shift and go to state 33
    GT              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 41
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 31
    POWER           shift and go to state 32


state 85

    (34) optelse -> ATHAWA NEWLINE cmpdstmt .

    DIYE            reduce using rule 34 (optelse -> ATHAWA NEWLINE cmpdstmt .)


state 86

    (33) optelse -> ATHAWA condition NEWLINE . cmpdstmt optelse
    (31) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (32) cmpdstmt -> .
    (4) stmt -> . IDENTIFIER ASSIGNMENT exp
    (5) stmt -> . dynamString LEKHA
    (6) stmt -> . IDENTIFIER LEU
    (7) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (8) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (9) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (10) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) dynamString -> . exp COMMA dynamString
    (27) dynamString -> . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    ATHAWA          reduce using rule 32 (cmpdstmt -> .)
    DIYE            reduce using rule 32 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    stmt                           shift and go to state 64
    dynamString                    shift and go to state 10
    cmpdstmt                       shift and go to state 88
    exp                            shift and go to state 12

state 87

    (9) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON . sign exp NEWLINE cmpdstmt BAISA
    (36) sign -> . PLUS
    (37) sign -> . MINUS

    PLUS            shift and go to state 22
    MINUS           shift and go to state 25

    sign                           shift and go to state 89

state 88

    (33) optelse -> ATHAWA condition NEWLINE cmpdstmt . optelse
    (33) optelse -> . ATHAWA condition NEWLINE cmpdstmt optelse
    (34) optelse -> . ATHAWA NEWLINE cmpdstmt
    (35) optelse -> .

    ATHAWA          shift and go to state 75
    DIYE            reduce using rule 35 (optelse -> .)

    optelse                        shift and go to state 90

state 89

    (9) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign . exp NEWLINE cmpdstmt BAISA
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 91

state 90

    (33) optelse -> ATHAWA condition NEWLINE cmpdstmt optelse .

    DIYE            reduce using rule 33 (optelse -> ATHAWA condition NEWLINE cmpdstmt optelse .)


state 91

    (9) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp . NEWLINE cmpdstmt BAISA
    (11) exp -> exp . EQ exp
    (12) exp -> exp . LE exp
    (13) exp -> exp . GE exp
    (14) exp -> exp . NE exp
    (15) exp -> exp . LT exp
    (16) exp -> exp . GT exp
    (17) exp -> exp . PLUS exp
    (18) exp -> exp . MINUS exp
    (19) exp -> exp . TIMES exp
    (20) exp -> exp . DIVIDE exp
    (21) exp -> exp . POWER exp

    NEWLINE         shift and go to state 92
    EQ              shift and go to state 40
    LE              shift and go to state 30
    GE              shift and go to state 35
    NE              shift and go to state 34
    LT              shift and go to state 33
    GT              shift and go to state 36
    PLUS            shift and go to state 38
    MINUS           shift and go to state 41
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 31
    POWER           shift and go to state 32


state 92

    (9) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE . cmpdstmt BAISA
    (31) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (32) cmpdstmt -> .
    (4) stmt -> . IDENTIFIER ASSIGNMENT exp
    (5) stmt -> . dynamString LEKHA
    (6) stmt -> . IDENTIFIER LEU
    (7) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (8) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (9) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (10) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) dynamString -> . exp COMMA dynamString
    (27) dynamString -> . exp
    (11) exp -> . exp EQ exp
    (12) exp -> . exp LE exp
    (13) exp -> . exp GE exp
    (14) exp -> . exp NE exp
    (15) exp -> . exp LT exp
    (16) exp -> . exp GT exp
    (17) exp -> . exp PLUS exp
    (18) exp -> . exp MINUS exp
    (19) exp -> . exp TIMES exp
    (20) exp -> . exp DIVIDE exp
    (21) exp -> . exp POWER exp
    (22) exp -> . IDENTIFIER
    (23) exp -> . STRING
    (24) exp -> . NUMBER
    (25) exp -> . LPARA exp RPARA

    BAISA           reduce using rule 32 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    stmt                           shift and go to state 64
    dynamString                    shift and go to state 10
    cmpdstmt                       shift and go to state 93
    exp                            shift and go to state 12

state 93

    (9) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt . BAISA

    BAISA           shift and go to state 94


state 94

    (9) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .

    NEWLINE         reduce using rule 9 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQ in state 56 resolved as shift
WARNING: shift/reduce conflict for LE in state 56 resolved as shift
WARNING: shift/reduce conflict for GE in state 56 resolved as shift
WARNING: shift/reduce conflict for NE in state 56 resolved as shift
WARNING: shift/reduce conflict for LT in state 56 resolved as shift
WARNING: shift/reduce conflict for GT in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 56 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 56 resolved as shift
WARNING: shift/reduce conflict for POWER in state 56 resolved as shift
WARNING: shift/reduce conflict for RA in state 66 resolved as shift
WARNING: shift/reduce conflict for RA in state 77 resolved as shift
