Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> N
Rule 1     N -> element NEWLINE N
Rule 2     N -> NEWLINE N
Rule 3     N -> element
Rule 4     N -> <empty>
Rule 5     element -> stmt
Rule 6     stmt -> IDENTIFIER ASSIGNMENT exp
Rule 7     stmt -> dynamString LEKHA
Rule 8     stmt -> dynamString LEKHA SEMICOLON
Rule 9     stmt -> BAHIRA
Rule 10    stmt -> ARKO
Rule 11    stmt -> IDENTIFIER MA dynamString LEKHA SEMICOLON
Rule 12    stmt -> IDENTIFIER MA dynamString LEKHA
Rule 13    stmt -> IDENTIFIER BATA IDENTIFIER LEU
Rule 14    stmt -> IDENTIFIER BANDAGARA
Rule 15    stmt -> IDENTIFIER DEKHAU
Rule 16    stmt -> IDENTIFIER LUKAU
Rule 17    stmt -> IDENTIFIER BANAU
Rule 18    stmt -> IDENTIFIER METAU
Rule 19    stmt -> IDENTIFIER MA IDENTIFIER KORA variableexp
Rule 20    stmt -> IDENTIFIER LEU
Rule 21    stmt -> IDENTIFIER incrementsign ASSIGNMENT exp
Rule 22    stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE
Rule 23    stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
Rule 24    stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
Rule 25    stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
Rule 26    stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
Rule 27    stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
Rule 28    stmt -> IDENTIFIER LPARA variableexp RPARA
Rule 29    stmt -> exp PATHAU
Rule 30    stmt -> IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
Rule 31    variableArgs -> IDENTIFIER COMMA variableArgs
Rule 32    variableArgs -> IDENTIFIER
Rule 33    variableArgs -> <empty>
Rule 34    variableexp -> exp COMMA variableexp
Rule 35    variableexp -> exp
Rule 36    variableexp -> <empty>
Rule 37    exp -> exp EQ exp
Rule 38    exp -> exp LE exp
Rule 39    exp -> exp GE exp
Rule 40    exp -> exp NE exp
Rule 41    exp -> exp LT exp
Rule 42    exp -> exp GT exp
Rule 43    exp -> exp PLUS exp
Rule 44    exp -> exp MINUS exp
Rule 45    exp -> exp TIMES exp
Rule 46    exp -> exp DIVIDE exp
Rule 47    exp -> exp POWER exp
Rule 48    exp -> exp MODULUS exp
Rule 49    exp -> exp RA exp
Rule 50    exp -> exp WA exp
Rule 51    exp -> IDENTIFIER
Rule 52    exp -> STRING
Rule 53    exp -> NUMBER
Rule 54    exp -> MINUS NUMBER
Rule 55    exp -> SUNYA
Rule 56    exp -> LGPARA variableexp RGPARA
Rule 57    exp -> IDENTIFIER LGPARA exp RGPARA
Rule 58    exp -> LPARA exp RPARA
Rule 59    exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
Rule 60    sliceexp -> exp
Rule 61    sliceexp -> <empty>
Rule 62    exp -> LPARA exp RPARA QUESTION exp COLON exp
Rule 63    exp -> IDENTIFIER LPARA variableexp RPARA
Rule 64    dynamString -> exp COMMA dynamString
Rule 65    dynamString -> exp
Rule 66    condition -> condition RA condition
Rule 67    condition -> condition WA condition
Rule 68    condition -> exp BHAE
Rule 69    condition -> exp NABHAE
Rule 70    cmpdstmt -> stmt NEWLINE cmpdstmt
Rule 71    cmpdstmt -> <empty>
Rule 72    optelse -> ATHAWA condition NEWLINE cmpdstmt optelse
Rule 73    optelse -> ATHAWA NEWLINE cmpdstmt
Rule 74    optelse -> <empty>
Rule 75    sign -> PLUS
Rule 76    sign -> MINUS
Rule 77    incrementsign -> sign
Rule 78    incrementsign -> TIMES
Rule 79    incrementsign -> DIVIDE
Rule 80    whilecond -> whilecond RA whilecond
Rule 81    whilecond -> whilecond WA whilecond
Rule 82    whilecond -> exp CHHA
Rule 83    whilecond -> exp CHHAINA

Terminals, with rules where they appear

ARKO                 : 10
ASSIGNMENT           : 6 21 23 24 26 30
ATHAWA               : 72 73
BAHIRA               : 9
BAISA                : 23 24
BAJA                 : 25
BANAU                : 17
BANDAGARA            : 14
BATA                 : 13
BHAE                 : 68
CHHA                 : 82
CHHAINA              : 83
COLON                : 59 62
COMMA                : 31 34 64
DEKHAU               : 15
DEKHI                : 23 24
DIVIDE               : 46 79
DIYE                 : 22
EQ                   : 37
GE                   : 39
GT                   : 42
IDENTIFIER           : 6 11 12 13 13 14 15 16 17 18 19 19 20 21 23 24 26 27 28 30 31 32 51 57 59 63
JABA                 : 25
KAAM                 : 27
KORA                 : 19
LE                   : 38
LEKHA                : 7 8 11 12
LEU                  : 13 20
LGPARA               : 26 30 56 57 59
LPARA                : 27 28 58 62 63
LT                   : 41
LUKAU                : 16
MA                   : 11 12 19
MAKA                 : 27
METAU                : 18
MINUS                : 44 54 76
MODULUS              : 48
NABHAE               : 69
NE                   : 40
NEWLINE              : 1 2 22 23 24 25 27 70 72 73
NUMBER               : 53 54
PATHAU               : 29
PLUS                 : 43 75
POWER                : 47
QUESTION             : 62
RA                   : 49 66 80
RGPARA               : 26 30 56 57 59
RPARA                : 27 28 58 62 63
SABEI                : 23 24
SAMMA                : 25
SEMICOLON            : 8 11 23
STRING               : 52
SUNYA                : 55
TIMES                : 45 78
WA                   : 50 67 81
YEDI                 : 22
error                : 

Nonterminals, with rules where they appear

N                    : 1 2 0
cmpdstmt             : 22 23 24 25 27 70 72 73
condition            : 22 66 66 67 67 72
dynamString          : 7 8 11 12 64
element              : 1 3
exp                  : 6 21 23 23 23 24 24 29 30 30 34 35 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 57 58 60 62 62 62 64 65 68 69 82 83
incrementsign        : 21
optelse              : 22 72
sign                 : 23 77
sliceexp             : 59 59
stmt                 : 5 70
variableArgs         : 27 31
variableexp          : 19 26 28 34 56 63
whilecond            : 25 80 80 81 81

Parsing method: LALR

state 0

    (0) S' -> . N
    (1) N -> . element NEWLINE N
    (2) N -> . NEWLINE N
    (3) N -> . element
    (4) N -> .
    (5) element -> . stmt
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER LUKAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (23) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (27) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (28) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (29) stmt -> . exp PATHAU
    (30) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (64) dynamString -> . exp COMMA dynamString
    (65) dynamString -> . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    NEWLINE         shift and go to state 7
    $end            reduce using rule 4 (N -> .)
    IDENTIFIER      shift and go to state 9
    BAHIRA          shift and go to state 4
    ARKO            shift and go to state 5
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    dynamString                    shift and go to state 2
    N                              shift and go to state 14
    stmt                           shift and go to state 13
    exp                            shift and go to state 18
    element                        shift and go to state 17

state 1

    (22) stmt -> YEDI . condition NEWLINE cmpdstmt optelse DIYE
    (66) condition -> . condition RA condition
    (67) condition -> . condition WA condition
    (68) condition -> . exp BHAE
    (69) condition -> . exp NABHAE
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 22
    condition                      shift and go to state 21

state 2

    (7) stmt -> dynamString . LEKHA
    (8) stmt -> dynamString . LEKHA SEMICOLON

    LEKHA           shift and go to state 23


state 3

    (54) exp -> MINUS . NUMBER

    NUMBER          shift and go to state 24


state 4

    (9) stmt -> BAHIRA .

    NEWLINE         reduce using rule 9 (stmt -> BAHIRA .)
    $end            reduce using rule 9 (stmt -> BAHIRA .)


state 5

    (10) stmt -> ARKO .

    NEWLINE         reduce using rule 10 (stmt -> ARKO .)
    $end            reduce using rule 10 (stmt -> ARKO .)


state 6

    (27) stmt -> KAAM . IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA

    IDENTIFIER      shift and go to state 25


state 7

    (2) N -> NEWLINE . N
    (1) N -> . element NEWLINE N
    (2) N -> . NEWLINE N
    (3) N -> . element
    (4) N -> .
    (5) element -> . stmt
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER LUKAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (23) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (27) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (28) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (29) stmt -> . exp PATHAU
    (30) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (64) dynamString -> . exp COMMA dynamString
    (65) dynamString -> . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    NEWLINE         shift and go to state 7
    $end            reduce using rule 4 (N -> .)
    IDENTIFIER      shift and go to state 9
    BAHIRA          shift and go to state 4
    ARKO            shift and go to state 5
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    dynamString                    shift and go to state 2
    N                              shift and go to state 26
    stmt                           shift and go to state 13
    exp                            shift and go to state 18
    element                        shift and go to state 17

state 8

    (25) stmt -> JABA . SAMMA whilecond NEWLINE cmpdstmt BAJA

    SAMMA           shift and go to state 27


state 9

    (6) stmt -> IDENTIFIER . ASSIGNMENT exp
    (11) stmt -> IDENTIFIER . MA dynamString LEKHA SEMICOLON
    (12) stmt -> IDENTIFIER . MA dynamString LEKHA
    (13) stmt -> IDENTIFIER . BATA IDENTIFIER LEU
    (14) stmt -> IDENTIFIER . BANDAGARA
    (15) stmt -> IDENTIFIER . DEKHAU
    (16) stmt -> IDENTIFIER . LUKAU
    (17) stmt -> IDENTIFIER . BANAU
    (18) stmt -> IDENTIFIER . METAU
    (19) stmt -> IDENTIFIER . MA IDENTIFIER KORA variableexp
    (20) stmt -> IDENTIFIER . LEU
    (21) stmt -> IDENTIFIER . incrementsign ASSIGNMENT exp
    (26) stmt -> IDENTIFIER . ASSIGNMENT LGPARA variableexp RGPARA
    (28) stmt -> IDENTIFIER . LPARA variableexp RPARA
    (30) stmt -> IDENTIFIER . LGPARA exp RGPARA ASSIGNMENT exp
    (51) exp -> IDENTIFIER .
    (57) exp -> IDENTIFIER . LGPARA exp RGPARA
    (59) exp -> IDENTIFIER . LGPARA sliceexp COLON sliceexp RGPARA
    (63) exp -> IDENTIFIER . LPARA variableexp RPARA
    (77) incrementsign -> . sign
    (78) incrementsign -> . TIMES
    (79) incrementsign -> . DIVIDE
    (75) sign -> . PLUS
    (76) sign -> . MINUS

    ASSIGNMENT      shift and go to state 31
    MA              shift and go to state 42
    BATA            shift and go to state 30
    BANDAGARA       shift and go to state 33
    DEKHAU          shift and go to state 43
    LUKAU           shift and go to state 32
    BANAU           shift and go to state 35
    METAU           shift and go to state 40
    LEU             shift and go to state 44
    LPARA           shift and go to state 38
    LGPARA          shift and go to state 29
    PATHAU          reduce using rule 51 (exp -> IDENTIFIER .)
    COMMA           reduce using rule 51 (exp -> IDENTIFIER .)
    EQ              reduce using rule 51 (exp -> IDENTIFIER .)
    LE              reduce using rule 51 (exp -> IDENTIFIER .)
    GE              reduce using rule 51 (exp -> IDENTIFIER .)
    NE              reduce using rule 51 (exp -> IDENTIFIER .)
    LT              reduce using rule 51 (exp -> IDENTIFIER .)
    GT              reduce using rule 51 (exp -> IDENTIFIER .)
    POWER           reduce using rule 51 (exp -> IDENTIFIER .)
    MODULUS         reduce using rule 51 (exp -> IDENTIFIER .)
    RA              reduce using rule 51 (exp -> IDENTIFIER .)
    WA              reduce using rule 51 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 51 (exp -> IDENTIFIER .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 39
    PLUS            shift and go to state 37
    MINUS           shift and go to state 34

  ! PLUS            [ reduce using rule 51 (exp -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 51 (exp -> IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 51 (exp -> IDENTIFIER .) ]
  ! DIVIDE          [ reduce using rule 51 (exp -> IDENTIFIER .) ]

    incrementsign                  shift and go to state 36
    sign                           shift and go to state 41

state 10

    (23) stmt -> SABEI . IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) stmt -> SABEI . IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA

    IDENTIFIER      shift and go to state 45


state 11

    (58) exp -> LPARA . exp RPARA
    (62) exp -> LPARA . exp RPARA QUESTION exp COLON exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 46

state 12

    (53) exp -> NUMBER .

    EQ              reduce using rule 53 (exp -> NUMBER .)
    LE              reduce using rule 53 (exp -> NUMBER .)
    GE              reduce using rule 53 (exp -> NUMBER .)
    NE              reduce using rule 53 (exp -> NUMBER .)
    LT              reduce using rule 53 (exp -> NUMBER .)
    GT              reduce using rule 53 (exp -> NUMBER .)
    PLUS            reduce using rule 53 (exp -> NUMBER .)
    MINUS           reduce using rule 53 (exp -> NUMBER .)
    TIMES           reduce using rule 53 (exp -> NUMBER .)
    DIVIDE          reduce using rule 53 (exp -> NUMBER .)
    POWER           reduce using rule 53 (exp -> NUMBER .)
    MODULUS         reduce using rule 53 (exp -> NUMBER .)
    RA              reduce using rule 53 (exp -> NUMBER .)
    WA              reduce using rule 53 (exp -> NUMBER .)
    PATHAU          reduce using rule 53 (exp -> NUMBER .)
    COMMA           reduce using rule 53 (exp -> NUMBER .)
    LEKHA           reduce using rule 53 (exp -> NUMBER .)
    BHAE            reduce using rule 53 (exp -> NUMBER .)
    NABHAE          reduce using rule 53 (exp -> NUMBER .)
    RPARA           reduce using rule 53 (exp -> NUMBER .)
    RGPARA          reduce using rule 53 (exp -> NUMBER .)
    CHHA            reduce using rule 53 (exp -> NUMBER .)
    CHHAINA         reduce using rule 53 (exp -> NUMBER .)
    COLON           reduce using rule 53 (exp -> NUMBER .)
    NEWLINE         reduce using rule 53 (exp -> NUMBER .)
    $end            reduce using rule 53 (exp -> NUMBER .)
    DEKHI           reduce using rule 53 (exp -> NUMBER .)
    SEMICOLON       reduce using rule 53 (exp -> NUMBER .)


state 13

    (5) element -> stmt .

    NEWLINE         reduce using rule 5 (element -> stmt .)
    $end            reduce using rule 5 (element -> stmt .)


state 14

    (0) S' -> N .



state 15

    (56) exp -> LGPARA . variableexp RGPARA
    (34) variableexp -> . exp COMMA variableexp
    (35) variableexp -> . exp
    (36) variableexp -> .
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    RGPARA          reduce using rule 36 (variableexp -> .)
    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 48
    variableexp                    shift and go to state 47

state 16

    (55) exp -> SUNYA .

    EQ              reduce using rule 55 (exp -> SUNYA .)
    LE              reduce using rule 55 (exp -> SUNYA .)
    GE              reduce using rule 55 (exp -> SUNYA .)
    NE              reduce using rule 55 (exp -> SUNYA .)
    LT              reduce using rule 55 (exp -> SUNYA .)
    GT              reduce using rule 55 (exp -> SUNYA .)
    PLUS            reduce using rule 55 (exp -> SUNYA .)
    MINUS           reduce using rule 55 (exp -> SUNYA .)
    TIMES           reduce using rule 55 (exp -> SUNYA .)
    DIVIDE          reduce using rule 55 (exp -> SUNYA .)
    POWER           reduce using rule 55 (exp -> SUNYA .)
    MODULUS         reduce using rule 55 (exp -> SUNYA .)
    RA              reduce using rule 55 (exp -> SUNYA .)
    WA              reduce using rule 55 (exp -> SUNYA .)
    PATHAU          reduce using rule 55 (exp -> SUNYA .)
    COMMA           reduce using rule 55 (exp -> SUNYA .)
    LEKHA           reduce using rule 55 (exp -> SUNYA .)
    BHAE            reduce using rule 55 (exp -> SUNYA .)
    NABHAE          reduce using rule 55 (exp -> SUNYA .)
    RPARA           reduce using rule 55 (exp -> SUNYA .)
    RGPARA          reduce using rule 55 (exp -> SUNYA .)
    CHHA            reduce using rule 55 (exp -> SUNYA .)
    CHHAINA         reduce using rule 55 (exp -> SUNYA .)
    COLON           reduce using rule 55 (exp -> SUNYA .)
    NEWLINE         reduce using rule 55 (exp -> SUNYA .)
    $end            reduce using rule 55 (exp -> SUNYA .)
    DEKHI           reduce using rule 55 (exp -> SUNYA .)
    SEMICOLON       reduce using rule 55 (exp -> SUNYA .)


state 17

    (1) N -> element . NEWLINE N
    (3) N -> element .

    NEWLINE         shift and go to state 49
    $end            reduce using rule 3 (N -> element .)


state 18

    (29) stmt -> exp . PATHAU
    (64) dynamString -> exp . COMMA dynamString
    (65) dynamString -> exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    PATHAU          shift and go to state 56
    COMMA           shift and go to state 59
    LEKHA           reduce using rule 65 (dynamString -> exp .)
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62


state 19

    (52) exp -> STRING .

    EQ              reduce using rule 52 (exp -> STRING .)
    LE              reduce using rule 52 (exp -> STRING .)
    GE              reduce using rule 52 (exp -> STRING .)
    NE              reduce using rule 52 (exp -> STRING .)
    LT              reduce using rule 52 (exp -> STRING .)
    GT              reduce using rule 52 (exp -> STRING .)
    PLUS            reduce using rule 52 (exp -> STRING .)
    MINUS           reduce using rule 52 (exp -> STRING .)
    TIMES           reduce using rule 52 (exp -> STRING .)
    DIVIDE          reduce using rule 52 (exp -> STRING .)
    POWER           reduce using rule 52 (exp -> STRING .)
    MODULUS         reduce using rule 52 (exp -> STRING .)
    RA              reduce using rule 52 (exp -> STRING .)
    WA              reduce using rule 52 (exp -> STRING .)
    PATHAU          reduce using rule 52 (exp -> STRING .)
    COMMA           reduce using rule 52 (exp -> STRING .)
    LEKHA           reduce using rule 52 (exp -> STRING .)
    BHAE            reduce using rule 52 (exp -> STRING .)
    NABHAE          reduce using rule 52 (exp -> STRING .)
    RPARA           reduce using rule 52 (exp -> STRING .)
    RGPARA          reduce using rule 52 (exp -> STRING .)
    CHHA            reduce using rule 52 (exp -> STRING .)
    CHHAINA         reduce using rule 52 (exp -> STRING .)
    COLON           reduce using rule 52 (exp -> STRING .)
    NEWLINE         reduce using rule 52 (exp -> STRING .)
    $end            reduce using rule 52 (exp -> STRING .)
    DEKHI           reduce using rule 52 (exp -> STRING .)
    SEMICOLON       reduce using rule 52 (exp -> STRING .)


state 20

    (51) exp -> IDENTIFIER .
    (57) exp -> IDENTIFIER . LGPARA exp RGPARA
    (59) exp -> IDENTIFIER . LGPARA sliceexp COLON sliceexp RGPARA
    (63) exp -> IDENTIFIER . LPARA variableexp RPARA

    EQ              reduce using rule 51 (exp -> IDENTIFIER .)
    LE              reduce using rule 51 (exp -> IDENTIFIER .)
    GE              reduce using rule 51 (exp -> IDENTIFIER .)
    NE              reduce using rule 51 (exp -> IDENTIFIER .)
    LT              reduce using rule 51 (exp -> IDENTIFIER .)
    GT              reduce using rule 51 (exp -> IDENTIFIER .)
    PLUS            reduce using rule 51 (exp -> IDENTIFIER .)
    MINUS           reduce using rule 51 (exp -> IDENTIFIER .)
    TIMES           reduce using rule 51 (exp -> IDENTIFIER .)
    DIVIDE          reduce using rule 51 (exp -> IDENTIFIER .)
    POWER           reduce using rule 51 (exp -> IDENTIFIER .)
    MODULUS         reduce using rule 51 (exp -> IDENTIFIER .)
    RA              reduce using rule 51 (exp -> IDENTIFIER .)
    WA              reduce using rule 51 (exp -> IDENTIFIER .)
    PATHAU          reduce using rule 51 (exp -> IDENTIFIER .)
    COMMA           reduce using rule 51 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 51 (exp -> IDENTIFIER .)
    BHAE            reduce using rule 51 (exp -> IDENTIFIER .)
    NABHAE          reduce using rule 51 (exp -> IDENTIFIER .)
    RPARA           reduce using rule 51 (exp -> IDENTIFIER .)
    RGPARA          reduce using rule 51 (exp -> IDENTIFIER .)
    CHHA            reduce using rule 51 (exp -> IDENTIFIER .)
    CHHAINA         reduce using rule 51 (exp -> IDENTIFIER .)
    COLON           reduce using rule 51 (exp -> IDENTIFIER .)
    NEWLINE         reduce using rule 51 (exp -> IDENTIFIER .)
    $end            reduce using rule 51 (exp -> IDENTIFIER .)
    DEKHI           reduce using rule 51 (exp -> IDENTIFIER .)
    SEMICOLON       reduce using rule 51 (exp -> IDENTIFIER .)
    LGPARA          shift and go to state 66
    LPARA           shift and go to state 67


state 21

    (22) stmt -> YEDI condition . NEWLINE cmpdstmt optelse DIYE
    (66) condition -> condition . RA condition
    (67) condition -> condition . WA condition

    NEWLINE         shift and go to state 69
    RA              shift and go to state 70
    WA              shift and go to state 68


state 22

    (68) condition -> exp . BHAE
    (69) condition -> exp . NABHAE
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    BHAE            shift and go to state 71
    NABHAE          shift and go to state 72
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62


state 23

    (7) stmt -> dynamString LEKHA .
    (8) stmt -> dynamString LEKHA . SEMICOLON

    NEWLINE         reduce using rule 7 (stmt -> dynamString LEKHA .)
    $end            reduce using rule 7 (stmt -> dynamString LEKHA .)
    SEMICOLON       shift and go to state 73


state 24

    (54) exp -> MINUS NUMBER .

    EQ              reduce using rule 54 (exp -> MINUS NUMBER .)
    LE              reduce using rule 54 (exp -> MINUS NUMBER .)
    GE              reduce using rule 54 (exp -> MINUS NUMBER .)
    NE              reduce using rule 54 (exp -> MINUS NUMBER .)
    LT              reduce using rule 54 (exp -> MINUS NUMBER .)
    GT              reduce using rule 54 (exp -> MINUS NUMBER .)
    PLUS            reduce using rule 54 (exp -> MINUS NUMBER .)
    MINUS           reduce using rule 54 (exp -> MINUS NUMBER .)
    TIMES           reduce using rule 54 (exp -> MINUS NUMBER .)
    DIVIDE          reduce using rule 54 (exp -> MINUS NUMBER .)
    POWER           reduce using rule 54 (exp -> MINUS NUMBER .)
    MODULUS         reduce using rule 54 (exp -> MINUS NUMBER .)
    RA              reduce using rule 54 (exp -> MINUS NUMBER .)
    WA              reduce using rule 54 (exp -> MINUS NUMBER .)
    PATHAU          reduce using rule 54 (exp -> MINUS NUMBER .)
    COMMA           reduce using rule 54 (exp -> MINUS NUMBER .)
    LEKHA           reduce using rule 54 (exp -> MINUS NUMBER .)
    BHAE            reduce using rule 54 (exp -> MINUS NUMBER .)
    NABHAE          reduce using rule 54 (exp -> MINUS NUMBER .)
    RPARA           reduce using rule 54 (exp -> MINUS NUMBER .)
    RGPARA          reduce using rule 54 (exp -> MINUS NUMBER .)
    CHHA            reduce using rule 54 (exp -> MINUS NUMBER .)
    CHHAINA         reduce using rule 54 (exp -> MINUS NUMBER .)
    COLON           reduce using rule 54 (exp -> MINUS NUMBER .)
    NEWLINE         reduce using rule 54 (exp -> MINUS NUMBER .)
    $end            reduce using rule 54 (exp -> MINUS NUMBER .)
    DEKHI           reduce using rule 54 (exp -> MINUS NUMBER .)
    SEMICOLON       reduce using rule 54 (exp -> MINUS NUMBER .)


state 25

    (27) stmt -> KAAM IDENTIFIER . LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA

    LPARA           shift and go to state 74


state 26

    (2) N -> NEWLINE N .

    $end            reduce using rule 2 (N -> NEWLINE N .)


state 27

    (25) stmt -> JABA SAMMA . whilecond NEWLINE cmpdstmt BAJA
    (80) whilecond -> . whilecond RA whilecond
    (81) whilecond -> . whilecond WA whilecond
    (82) whilecond -> . exp CHHA
    (83) whilecond -> . exp CHHAINA
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 76
    whilecond                      shift and go to state 75

state 28

    (78) incrementsign -> TIMES .

    ASSIGNMENT      reduce using rule 78 (incrementsign -> TIMES .)


state 29

    (30) stmt -> IDENTIFIER LGPARA . exp RGPARA ASSIGNMENT exp
    (57) exp -> IDENTIFIER LGPARA . exp RGPARA
    (59) exp -> IDENTIFIER LGPARA . sliceexp COLON sliceexp RGPARA
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA
    (60) sliceexp -> . exp
    (61) sliceexp -> .

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11
    COLON           reduce using rule 61 (sliceexp -> .)

    exp                            shift and go to state 78
    sliceexp                       shift and go to state 77

state 30

    (13) stmt -> IDENTIFIER BATA . IDENTIFIER LEU

    IDENTIFIER      shift and go to state 79


state 31

    (6) stmt -> IDENTIFIER ASSIGNMENT . exp
    (26) stmt -> IDENTIFIER ASSIGNMENT . LGPARA variableexp RGPARA
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    LGPARA          shift and go to state 80
    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LPARA           shift and go to state 11

    exp                            shift and go to state 81

state 32

    (16) stmt -> IDENTIFIER LUKAU .

    NEWLINE         reduce using rule 16 (stmt -> IDENTIFIER LUKAU .)
    $end            reduce using rule 16 (stmt -> IDENTIFIER LUKAU .)


state 33

    (14) stmt -> IDENTIFIER BANDAGARA .

    NEWLINE         reduce using rule 14 (stmt -> IDENTIFIER BANDAGARA .)
    $end            reduce using rule 14 (stmt -> IDENTIFIER BANDAGARA .)


state 34

    (76) sign -> MINUS .

    IDENTIFIER      reduce using rule 76 (sign -> MINUS .)
    STRING          reduce using rule 76 (sign -> MINUS .)
    NUMBER          reduce using rule 76 (sign -> MINUS .)
    MINUS           reduce using rule 76 (sign -> MINUS .)
    SUNYA           reduce using rule 76 (sign -> MINUS .)
    LGPARA          reduce using rule 76 (sign -> MINUS .)
    LPARA           reduce using rule 76 (sign -> MINUS .)
    ASSIGNMENT      reduce using rule 76 (sign -> MINUS .)


state 35

    (17) stmt -> IDENTIFIER BANAU .

    NEWLINE         reduce using rule 17 (stmt -> IDENTIFIER BANAU .)
    $end            reduce using rule 17 (stmt -> IDENTIFIER BANAU .)


state 36

    (21) stmt -> IDENTIFIER incrementsign . ASSIGNMENT exp

    ASSIGNMENT      shift and go to state 82


state 37

    (75) sign -> PLUS .

    IDENTIFIER      reduce using rule 75 (sign -> PLUS .)
    STRING          reduce using rule 75 (sign -> PLUS .)
    NUMBER          reduce using rule 75 (sign -> PLUS .)
    MINUS           reduce using rule 75 (sign -> PLUS .)
    SUNYA           reduce using rule 75 (sign -> PLUS .)
    LGPARA          reduce using rule 75 (sign -> PLUS .)
    LPARA           reduce using rule 75 (sign -> PLUS .)
    ASSIGNMENT      reduce using rule 75 (sign -> PLUS .)


state 38

    (28) stmt -> IDENTIFIER LPARA . variableexp RPARA
    (63) exp -> IDENTIFIER LPARA . variableexp RPARA
    (34) variableexp -> . exp COMMA variableexp
    (35) variableexp -> . exp
    (36) variableexp -> .
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    RPARA           reduce using rule 36 (variableexp -> .)
    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 48
    variableexp                    shift and go to state 83

state 39

    (79) incrementsign -> DIVIDE .

    ASSIGNMENT      reduce using rule 79 (incrementsign -> DIVIDE .)


state 40

    (18) stmt -> IDENTIFIER METAU .

    NEWLINE         reduce using rule 18 (stmt -> IDENTIFIER METAU .)
    $end            reduce using rule 18 (stmt -> IDENTIFIER METAU .)


state 41

    (77) incrementsign -> sign .

    ASSIGNMENT      reduce using rule 77 (incrementsign -> sign .)


state 42

    (11) stmt -> IDENTIFIER MA . dynamString LEKHA SEMICOLON
    (12) stmt -> IDENTIFIER MA . dynamString LEKHA
    (19) stmt -> IDENTIFIER MA . IDENTIFIER KORA variableexp
    (64) dynamString -> . exp COMMA dynamString
    (65) dynamString -> . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 85
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 86
    dynamString                    shift and go to state 84

state 43

    (15) stmt -> IDENTIFIER DEKHAU .

    NEWLINE         reduce using rule 15 (stmt -> IDENTIFIER DEKHAU .)
    $end            reduce using rule 15 (stmt -> IDENTIFIER DEKHAU .)


state 44

    (20) stmt -> IDENTIFIER LEU .

    NEWLINE         reduce using rule 20 (stmt -> IDENTIFIER LEU .)
    $end            reduce using rule 20 (stmt -> IDENTIFIER LEU .)


state 45

    (23) stmt -> SABEI IDENTIFIER . ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) stmt -> SABEI IDENTIFIER . ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA

    ASSIGNMENT      shift and go to state 87


state 46

    (58) exp -> LPARA exp . RPARA
    (62) exp -> LPARA exp . RPARA QUESTION exp COLON exp
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    RPARA           shift and go to state 88
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62


state 47

    (56) exp -> LGPARA variableexp . RGPARA

    RGPARA          shift and go to state 89


state 48

    (34) variableexp -> exp . COMMA variableexp
    (35) variableexp -> exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    COMMA           shift and go to state 90
    RGPARA          reduce using rule 35 (variableexp -> exp .)
    RPARA           reduce using rule 35 (variableexp -> exp .)
    NEWLINE         reduce using rule 35 (variableexp -> exp .)
    $end            reduce using rule 35 (variableexp -> exp .)
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62


state 49

    (1) N -> element NEWLINE . N
    (1) N -> . element NEWLINE N
    (2) N -> . NEWLINE N
    (3) N -> . element
    (4) N -> .
    (5) element -> . stmt
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER LUKAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (23) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (27) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (28) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (29) stmt -> . exp PATHAU
    (30) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (64) dynamString -> . exp COMMA dynamString
    (65) dynamString -> . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    NEWLINE         shift and go to state 7
    $end            reduce using rule 4 (N -> .)
    IDENTIFIER      shift and go to state 9
    BAHIRA          shift and go to state 4
    ARKO            shift and go to state 5
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    dynamString                    shift and go to state 2
    stmt                           shift and go to state 13
    exp                            shift and go to state 18
    element                        shift and go to state 17
    N                              shift and go to state 91

state 50

    (38) exp -> exp LE . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 92

state 51

    (46) exp -> exp DIVIDE . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 93

state 52

    (47) exp -> exp POWER . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 94

state 53

    (48) exp -> exp MODULUS . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 95

state 54

    (41) exp -> exp LT . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 96

state 55

    (40) exp -> exp NE . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 97

state 56

    (29) stmt -> exp PATHAU .

    NEWLINE         reduce using rule 29 (stmt -> exp PATHAU .)
    $end            reduce using rule 29 (stmt -> exp PATHAU .)


state 57

    (39) exp -> exp GE . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 98

state 58

    (42) exp -> exp GT . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 99

state 59

    (64) dynamString -> exp COMMA . dynamString
    (64) dynamString -> . exp COMMA dynamString
    (65) dynamString -> . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 86
    dynamString                    shift and go to state 100

state 60

    (49) exp -> exp RA . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 101

state 61

    (43) exp -> exp PLUS . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 102

state 62

    (50) exp -> exp WA . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 103

state 63

    (45) exp -> exp TIMES . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 104

state 64

    (37) exp -> exp EQ . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 105

state 65

    (44) exp -> exp MINUS . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 106

state 66

    (57) exp -> IDENTIFIER LGPARA . exp RGPARA
    (59) exp -> IDENTIFIER LGPARA . sliceexp COLON sliceexp RGPARA
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA
    (60) sliceexp -> . exp
    (61) sliceexp -> .

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11
    COLON           reduce using rule 61 (sliceexp -> .)

    exp                            shift and go to state 107
    sliceexp                       shift and go to state 77

state 67

    (63) exp -> IDENTIFIER LPARA . variableexp RPARA
    (34) variableexp -> . exp COMMA variableexp
    (35) variableexp -> . exp
    (36) variableexp -> .
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    RPARA           reduce using rule 36 (variableexp -> .)
    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 48
    variableexp                    shift and go to state 108

state 68

    (67) condition -> condition WA . condition
    (66) condition -> . condition RA condition
    (67) condition -> . condition WA condition
    (68) condition -> . exp BHAE
    (69) condition -> . exp NABHAE
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 22
    condition                      shift and go to state 109

state 69

    (22) stmt -> YEDI condition NEWLINE . cmpdstmt optelse DIYE
    (70) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (71) cmpdstmt -> .
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER LUKAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (23) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (27) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (28) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (29) stmt -> . exp PATHAU
    (30) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (64) dynamString -> . exp COMMA dynamString
    (65) dynamString -> . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    ATHAWA          reduce using rule 71 (cmpdstmt -> .)
    DIYE            reduce using rule 71 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 9
    BAHIRA          shift and go to state 4
    ARKO            shift and go to state 5
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    stmt                           shift and go to state 110
    dynamString                    shift and go to state 2
    cmpdstmt                       shift and go to state 111
    exp                            shift and go to state 18

state 70

    (66) condition -> condition RA . condition
    (66) condition -> . condition RA condition
    (67) condition -> . condition WA condition
    (68) condition -> . exp BHAE
    (69) condition -> . exp NABHAE
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 22
    condition                      shift and go to state 112

state 71

    (68) condition -> exp BHAE .

    NEWLINE         reduce using rule 68 (condition -> exp BHAE .)
    RA              reduce using rule 68 (condition -> exp BHAE .)
    WA              reduce using rule 68 (condition -> exp BHAE .)


state 72

    (69) condition -> exp NABHAE .

    NEWLINE         reduce using rule 69 (condition -> exp NABHAE .)
    RA              reduce using rule 69 (condition -> exp NABHAE .)
    WA              reduce using rule 69 (condition -> exp NABHAE .)


state 73

    (8) stmt -> dynamString LEKHA SEMICOLON .

    NEWLINE         reduce using rule 8 (stmt -> dynamString LEKHA SEMICOLON .)
    $end            reduce using rule 8 (stmt -> dynamString LEKHA SEMICOLON .)


state 74

    (27) stmt -> KAAM IDENTIFIER LPARA . variableArgs RPARA NEWLINE cmpdstmt MAKA
    (31) variableArgs -> . IDENTIFIER COMMA variableArgs
    (32) variableArgs -> . IDENTIFIER
    (33) variableArgs -> .

    IDENTIFIER      shift and go to state 114
    RPARA           reduce using rule 33 (variableArgs -> .)

    variableArgs                   shift and go to state 113

state 75

    (25) stmt -> JABA SAMMA whilecond . NEWLINE cmpdstmt BAJA
    (80) whilecond -> whilecond . RA whilecond
    (81) whilecond -> whilecond . WA whilecond

    NEWLINE         shift and go to state 116
    RA              shift and go to state 117
    WA              shift and go to state 115


state 76

    (82) whilecond -> exp . CHHA
    (83) whilecond -> exp . CHHAINA
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    CHHA            shift and go to state 118
    CHHAINA         shift and go to state 119
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62


state 77

    (59) exp -> IDENTIFIER LGPARA sliceexp . COLON sliceexp RGPARA

    COLON           shift and go to state 120


state 78

    (30) stmt -> IDENTIFIER LGPARA exp . RGPARA ASSIGNMENT exp
    (57) exp -> IDENTIFIER LGPARA exp . RGPARA
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp
    (60) sliceexp -> exp .

    RGPARA          shift and go to state 121
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62
    COLON           reduce using rule 60 (sliceexp -> exp .)


state 79

    (13) stmt -> IDENTIFIER BATA IDENTIFIER . LEU

    LEU             shift and go to state 122


state 80

    (26) stmt -> IDENTIFIER ASSIGNMENT LGPARA . variableexp RGPARA
    (56) exp -> LGPARA . variableexp RGPARA
    (34) variableexp -> . exp COMMA variableexp
    (35) variableexp -> . exp
    (36) variableexp -> .
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    RGPARA          reduce using rule 36 (variableexp -> .)
    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 48
    variableexp                    shift and go to state 123

state 81

    (6) stmt -> IDENTIFIER ASSIGNMENT exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    NEWLINE         reduce using rule 6 (stmt -> IDENTIFIER ASSIGNMENT exp .)
    $end            reduce using rule 6 (stmt -> IDENTIFIER ASSIGNMENT exp .)
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62


state 82

    (21) stmt -> IDENTIFIER incrementsign ASSIGNMENT . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 124

state 83

    (28) stmt -> IDENTIFIER LPARA variableexp . RPARA
    (63) exp -> IDENTIFIER LPARA variableexp . RPARA

    RPARA           shift and go to state 125


state 84

    (11) stmt -> IDENTIFIER MA dynamString . LEKHA SEMICOLON
    (12) stmt -> IDENTIFIER MA dynamString . LEKHA

    LEKHA           shift and go to state 126


state 85

    (19) stmt -> IDENTIFIER MA IDENTIFIER . KORA variableexp
    (51) exp -> IDENTIFIER .
    (57) exp -> IDENTIFIER . LGPARA exp RGPARA
    (59) exp -> IDENTIFIER . LGPARA sliceexp COLON sliceexp RGPARA
    (63) exp -> IDENTIFIER . LPARA variableexp RPARA

    KORA            shift and go to state 127
    COMMA           reduce using rule 51 (exp -> IDENTIFIER .)
    EQ              reduce using rule 51 (exp -> IDENTIFIER .)
    LE              reduce using rule 51 (exp -> IDENTIFIER .)
    GE              reduce using rule 51 (exp -> IDENTIFIER .)
    NE              reduce using rule 51 (exp -> IDENTIFIER .)
    LT              reduce using rule 51 (exp -> IDENTIFIER .)
    GT              reduce using rule 51 (exp -> IDENTIFIER .)
    PLUS            reduce using rule 51 (exp -> IDENTIFIER .)
    MINUS           reduce using rule 51 (exp -> IDENTIFIER .)
    TIMES           reduce using rule 51 (exp -> IDENTIFIER .)
    DIVIDE          reduce using rule 51 (exp -> IDENTIFIER .)
    POWER           reduce using rule 51 (exp -> IDENTIFIER .)
    MODULUS         reduce using rule 51 (exp -> IDENTIFIER .)
    RA              reduce using rule 51 (exp -> IDENTIFIER .)
    WA              reduce using rule 51 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 51 (exp -> IDENTIFIER .)
    LGPARA          shift and go to state 66
    LPARA           shift and go to state 67


state 86

    (64) dynamString -> exp . COMMA dynamString
    (65) dynamString -> exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    COMMA           shift and go to state 59
    LEKHA           reduce using rule 65 (dynamString -> exp .)
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62


state 87

    (23) stmt -> SABEI IDENTIFIER ASSIGNMENT . exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) stmt -> SABEI IDENTIFIER ASSIGNMENT . exp DEKHI exp NEWLINE cmpdstmt BAISA
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 128

state 88

    (58) exp -> LPARA exp RPARA .
    (62) exp -> LPARA exp RPARA . QUESTION exp COLON exp

    EQ              reduce using rule 58 (exp -> LPARA exp RPARA .)
    LE              reduce using rule 58 (exp -> LPARA exp RPARA .)
    GE              reduce using rule 58 (exp -> LPARA exp RPARA .)
    NE              reduce using rule 58 (exp -> LPARA exp RPARA .)
    LT              reduce using rule 58 (exp -> LPARA exp RPARA .)
    GT              reduce using rule 58 (exp -> LPARA exp RPARA .)
    PLUS            reduce using rule 58 (exp -> LPARA exp RPARA .)
    MINUS           reduce using rule 58 (exp -> LPARA exp RPARA .)
    TIMES           reduce using rule 58 (exp -> LPARA exp RPARA .)
    DIVIDE          reduce using rule 58 (exp -> LPARA exp RPARA .)
    POWER           reduce using rule 58 (exp -> LPARA exp RPARA .)
    MODULUS         reduce using rule 58 (exp -> LPARA exp RPARA .)
    RA              reduce using rule 58 (exp -> LPARA exp RPARA .)
    WA              reduce using rule 58 (exp -> LPARA exp RPARA .)
    PATHAU          reduce using rule 58 (exp -> LPARA exp RPARA .)
    COMMA           reduce using rule 58 (exp -> LPARA exp RPARA .)
    LEKHA           reduce using rule 58 (exp -> LPARA exp RPARA .)
    BHAE            reduce using rule 58 (exp -> LPARA exp RPARA .)
    NABHAE          reduce using rule 58 (exp -> LPARA exp RPARA .)
    RPARA           reduce using rule 58 (exp -> LPARA exp RPARA .)
    RGPARA          reduce using rule 58 (exp -> LPARA exp RPARA .)
    CHHA            reduce using rule 58 (exp -> LPARA exp RPARA .)
    CHHAINA         reduce using rule 58 (exp -> LPARA exp RPARA .)
    COLON           reduce using rule 58 (exp -> LPARA exp RPARA .)
    NEWLINE         reduce using rule 58 (exp -> LPARA exp RPARA .)
    $end            reduce using rule 58 (exp -> LPARA exp RPARA .)
    DEKHI           reduce using rule 58 (exp -> LPARA exp RPARA .)
    SEMICOLON       reduce using rule 58 (exp -> LPARA exp RPARA .)
    QUESTION        shift and go to state 129


state 89

    (56) exp -> LGPARA variableexp RGPARA .

    EQ              reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    LE              reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    GE              reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    NE              reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    LT              reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    GT              reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    PLUS            reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    MINUS           reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    TIMES           reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    DIVIDE          reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    POWER           reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    MODULUS         reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    RA              reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    WA              reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    PATHAU          reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    COMMA           reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    LEKHA           reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    BHAE            reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    NABHAE          reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    RPARA           reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    RGPARA          reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    CHHA            reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    CHHAINA         reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    COLON           reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    NEWLINE         reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    $end            reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    DEKHI           reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    SEMICOLON       reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)


state 90

    (34) variableexp -> exp COMMA . variableexp
    (34) variableexp -> . exp COMMA variableexp
    (35) variableexp -> . exp
    (36) variableexp -> .
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    RGPARA          reduce using rule 36 (variableexp -> .)
    RPARA           reduce using rule 36 (variableexp -> .)
    NEWLINE         reduce using rule 36 (variableexp -> .)
    $end            reduce using rule 36 (variableexp -> .)
    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    variableexp                    shift and go to state 130
    exp                            shift and go to state 48

state 91

    (1) N -> element NEWLINE N .

    $end            reduce using rule 1 (N -> element NEWLINE N .)


state 92

    (38) exp -> exp LE exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    EQ              reduce using rule 38 (exp -> exp LE exp .)
    LE              reduce using rule 38 (exp -> exp LE exp .)
    GE              reduce using rule 38 (exp -> exp LE exp .)
    NE              reduce using rule 38 (exp -> exp LE exp .)
    LT              reduce using rule 38 (exp -> exp LE exp .)
    GT              reduce using rule 38 (exp -> exp LE exp .)
    MODULUS         reduce using rule 38 (exp -> exp LE exp .)
    RA              reduce using rule 38 (exp -> exp LE exp .)
    WA              reduce using rule 38 (exp -> exp LE exp .)
    PATHAU          reduce using rule 38 (exp -> exp LE exp .)
    COMMA           reduce using rule 38 (exp -> exp LE exp .)
    LEKHA           reduce using rule 38 (exp -> exp LE exp .)
    BHAE            reduce using rule 38 (exp -> exp LE exp .)
    NABHAE          reduce using rule 38 (exp -> exp LE exp .)
    RPARA           reduce using rule 38 (exp -> exp LE exp .)
    RGPARA          reduce using rule 38 (exp -> exp LE exp .)
    CHHA            reduce using rule 38 (exp -> exp LE exp .)
    CHHAINA         reduce using rule 38 (exp -> exp LE exp .)
    COLON           reduce using rule 38 (exp -> exp LE exp .)
    NEWLINE         reduce using rule 38 (exp -> exp LE exp .)
    $end            reduce using rule 38 (exp -> exp LE exp .)
    DEKHI           reduce using rule 38 (exp -> exp LE exp .)
    SEMICOLON       reduce using rule 38 (exp -> exp LE exp .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52

  ! PLUS            [ reduce using rule 38 (exp -> exp LE exp .) ]
  ! MINUS           [ reduce using rule 38 (exp -> exp LE exp .) ]
  ! TIMES           [ reduce using rule 38 (exp -> exp LE exp .) ]
  ! DIVIDE          [ reduce using rule 38 (exp -> exp LE exp .) ]
  ! POWER           [ reduce using rule 38 (exp -> exp LE exp .) ]
  ! EQ              [ shift and go to state 64 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 57 ]
  ! NE              [ shift and go to state 55 ]
  ! LT              [ shift and go to state 54 ]
  ! GT              [ shift and go to state 58 ]
  ! MODULUS         [ shift and go to state 53 ]
  ! RA              [ shift and go to state 60 ]
  ! WA              [ shift and go to state 62 ]


state 93

    (46) exp -> exp DIVIDE exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    EQ              reduce using rule 46 (exp -> exp DIVIDE exp .)
    LE              reduce using rule 46 (exp -> exp DIVIDE exp .)
    GE              reduce using rule 46 (exp -> exp DIVIDE exp .)
    NE              reduce using rule 46 (exp -> exp DIVIDE exp .)
    LT              reduce using rule 46 (exp -> exp DIVIDE exp .)
    GT              reduce using rule 46 (exp -> exp DIVIDE exp .)
    PLUS            reduce using rule 46 (exp -> exp DIVIDE exp .)
    MINUS           reduce using rule 46 (exp -> exp DIVIDE exp .)
    TIMES           reduce using rule 46 (exp -> exp DIVIDE exp .)
    DIVIDE          reduce using rule 46 (exp -> exp DIVIDE exp .)
    POWER           reduce using rule 46 (exp -> exp DIVIDE exp .)
    MODULUS         reduce using rule 46 (exp -> exp DIVIDE exp .)
    RA              reduce using rule 46 (exp -> exp DIVIDE exp .)
    WA              reduce using rule 46 (exp -> exp DIVIDE exp .)
    PATHAU          reduce using rule 46 (exp -> exp DIVIDE exp .)
    COMMA           reduce using rule 46 (exp -> exp DIVIDE exp .)
    LEKHA           reduce using rule 46 (exp -> exp DIVIDE exp .)
    BHAE            reduce using rule 46 (exp -> exp DIVIDE exp .)
    NABHAE          reduce using rule 46 (exp -> exp DIVIDE exp .)
    RPARA           reduce using rule 46 (exp -> exp DIVIDE exp .)
    RGPARA          reduce using rule 46 (exp -> exp DIVIDE exp .)
    CHHA            reduce using rule 46 (exp -> exp DIVIDE exp .)
    CHHAINA         reduce using rule 46 (exp -> exp DIVIDE exp .)
    COLON           reduce using rule 46 (exp -> exp DIVIDE exp .)
    NEWLINE         reduce using rule 46 (exp -> exp DIVIDE exp .)
    $end            reduce using rule 46 (exp -> exp DIVIDE exp .)
    DEKHI           reduce using rule 46 (exp -> exp DIVIDE exp .)
    SEMICOLON       reduce using rule 46 (exp -> exp DIVIDE exp .)

  ! EQ              [ shift and go to state 64 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 57 ]
  ! NE              [ shift and go to state 55 ]
  ! LT              [ shift and go to state 54 ]
  ! GT              [ shift and go to state 58 ]
  ! PLUS            [ shift and go to state 61 ]
  ! MINUS           [ shift and go to state 65 ]
  ! TIMES           [ shift and go to state 63 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! POWER           [ shift and go to state 52 ]
  ! MODULUS         [ shift and go to state 53 ]
  ! RA              [ shift and go to state 60 ]
  ! WA              [ shift and go to state 62 ]


state 94

    (47) exp -> exp POWER exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    EQ              reduce using rule 47 (exp -> exp POWER exp .)
    LE              reduce using rule 47 (exp -> exp POWER exp .)
    GE              reduce using rule 47 (exp -> exp POWER exp .)
    NE              reduce using rule 47 (exp -> exp POWER exp .)
    LT              reduce using rule 47 (exp -> exp POWER exp .)
    GT              reduce using rule 47 (exp -> exp POWER exp .)
    PLUS            reduce using rule 47 (exp -> exp POWER exp .)
    MINUS           reduce using rule 47 (exp -> exp POWER exp .)
    TIMES           reduce using rule 47 (exp -> exp POWER exp .)
    DIVIDE          reduce using rule 47 (exp -> exp POWER exp .)
    POWER           reduce using rule 47 (exp -> exp POWER exp .)
    MODULUS         reduce using rule 47 (exp -> exp POWER exp .)
    RA              reduce using rule 47 (exp -> exp POWER exp .)
    WA              reduce using rule 47 (exp -> exp POWER exp .)
    PATHAU          reduce using rule 47 (exp -> exp POWER exp .)
    COMMA           reduce using rule 47 (exp -> exp POWER exp .)
    LEKHA           reduce using rule 47 (exp -> exp POWER exp .)
    BHAE            reduce using rule 47 (exp -> exp POWER exp .)
    NABHAE          reduce using rule 47 (exp -> exp POWER exp .)
    RPARA           reduce using rule 47 (exp -> exp POWER exp .)
    RGPARA          reduce using rule 47 (exp -> exp POWER exp .)
    CHHA            reduce using rule 47 (exp -> exp POWER exp .)
    CHHAINA         reduce using rule 47 (exp -> exp POWER exp .)
    COLON           reduce using rule 47 (exp -> exp POWER exp .)
    NEWLINE         reduce using rule 47 (exp -> exp POWER exp .)
    $end            reduce using rule 47 (exp -> exp POWER exp .)
    DEKHI           reduce using rule 47 (exp -> exp POWER exp .)
    SEMICOLON       reduce using rule 47 (exp -> exp POWER exp .)

  ! EQ              [ shift and go to state 64 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 57 ]
  ! NE              [ shift and go to state 55 ]
  ! LT              [ shift and go to state 54 ]
  ! GT              [ shift and go to state 58 ]
  ! PLUS            [ shift and go to state 61 ]
  ! MINUS           [ shift and go to state 65 ]
  ! TIMES           [ shift and go to state 63 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! POWER           [ shift and go to state 52 ]
  ! MODULUS         [ shift and go to state 53 ]
  ! RA              [ shift and go to state 60 ]
  ! WA              [ shift and go to state 62 ]


state 95

    (48) exp -> exp MODULUS exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 48 (exp -> exp MODULUS exp .)
    COMMA           reduce using rule 48 (exp -> exp MODULUS exp .)
    LEKHA           reduce using rule 48 (exp -> exp MODULUS exp .)
    BHAE            reduce using rule 48 (exp -> exp MODULUS exp .)
    NABHAE          reduce using rule 48 (exp -> exp MODULUS exp .)
    RPARA           reduce using rule 48 (exp -> exp MODULUS exp .)
    RGPARA          reduce using rule 48 (exp -> exp MODULUS exp .)
    CHHA            reduce using rule 48 (exp -> exp MODULUS exp .)
    CHHAINA         reduce using rule 48 (exp -> exp MODULUS exp .)
    COLON           reduce using rule 48 (exp -> exp MODULUS exp .)
    NEWLINE         reduce using rule 48 (exp -> exp MODULUS exp .)
    $end            reduce using rule 48 (exp -> exp MODULUS exp .)
    DEKHI           reduce using rule 48 (exp -> exp MODULUS exp .)
    SEMICOLON       reduce using rule 48 (exp -> exp MODULUS exp .)
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62

  ! EQ              [ reduce using rule 48 (exp -> exp MODULUS exp .) ]
  ! LE              [ reduce using rule 48 (exp -> exp MODULUS exp .) ]
  ! GE              [ reduce using rule 48 (exp -> exp MODULUS exp .) ]
  ! NE              [ reduce using rule 48 (exp -> exp MODULUS exp .) ]
  ! LT              [ reduce using rule 48 (exp -> exp MODULUS exp .) ]
  ! GT              [ reduce using rule 48 (exp -> exp MODULUS exp .) ]
  ! PLUS            [ reduce using rule 48 (exp -> exp MODULUS exp .) ]
  ! MINUS           [ reduce using rule 48 (exp -> exp MODULUS exp .) ]
  ! TIMES           [ reduce using rule 48 (exp -> exp MODULUS exp .) ]
  ! DIVIDE          [ reduce using rule 48 (exp -> exp MODULUS exp .) ]
  ! POWER           [ reduce using rule 48 (exp -> exp MODULUS exp .) ]
  ! MODULUS         [ reduce using rule 48 (exp -> exp MODULUS exp .) ]
  ! RA              [ reduce using rule 48 (exp -> exp MODULUS exp .) ]
  ! WA              [ reduce using rule 48 (exp -> exp MODULUS exp .) ]


state 96

    (41) exp -> exp LT exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    EQ              reduce using rule 41 (exp -> exp LT exp .)
    LE              reduce using rule 41 (exp -> exp LT exp .)
    GE              reduce using rule 41 (exp -> exp LT exp .)
    NE              reduce using rule 41 (exp -> exp LT exp .)
    LT              reduce using rule 41 (exp -> exp LT exp .)
    GT              reduce using rule 41 (exp -> exp LT exp .)
    MODULUS         reduce using rule 41 (exp -> exp LT exp .)
    RA              reduce using rule 41 (exp -> exp LT exp .)
    WA              reduce using rule 41 (exp -> exp LT exp .)
    PATHAU          reduce using rule 41 (exp -> exp LT exp .)
    COMMA           reduce using rule 41 (exp -> exp LT exp .)
    LEKHA           reduce using rule 41 (exp -> exp LT exp .)
    BHAE            reduce using rule 41 (exp -> exp LT exp .)
    NABHAE          reduce using rule 41 (exp -> exp LT exp .)
    RPARA           reduce using rule 41 (exp -> exp LT exp .)
    RGPARA          reduce using rule 41 (exp -> exp LT exp .)
    CHHA            reduce using rule 41 (exp -> exp LT exp .)
    CHHAINA         reduce using rule 41 (exp -> exp LT exp .)
    COLON           reduce using rule 41 (exp -> exp LT exp .)
    NEWLINE         reduce using rule 41 (exp -> exp LT exp .)
    $end            reduce using rule 41 (exp -> exp LT exp .)
    DEKHI           reduce using rule 41 (exp -> exp LT exp .)
    SEMICOLON       reduce using rule 41 (exp -> exp LT exp .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52

  ! PLUS            [ reduce using rule 41 (exp -> exp LT exp .) ]
  ! MINUS           [ reduce using rule 41 (exp -> exp LT exp .) ]
  ! TIMES           [ reduce using rule 41 (exp -> exp LT exp .) ]
  ! DIVIDE          [ reduce using rule 41 (exp -> exp LT exp .) ]
  ! POWER           [ reduce using rule 41 (exp -> exp LT exp .) ]
  ! EQ              [ shift and go to state 64 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 57 ]
  ! NE              [ shift and go to state 55 ]
  ! LT              [ shift and go to state 54 ]
  ! GT              [ shift and go to state 58 ]
  ! MODULUS         [ shift and go to state 53 ]
  ! RA              [ shift and go to state 60 ]
  ! WA              [ shift and go to state 62 ]


state 97

    (40) exp -> exp NE exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 40 (exp -> exp NE exp .)
    COMMA           reduce using rule 40 (exp -> exp NE exp .)
    LEKHA           reduce using rule 40 (exp -> exp NE exp .)
    BHAE            reduce using rule 40 (exp -> exp NE exp .)
    NABHAE          reduce using rule 40 (exp -> exp NE exp .)
    RPARA           reduce using rule 40 (exp -> exp NE exp .)
    RGPARA          reduce using rule 40 (exp -> exp NE exp .)
    CHHA            reduce using rule 40 (exp -> exp NE exp .)
    CHHAINA         reduce using rule 40 (exp -> exp NE exp .)
    COLON           reduce using rule 40 (exp -> exp NE exp .)
    NEWLINE         reduce using rule 40 (exp -> exp NE exp .)
    $end            reduce using rule 40 (exp -> exp NE exp .)
    DEKHI           reduce using rule 40 (exp -> exp NE exp .)
    SEMICOLON       reduce using rule 40 (exp -> exp NE exp .)
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62

  ! EQ              [ reduce using rule 40 (exp -> exp NE exp .) ]
  ! LE              [ reduce using rule 40 (exp -> exp NE exp .) ]
  ! GE              [ reduce using rule 40 (exp -> exp NE exp .) ]
  ! NE              [ reduce using rule 40 (exp -> exp NE exp .) ]
  ! LT              [ reduce using rule 40 (exp -> exp NE exp .) ]
  ! GT              [ reduce using rule 40 (exp -> exp NE exp .) ]
  ! PLUS            [ reduce using rule 40 (exp -> exp NE exp .) ]
  ! MINUS           [ reduce using rule 40 (exp -> exp NE exp .) ]
  ! TIMES           [ reduce using rule 40 (exp -> exp NE exp .) ]
  ! DIVIDE          [ reduce using rule 40 (exp -> exp NE exp .) ]
  ! POWER           [ reduce using rule 40 (exp -> exp NE exp .) ]
  ! MODULUS         [ reduce using rule 40 (exp -> exp NE exp .) ]
  ! RA              [ reduce using rule 40 (exp -> exp NE exp .) ]
  ! WA              [ reduce using rule 40 (exp -> exp NE exp .) ]


state 98

    (39) exp -> exp GE exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    EQ              reduce using rule 39 (exp -> exp GE exp .)
    LE              reduce using rule 39 (exp -> exp GE exp .)
    GE              reduce using rule 39 (exp -> exp GE exp .)
    NE              reduce using rule 39 (exp -> exp GE exp .)
    LT              reduce using rule 39 (exp -> exp GE exp .)
    GT              reduce using rule 39 (exp -> exp GE exp .)
    MODULUS         reduce using rule 39 (exp -> exp GE exp .)
    RA              reduce using rule 39 (exp -> exp GE exp .)
    WA              reduce using rule 39 (exp -> exp GE exp .)
    PATHAU          reduce using rule 39 (exp -> exp GE exp .)
    COMMA           reduce using rule 39 (exp -> exp GE exp .)
    LEKHA           reduce using rule 39 (exp -> exp GE exp .)
    BHAE            reduce using rule 39 (exp -> exp GE exp .)
    NABHAE          reduce using rule 39 (exp -> exp GE exp .)
    RPARA           reduce using rule 39 (exp -> exp GE exp .)
    RGPARA          reduce using rule 39 (exp -> exp GE exp .)
    CHHA            reduce using rule 39 (exp -> exp GE exp .)
    CHHAINA         reduce using rule 39 (exp -> exp GE exp .)
    COLON           reduce using rule 39 (exp -> exp GE exp .)
    NEWLINE         reduce using rule 39 (exp -> exp GE exp .)
    $end            reduce using rule 39 (exp -> exp GE exp .)
    DEKHI           reduce using rule 39 (exp -> exp GE exp .)
    SEMICOLON       reduce using rule 39 (exp -> exp GE exp .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52

  ! PLUS            [ reduce using rule 39 (exp -> exp GE exp .) ]
  ! MINUS           [ reduce using rule 39 (exp -> exp GE exp .) ]
  ! TIMES           [ reduce using rule 39 (exp -> exp GE exp .) ]
  ! DIVIDE          [ reduce using rule 39 (exp -> exp GE exp .) ]
  ! POWER           [ reduce using rule 39 (exp -> exp GE exp .) ]
  ! EQ              [ shift and go to state 64 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 57 ]
  ! NE              [ shift and go to state 55 ]
  ! LT              [ shift and go to state 54 ]
  ! GT              [ shift and go to state 58 ]
  ! MODULUS         [ shift and go to state 53 ]
  ! RA              [ shift and go to state 60 ]
  ! WA              [ shift and go to state 62 ]


state 99

    (42) exp -> exp GT exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    EQ              reduce using rule 42 (exp -> exp GT exp .)
    LE              reduce using rule 42 (exp -> exp GT exp .)
    GE              reduce using rule 42 (exp -> exp GT exp .)
    NE              reduce using rule 42 (exp -> exp GT exp .)
    LT              reduce using rule 42 (exp -> exp GT exp .)
    GT              reduce using rule 42 (exp -> exp GT exp .)
    MODULUS         reduce using rule 42 (exp -> exp GT exp .)
    RA              reduce using rule 42 (exp -> exp GT exp .)
    WA              reduce using rule 42 (exp -> exp GT exp .)
    PATHAU          reduce using rule 42 (exp -> exp GT exp .)
    COMMA           reduce using rule 42 (exp -> exp GT exp .)
    LEKHA           reduce using rule 42 (exp -> exp GT exp .)
    BHAE            reduce using rule 42 (exp -> exp GT exp .)
    NABHAE          reduce using rule 42 (exp -> exp GT exp .)
    RPARA           reduce using rule 42 (exp -> exp GT exp .)
    RGPARA          reduce using rule 42 (exp -> exp GT exp .)
    CHHA            reduce using rule 42 (exp -> exp GT exp .)
    CHHAINA         reduce using rule 42 (exp -> exp GT exp .)
    COLON           reduce using rule 42 (exp -> exp GT exp .)
    NEWLINE         reduce using rule 42 (exp -> exp GT exp .)
    $end            reduce using rule 42 (exp -> exp GT exp .)
    DEKHI           reduce using rule 42 (exp -> exp GT exp .)
    SEMICOLON       reduce using rule 42 (exp -> exp GT exp .)
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52

  ! PLUS            [ reduce using rule 42 (exp -> exp GT exp .) ]
  ! MINUS           [ reduce using rule 42 (exp -> exp GT exp .) ]
  ! TIMES           [ reduce using rule 42 (exp -> exp GT exp .) ]
  ! DIVIDE          [ reduce using rule 42 (exp -> exp GT exp .) ]
  ! POWER           [ reduce using rule 42 (exp -> exp GT exp .) ]
  ! EQ              [ shift and go to state 64 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 57 ]
  ! NE              [ shift and go to state 55 ]
  ! LT              [ shift and go to state 54 ]
  ! GT              [ shift and go to state 58 ]
  ! MODULUS         [ shift and go to state 53 ]
  ! RA              [ shift and go to state 60 ]
  ! WA              [ shift and go to state 62 ]


state 100

    (64) dynamString -> exp COMMA dynamString .

    LEKHA           reduce using rule 64 (dynamString -> exp COMMA dynamString .)


state 101

    (49) exp -> exp RA exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 49 (exp -> exp RA exp .)
    COMMA           reduce using rule 49 (exp -> exp RA exp .)
    LEKHA           reduce using rule 49 (exp -> exp RA exp .)
    BHAE            reduce using rule 49 (exp -> exp RA exp .)
    NABHAE          reduce using rule 49 (exp -> exp RA exp .)
    RPARA           reduce using rule 49 (exp -> exp RA exp .)
    RGPARA          reduce using rule 49 (exp -> exp RA exp .)
    CHHA            reduce using rule 49 (exp -> exp RA exp .)
    CHHAINA         reduce using rule 49 (exp -> exp RA exp .)
    COLON           reduce using rule 49 (exp -> exp RA exp .)
    NEWLINE         reduce using rule 49 (exp -> exp RA exp .)
    $end            reduce using rule 49 (exp -> exp RA exp .)
    DEKHI           reduce using rule 49 (exp -> exp RA exp .)
    SEMICOLON       reduce using rule 49 (exp -> exp RA exp .)
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62

  ! EQ              [ reduce using rule 49 (exp -> exp RA exp .) ]
  ! LE              [ reduce using rule 49 (exp -> exp RA exp .) ]
  ! GE              [ reduce using rule 49 (exp -> exp RA exp .) ]
  ! NE              [ reduce using rule 49 (exp -> exp RA exp .) ]
  ! LT              [ reduce using rule 49 (exp -> exp RA exp .) ]
  ! GT              [ reduce using rule 49 (exp -> exp RA exp .) ]
  ! PLUS            [ reduce using rule 49 (exp -> exp RA exp .) ]
  ! MINUS           [ reduce using rule 49 (exp -> exp RA exp .) ]
  ! TIMES           [ reduce using rule 49 (exp -> exp RA exp .) ]
  ! DIVIDE          [ reduce using rule 49 (exp -> exp RA exp .) ]
  ! POWER           [ reduce using rule 49 (exp -> exp RA exp .) ]
  ! MODULUS         [ reduce using rule 49 (exp -> exp RA exp .) ]
  ! RA              [ reduce using rule 49 (exp -> exp RA exp .) ]
  ! WA              [ reduce using rule 49 (exp -> exp RA exp .) ]


state 102

    (43) exp -> exp PLUS exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    EQ              reduce using rule 43 (exp -> exp PLUS exp .)
    LE              reduce using rule 43 (exp -> exp PLUS exp .)
    GE              reduce using rule 43 (exp -> exp PLUS exp .)
    NE              reduce using rule 43 (exp -> exp PLUS exp .)
    LT              reduce using rule 43 (exp -> exp PLUS exp .)
    GT              reduce using rule 43 (exp -> exp PLUS exp .)
    PLUS            reduce using rule 43 (exp -> exp PLUS exp .)
    MINUS           reduce using rule 43 (exp -> exp PLUS exp .)
    MODULUS         reduce using rule 43 (exp -> exp PLUS exp .)
    RA              reduce using rule 43 (exp -> exp PLUS exp .)
    WA              reduce using rule 43 (exp -> exp PLUS exp .)
    PATHAU          reduce using rule 43 (exp -> exp PLUS exp .)
    COMMA           reduce using rule 43 (exp -> exp PLUS exp .)
    LEKHA           reduce using rule 43 (exp -> exp PLUS exp .)
    BHAE            reduce using rule 43 (exp -> exp PLUS exp .)
    NABHAE          reduce using rule 43 (exp -> exp PLUS exp .)
    RPARA           reduce using rule 43 (exp -> exp PLUS exp .)
    RGPARA          reduce using rule 43 (exp -> exp PLUS exp .)
    CHHA            reduce using rule 43 (exp -> exp PLUS exp .)
    CHHAINA         reduce using rule 43 (exp -> exp PLUS exp .)
    COLON           reduce using rule 43 (exp -> exp PLUS exp .)
    NEWLINE         reduce using rule 43 (exp -> exp PLUS exp .)
    $end            reduce using rule 43 (exp -> exp PLUS exp .)
    DEKHI           reduce using rule 43 (exp -> exp PLUS exp .)
    SEMICOLON       reduce using rule 43 (exp -> exp PLUS exp .)
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52

  ! TIMES           [ reduce using rule 43 (exp -> exp PLUS exp .) ]
  ! DIVIDE          [ reduce using rule 43 (exp -> exp PLUS exp .) ]
  ! POWER           [ reduce using rule 43 (exp -> exp PLUS exp .) ]
  ! EQ              [ shift and go to state 64 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 57 ]
  ! NE              [ shift and go to state 55 ]
  ! LT              [ shift and go to state 54 ]
  ! GT              [ shift and go to state 58 ]
  ! PLUS            [ shift and go to state 61 ]
  ! MINUS           [ shift and go to state 65 ]
  ! MODULUS         [ shift and go to state 53 ]
  ! RA              [ shift and go to state 60 ]
  ! WA              [ shift and go to state 62 ]


state 103

    (50) exp -> exp WA exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 50 (exp -> exp WA exp .)
    COMMA           reduce using rule 50 (exp -> exp WA exp .)
    LEKHA           reduce using rule 50 (exp -> exp WA exp .)
    BHAE            reduce using rule 50 (exp -> exp WA exp .)
    NABHAE          reduce using rule 50 (exp -> exp WA exp .)
    RPARA           reduce using rule 50 (exp -> exp WA exp .)
    RGPARA          reduce using rule 50 (exp -> exp WA exp .)
    CHHA            reduce using rule 50 (exp -> exp WA exp .)
    CHHAINA         reduce using rule 50 (exp -> exp WA exp .)
    COLON           reduce using rule 50 (exp -> exp WA exp .)
    NEWLINE         reduce using rule 50 (exp -> exp WA exp .)
    $end            reduce using rule 50 (exp -> exp WA exp .)
    DEKHI           reduce using rule 50 (exp -> exp WA exp .)
    SEMICOLON       reduce using rule 50 (exp -> exp WA exp .)
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62

  ! EQ              [ reduce using rule 50 (exp -> exp WA exp .) ]
  ! LE              [ reduce using rule 50 (exp -> exp WA exp .) ]
  ! GE              [ reduce using rule 50 (exp -> exp WA exp .) ]
  ! NE              [ reduce using rule 50 (exp -> exp WA exp .) ]
  ! LT              [ reduce using rule 50 (exp -> exp WA exp .) ]
  ! GT              [ reduce using rule 50 (exp -> exp WA exp .) ]
  ! PLUS            [ reduce using rule 50 (exp -> exp WA exp .) ]
  ! MINUS           [ reduce using rule 50 (exp -> exp WA exp .) ]
  ! TIMES           [ reduce using rule 50 (exp -> exp WA exp .) ]
  ! DIVIDE          [ reduce using rule 50 (exp -> exp WA exp .) ]
  ! POWER           [ reduce using rule 50 (exp -> exp WA exp .) ]
  ! MODULUS         [ reduce using rule 50 (exp -> exp WA exp .) ]
  ! RA              [ reduce using rule 50 (exp -> exp WA exp .) ]
  ! WA              [ reduce using rule 50 (exp -> exp WA exp .) ]


state 104

    (45) exp -> exp TIMES exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    EQ              reduce using rule 45 (exp -> exp TIMES exp .)
    LE              reduce using rule 45 (exp -> exp TIMES exp .)
    GE              reduce using rule 45 (exp -> exp TIMES exp .)
    NE              reduce using rule 45 (exp -> exp TIMES exp .)
    LT              reduce using rule 45 (exp -> exp TIMES exp .)
    GT              reduce using rule 45 (exp -> exp TIMES exp .)
    PLUS            reduce using rule 45 (exp -> exp TIMES exp .)
    MINUS           reduce using rule 45 (exp -> exp TIMES exp .)
    TIMES           reduce using rule 45 (exp -> exp TIMES exp .)
    DIVIDE          reduce using rule 45 (exp -> exp TIMES exp .)
    POWER           reduce using rule 45 (exp -> exp TIMES exp .)
    MODULUS         reduce using rule 45 (exp -> exp TIMES exp .)
    RA              reduce using rule 45 (exp -> exp TIMES exp .)
    WA              reduce using rule 45 (exp -> exp TIMES exp .)
    PATHAU          reduce using rule 45 (exp -> exp TIMES exp .)
    COMMA           reduce using rule 45 (exp -> exp TIMES exp .)
    LEKHA           reduce using rule 45 (exp -> exp TIMES exp .)
    BHAE            reduce using rule 45 (exp -> exp TIMES exp .)
    NABHAE          reduce using rule 45 (exp -> exp TIMES exp .)
    RPARA           reduce using rule 45 (exp -> exp TIMES exp .)
    RGPARA          reduce using rule 45 (exp -> exp TIMES exp .)
    CHHA            reduce using rule 45 (exp -> exp TIMES exp .)
    CHHAINA         reduce using rule 45 (exp -> exp TIMES exp .)
    COLON           reduce using rule 45 (exp -> exp TIMES exp .)
    NEWLINE         reduce using rule 45 (exp -> exp TIMES exp .)
    $end            reduce using rule 45 (exp -> exp TIMES exp .)
    DEKHI           reduce using rule 45 (exp -> exp TIMES exp .)
    SEMICOLON       reduce using rule 45 (exp -> exp TIMES exp .)

  ! EQ              [ shift and go to state 64 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 57 ]
  ! NE              [ shift and go to state 55 ]
  ! LT              [ shift and go to state 54 ]
  ! GT              [ shift and go to state 58 ]
  ! PLUS            [ shift and go to state 61 ]
  ! MINUS           [ shift and go to state 65 ]
  ! TIMES           [ shift and go to state 63 ]
  ! DIVIDE          [ shift and go to state 51 ]
  ! POWER           [ shift and go to state 52 ]
  ! MODULUS         [ shift and go to state 53 ]
  ! RA              [ shift and go to state 60 ]
  ! WA              [ shift and go to state 62 ]


state 105

    (37) exp -> exp EQ exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    EQ              reduce using rule 37 (exp -> exp EQ exp .)
    NE              reduce using rule 37 (exp -> exp EQ exp .)
    MODULUS         reduce using rule 37 (exp -> exp EQ exp .)
    RA              reduce using rule 37 (exp -> exp EQ exp .)
    WA              reduce using rule 37 (exp -> exp EQ exp .)
    PATHAU          reduce using rule 37 (exp -> exp EQ exp .)
    COMMA           reduce using rule 37 (exp -> exp EQ exp .)
    LEKHA           reduce using rule 37 (exp -> exp EQ exp .)
    BHAE            reduce using rule 37 (exp -> exp EQ exp .)
    NABHAE          reduce using rule 37 (exp -> exp EQ exp .)
    RPARA           reduce using rule 37 (exp -> exp EQ exp .)
    RGPARA          reduce using rule 37 (exp -> exp EQ exp .)
    CHHA            reduce using rule 37 (exp -> exp EQ exp .)
    CHHAINA         reduce using rule 37 (exp -> exp EQ exp .)
    COLON           reduce using rule 37 (exp -> exp EQ exp .)
    NEWLINE         reduce using rule 37 (exp -> exp EQ exp .)
    $end            reduce using rule 37 (exp -> exp EQ exp .)
    DEKHI           reduce using rule 37 (exp -> exp EQ exp .)
    SEMICOLON       reduce using rule 37 (exp -> exp EQ exp .)
    LE              shift and go to state 50
    GE              shift and go to state 57
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52

  ! LE              [ reduce using rule 37 (exp -> exp EQ exp .) ]
  ! GE              [ reduce using rule 37 (exp -> exp EQ exp .) ]
  ! LT              [ reduce using rule 37 (exp -> exp EQ exp .) ]
  ! GT              [ reduce using rule 37 (exp -> exp EQ exp .) ]
  ! PLUS            [ reduce using rule 37 (exp -> exp EQ exp .) ]
  ! MINUS           [ reduce using rule 37 (exp -> exp EQ exp .) ]
  ! TIMES           [ reduce using rule 37 (exp -> exp EQ exp .) ]
  ! DIVIDE          [ reduce using rule 37 (exp -> exp EQ exp .) ]
  ! POWER           [ reduce using rule 37 (exp -> exp EQ exp .) ]
  ! EQ              [ shift and go to state 64 ]
  ! NE              [ shift and go to state 55 ]
  ! MODULUS         [ shift and go to state 53 ]
  ! RA              [ shift and go to state 60 ]
  ! WA              [ shift and go to state 62 ]


state 106

    (44) exp -> exp MINUS exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    EQ              reduce using rule 44 (exp -> exp MINUS exp .)
    LE              reduce using rule 44 (exp -> exp MINUS exp .)
    GE              reduce using rule 44 (exp -> exp MINUS exp .)
    NE              reduce using rule 44 (exp -> exp MINUS exp .)
    LT              reduce using rule 44 (exp -> exp MINUS exp .)
    GT              reduce using rule 44 (exp -> exp MINUS exp .)
    PLUS            reduce using rule 44 (exp -> exp MINUS exp .)
    MINUS           reduce using rule 44 (exp -> exp MINUS exp .)
    MODULUS         reduce using rule 44 (exp -> exp MINUS exp .)
    RA              reduce using rule 44 (exp -> exp MINUS exp .)
    WA              reduce using rule 44 (exp -> exp MINUS exp .)
    PATHAU          reduce using rule 44 (exp -> exp MINUS exp .)
    COMMA           reduce using rule 44 (exp -> exp MINUS exp .)
    LEKHA           reduce using rule 44 (exp -> exp MINUS exp .)
    BHAE            reduce using rule 44 (exp -> exp MINUS exp .)
    NABHAE          reduce using rule 44 (exp -> exp MINUS exp .)
    RPARA           reduce using rule 44 (exp -> exp MINUS exp .)
    RGPARA          reduce using rule 44 (exp -> exp MINUS exp .)
    CHHA            reduce using rule 44 (exp -> exp MINUS exp .)
    CHHAINA         reduce using rule 44 (exp -> exp MINUS exp .)
    COLON           reduce using rule 44 (exp -> exp MINUS exp .)
    NEWLINE         reduce using rule 44 (exp -> exp MINUS exp .)
    $end            reduce using rule 44 (exp -> exp MINUS exp .)
    DEKHI           reduce using rule 44 (exp -> exp MINUS exp .)
    SEMICOLON       reduce using rule 44 (exp -> exp MINUS exp .)
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52

  ! TIMES           [ reduce using rule 44 (exp -> exp MINUS exp .) ]
  ! DIVIDE          [ reduce using rule 44 (exp -> exp MINUS exp .) ]
  ! POWER           [ reduce using rule 44 (exp -> exp MINUS exp .) ]
  ! EQ              [ shift and go to state 64 ]
  ! LE              [ shift and go to state 50 ]
  ! GE              [ shift and go to state 57 ]
  ! NE              [ shift and go to state 55 ]
  ! LT              [ shift and go to state 54 ]
  ! GT              [ shift and go to state 58 ]
  ! PLUS            [ shift and go to state 61 ]
  ! MINUS           [ shift and go to state 65 ]
  ! MODULUS         [ shift and go to state 53 ]
  ! RA              [ shift and go to state 60 ]
  ! WA              [ shift and go to state 62 ]


state 107

    (57) exp -> IDENTIFIER LGPARA exp . RGPARA
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp
    (60) sliceexp -> exp .

    RGPARA          shift and go to state 131
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62
    COLON           reduce using rule 60 (sliceexp -> exp .)


state 108

    (63) exp -> IDENTIFIER LPARA variableexp . RPARA

    RPARA           shift and go to state 132


state 109

    (67) condition -> condition WA condition .
    (66) condition -> condition . RA condition
    (67) condition -> condition . WA condition

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 67 (condition -> condition WA condition .)
    RA              shift and go to state 70
    WA              shift and go to state 68

  ! RA              [ reduce using rule 67 (condition -> condition WA condition .) ]
  ! WA              [ reduce using rule 67 (condition -> condition WA condition .) ]


state 110

    (70) cmpdstmt -> stmt . NEWLINE cmpdstmt

    NEWLINE         shift and go to state 133


state 111

    (22) stmt -> YEDI condition NEWLINE cmpdstmt . optelse DIYE
    (72) optelse -> . ATHAWA condition NEWLINE cmpdstmt optelse
    (73) optelse -> . ATHAWA NEWLINE cmpdstmt
    (74) optelse -> .

    ATHAWA          shift and go to state 135
    DIYE            reduce using rule 74 (optelse -> .)

    optelse                        shift and go to state 134

state 112

    (66) condition -> condition RA condition .
    (66) condition -> condition . RA condition
    (67) condition -> condition . WA condition

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 66 (condition -> condition RA condition .)
    RA              shift and go to state 70
    WA              shift and go to state 68

  ! RA              [ reduce using rule 66 (condition -> condition RA condition .) ]
  ! WA              [ reduce using rule 66 (condition -> condition RA condition .) ]


state 113

    (27) stmt -> KAAM IDENTIFIER LPARA variableArgs . RPARA NEWLINE cmpdstmt MAKA

    RPARA           shift and go to state 136


state 114

    (31) variableArgs -> IDENTIFIER . COMMA variableArgs
    (32) variableArgs -> IDENTIFIER .

    COMMA           shift and go to state 137
    RPARA           reduce using rule 32 (variableArgs -> IDENTIFIER .)


state 115

    (81) whilecond -> whilecond WA . whilecond
    (80) whilecond -> . whilecond RA whilecond
    (81) whilecond -> . whilecond WA whilecond
    (82) whilecond -> . exp CHHA
    (83) whilecond -> . exp CHHAINA
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 76
    whilecond                      shift and go to state 138

state 116

    (25) stmt -> JABA SAMMA whilecond NEWLINE . cmpdstmt BAJA
    (70) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (71) cmpdstmt -> .
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER LUKAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (23) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (27) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (28) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (29) stmt -> . exp PATHAU
    (30) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (64) dynamString -> . exp COMMA dynamString
    (65) dynamString -> . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    BAJA            reduce using rule 71 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 9
    BAHIRA          shift and go to state 4
    ARKO            shift and go to state 5
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    dynamString                    shift and go to state 2
    cmpdstmt                       shift and go to state 139
    stmt                           shift and go to state 110
    exp                            shift and go to state 18

state 117

    (80) whilecond -> whilecond RA . whilecond
    (80) whilecond -> . whilecond RA whilecond
    (81) whilecond -> . whilecond WA whilecond
    (82) whilecond -> . exp CHHA
    (83) whilecond -> . exp CHHAINA
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 76
    whilecond                      shift and go to state 140

state 118

    (82) whilecond -> exp CHHA .

    NEWLINE         reduce using rule 82 (whilecond -> exp CHHA .)
    RA              reduce using rule 82 (whilecond -> exp CHHA .)
    WA              reduce using rule 82 (whilecond -> exp CHHA .)


state 119

    (83) whilecond -> exp CHHAINA .

    NEWLINE         reduce using rule 83 (whilecond -> exp CHHAINA .)
    RA              reduce using rule 83 (whilecond -> exp CHHAINA .)
    WA              reduce using rule 83 (whilecond -> exp CHHAINA .)


state 120

    (59) exp -> IDENTIFIER LGPARA sliceexp COLON . sliceexp RGPARA
    (60) sliceexp -> . exp
    (61) sliceexp -> .
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    RGPARA          reduce using rule 61 (sliceexp -> .)
    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 142
    sliceexp                       shift and go to state 141

state 121

    (30) stmt -> IDENTIFIER LGPARA exp RGPARA . ASSIGNMENT exp
    (57) exp -> IDENTIFIER LGPARA exp RGPARA .

    ASSIGNMENT      shift and go to state 143
    PATHAU          reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    COMMA           reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    EQ              reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LE              reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    GE              reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NE              reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LT              reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    GT              reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    PLUS            reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    MINUS           reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    TIMES           reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    DIVIDE          reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    POWER           reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    MODULUS         reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RA              reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    WA              reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LEKHA           reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)


state 122

    (13) stmt -> IDENTIFIER BATA IDENTIFIER LEU .

    NEWLINE         reduce using rule 13 (stmt -> IDENTIFIER BATA IDENTIFIER LEU .)
    $end            reduce using rule 13 (stmt -> IDENTIFIER BATA IDENTIFIER LEU .)


state 123

    (26) stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp . RGPARA
    (56) exp -> LGPARA variableexp . RGPARA

    RGPARA          shift and go to state 144


state 124

    (21) stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    NEWLINE         reduce using rule 21 (stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .)
    $end            reduce using rule 21 (stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .)
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62


state 125

    (28) stmt -> IDENTIFIER LPARA variableexp RPARA .
    (63) exp -> IDENTIFIER LPARA variableexp RPARA .

    NEWLINE         reduce using rule 28 (stmt -> IDENTIFIER LPARA variableexp RPARA .)
    $end            reduce using rule 28 (stmt -> IDENTIFIER LPARA variableexp RPARA .)
    PATHAU          reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    COMMA           reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    EQ              reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LE              reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GE              reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NE              reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LT              reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GT              reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    PLUS            reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    MINUS           reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    TIMES           reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    DIVIDE          reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    POWER           reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    MODULUS         reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RA              reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    WA              reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LEKHA           reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)


state 126

    (11) stmt -> IDENTIFIER MA dynamString LEKHA . SEMICOLON
    (12) stmt -> IDENTIFIER MA dynamString LEKHA .

    SEMICOLON       shift and go to state 145
    NEWLINE         reduce using rule 12 (stmt -> IDENTIFIER MA dynamString LEKHA .)
    $end            reduce using rule 12 (stmt -> IDENTIFIER MA dynamString LEKHA .)


state 127

    (19) stmt -> IDENTIFIER MA IDENTIFIER KORA . variableexp
    (34) variableexp -> . exp COMMA variableexp
    (35) variableexp -> . exp
    (36) variableexp -> .
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    NEWLINE         reduce using rule 36 (variableexp -> .)
    $end            reduce using rule 36 (variableexp -> .)
    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 48
    variableexp                    shift and go to state 146

state 128

    (23) stmt -> SABEI IDENTIFIER ASSIGNMENT exp . DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) stmt -> SABEI IDENTIFIER ASSIGNMENT exp . DEKHI exp NEWLINE cmpdstmt BAISA
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    DEKHI           shift and go to state 147
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62


state 129

    (62) exp -> LPARA exp RPARA QUESTION . exp COLON exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 148

state 130

    (34) variableexp -> exp COMMA variableexp .

    RGPARA          reduce using rule 34 (variableexp -> exp COMMA variableexp .)
    RPARA           reduce using rule 34 (variableexp -> exp COMMA variableexp .)
    NEWLINE         reduce using rule 34 (variableexp -> exp COMMA variableexp .)
    $end            reduce using rule 34 (variableexp -> exp COMMA variableexp .)


state 131

    (57) exp -> IDENTIFIER LGPARA exp RGPARA .

    EQ              reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LE              reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    GE              reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NE              reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LT              reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    GT              reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    PLUS            reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    MINUS           reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    TIMES           reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    DIVIDE          reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    POWER           reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    MODULUS         reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RA              reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    WA              reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    PATHAU          reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    COMMA           reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LEKHA           reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    BHAE            reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NABHAE          reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RPARA           reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RGPARA          reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    CHHA            reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    CHHAINA         reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    COLON           reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NEWLINE         reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    $end            reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    DEKHI           reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    SEMICOLON       reduce using rule 57 (exp -> IDENTIFIER LGPARA exp RGPARA .)


state 132

    (63) exp -> IDENTIFIER LPARA variableexp RPARA .

    EQ              reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LE              reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GE              reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NE              reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LT              reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GT              reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    PLUS            reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    MINUS           reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    TIMES           reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    DIVIDE          reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    POWER           reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    MODULUS         reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RA              reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    WA              reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    PATHAU          reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    COMMA           reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LEKHA           reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    BHAE            reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NABHAE          reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RPARA           reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RGPARA          reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    CHHA            reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    CHHAINA         reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    COLON           reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NEWLINE         reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    $end            reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    DEKHI           reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    SEMICOLON       reduce using rule 63 (exp -> IDENTIFIER LPARA variableexp RPARA .)


state 133

    (70) cmpdstmt -> stmt NEWLINE . cmpdstmt
    (70) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (71) cmpdstmt -> .
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER LUKAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (23) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (27) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (28) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (29) stmt -> . exp PATHAU
    (30) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (64) dynamString -> . exp COMMA dynamString
    (65) dynamString -> . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    ATHAWA          reduce using rule 71 (cmpdstmt -> .)
    DIYE            reduce using rule 71 (cmpdstmt -> .)
    BAJA            reduce using rule 71 (cmpdstmt -> .)
    MAKA            reduce using rule 71 (cmpdstmt -> .)
    BAISA           reduce using rule 71 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 9
    BAHIRA          shift and go to state 4
    ARKO            shift and go to state 5
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    dynamString                    shift and go to state 2
    cmpdstmt                       shift and go to state 149
    stmt                           shift and go to state 110
    exp                            shift and go to state 18

state 134

    (22) stmt -> YEDI condition NEWLINE cmpdstmt optelse . DIYE

    DIYE            shift and go to state 150


state 135

    (72) optelse -> ATHAWA . condition NEWLINE cmpdstmt optelse
    (73) optelse -> ATHAWA . NEWLINE cmpdstmt
    (66) condition -> . condition RA condition
    (67) condition -> . condition WA condition
    (68) condition -> . exp BHAE
    (69) condition -> . exp NABHAE
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    NEWLINE         shift and go to state 151
    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 22
    condition                      shift and go to state 152

state 136

    (27) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA . NEWLINE cmpdstmt MAKA

    NEWLINE         shift and go to state 153


state 137

    (31) variableArgs -> IDENTIFIER COMMA . variableArgs
    (31) variableArgs -> . IDENTIFIER COMMA variableArgs
    (32) variableArgs -> . IDENTIFIER
    (33) variableArgs -> .

    IDENTIFIER      shift and go to state 114
    RPARA           reduce using rule 33 (variableArgs -> .)

    variableArgs                   shift and go to state 154

state 138

    (81) whilecond -> whilecond WA whilecond .
    (80) whilecond -> whilecond . RA whilecond
    (81) whilecond -> whilecond . WA whilecond

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 81 (whilecond -> whilecond WA whilecond .)
    RA              shift and go to state 117
    WA              shift and go to state 115

  ! RA              [ reduce using rule 81 (whilecond -> whilecond WA whilecond .) ]
  ! WA              [ reduce using rule 81 (whilecond -> whilecond WA whilecond .) ]


state 139

    (25) stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt . BAJA

    BAJA            shift and go to state 155


state 140

    (80) whilecond -> whilecond RA whilecond .
    (80) whilecond -> whilecond . RA whilecond
    (81) whilecond -> whilecond . WA whilecond

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 80 (whilecond -> whilecond RA whilecond .)
    RA              shift and go to state 117
    WA              shift and go to state 115

  ! RA              [ reduce using rule 80 (whilecond -> whilecond RA whilecond .) ]
  ! WA              [ reduce using rule 80 (whilecond -> whilecond RA whilecond .) ]


state 141

    (59) exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp . RGPARA

    RGPARA          shift and go to state 156


state 142

    (60) sliceexp -> exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    RGPARA          reduce using rule 60 (sliceexp -> exp .)
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62


state 143

    (30) stmt -> IDENTIFIER LGPARA exp RGPARA ASSIGNMENT . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 157

state 144

    (26) stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .
    (56) exp -> LGPARA variableexp RGPARA .

  ! reduce/reduce conflict for NEWLINE resolved using rule 26 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
  ! reduce/reduce conflict for $end resolved using rule 26 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    NEWLINE         reduce using rule 26 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    $end            reduce using rule 26 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    EQ              reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    LE              reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    GE              reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    NE              reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    LT              reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    GT              reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    PLUS            reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    MINUS           reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    TIMES           reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    DIVIDE          reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    POWER           reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    MODULUS         reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    RA              reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)
    WA              reduce using rule 56 (exp -> LGPARA variableexp RGPARA .)

  ! NEWLINE         [ reduce using rule 56 (exp -> LGPARA variableexp RGPARA .) ]
  ! $end            [ reduce using rule 56 (exp -> LGPARA variableexp RGPARA .) ]


state 145

    (11) stmt -> IDENTIFIER MA dynamString LEKHA SEMICOLON .

    NEWLINE         reduce using rule 11 (stmt -> IDENTIFIER MA dynamString LEKHA SEMICOLON .)
    $end            reduce using rule 11 (stmt -> IDENTIFIER MA dynamString LEKHA SEMICOLON .)


state 146

    (19) stmt -> IDENTIFIER MA IDENTIFIER KORA variableexp .

    NEWLINE         reduce using rule 19 (stmt -> IDENTIFIER MA IDENTIFIER KORA variableexp .)
    $end            reduce using rule 19 (stmt -> IDENTIFIER MA IDENTIFIER KORA variableexp .)


state 147

    (23) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI . exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI . exp NEWLINE cmpdstmt BAISA
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 158

state 148

    (62) exp -> LPARA exp RPARA QUESTION exp . COLON exp
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    COLON           shift and go to state 159
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62


state 149

    (70) cmpdstmt -> stmt NEWLINE cmpdstmt .

    BAISA           reduce using rule 70 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    ATHAWA          reduce using rule 70 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    DIYE            reduce using rule 70 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    BAJA            reduce using rule 70 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    MAKA            reduce using rule 70 (cmpdstmt -> stmt NEWLINE cmpdstmt .)


state 150

    (22) stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .

    NEWLINE         reduce using rule 22 (stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .)
    $end            reduce using rule 22 (stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .)


state 151

    (73) optelse -> ATHAWA NEWLINE . cmpdstmt
    (70) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (71) cmpdstmt -> .
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER LUKAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (23) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (27) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (28) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (29) stmt -> . exp PATHAU
    (30) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (64) dynamString -> . exp COMMA dynamString
    (65) dynamString -> . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    DIYE            reduce using rule 71 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 9
    BAHIRA          shift and go to state 4
    ARKO            shift and go to state 5
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    dynamString                    shift and go to state 2
    cmpdstmt                       shift and go to state 160
    stmt                           shift and go to state 110
    exp                            shift and go to state 18

state 152

    (72) optelse -> ATHAWA condition . NEWLINE cmpdstmt optelse
    (66) condition -> condition . RA condition
    (67) condition -> condition . WA condition

    NEWLINE         shift and go to state 161
    RA              shift and go to state 70
    WA              shift and go to state 68


state 153

    (27) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE . cmpdstmt MAKA
    (70) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (71) cmpdstmt -> .
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER LUKAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (23) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (27) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (28) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (29) stmt -> . exp PATHAU
    (30) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (64) dynamString -> . exp COMMA dynamString
    (65) dynamString -> . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    MAKA            reduce using rule 71 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 9
    BAHIRA          shift and go to state 4
    ARKO            shift and go to state 5
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    dynamString                    shift and go to state 2
    cmpdstmt                       shift and go to state 162
    stmt                           shift and go to state 110
    exp                            shift and go to state 18

state 154

    (31) variableArgs -> IDENTIFIER COMMA variableArgs .

    RPARA           reduce using rule 31 (variableArgs -> IDENTIFIER COMMA variableArgs .)


state 155

    (25) stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .

    NEWLINE         reduce using rule 25 (stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .)
    $end            reduce using rule 25 (stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .)


state 156

    (59) exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .

    EQ              reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    LE              reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    GE              reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    NE              reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    LT              reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    GT              reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    PLUS            reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    MINUS           reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    TIMES           reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    DIVIDE          reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    POWER           reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    MODULUS         reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    RA              reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    WA              reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    PATHAU          reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    COMMA           reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    LEKHA           reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    BHAE            reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    NABHAE          reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    RPARA           reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    RGPARA          reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    CHHA            reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    CHHAINA         reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    COLON           reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    NEWLINE         reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    $end            reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    DEKHI           reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    SEMICOLON       reduce using rule 59 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)


state 157

    (30) stmt -> IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    NEWLINE         reduce using rule 30 (stmt -> IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp .)
    $end            reduce using rule 30 (stmt -> IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp .)
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62


state 158

    (23) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp . SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp . NEWLINE cmpdstmt BAISA
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    SEMICOLON       shift and go to state 163
    NEWLINE         shift and go to state 164
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62


state 159

    (62) exp -> LPARA exp RPARA QUESTION exp COLON . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 165

state 160

    (73) optelse -> ATHAWA NEWLINE cmpdstmt .

    DIYE            reduce using rule 73 (optelse -> ATHAWA NEWLINE cmpdstmt .)


state 161

    (72) optelse -> ATHAWA condition NEWLINE . cmpdstmt optelse
    (70) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (71) cmpdstmt -> .
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER LUKAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (23) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (27) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (28) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (29) stmt -> . exp PATHAU
    (30) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (64) dynamString -> . exp COMMA dynamString
    (65) dynamString -> . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    ATHAWA          reduce using rule 71 (cmpdstmt -> .)
    DIYE            reduce using rule 71 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 9
    BAHIRA          shift and go to state 4
    ARKO            shift and go to state 5
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    stmt                           shift and go to state 110
    dynamString                    shift and go to state 2
    cmpdstmt                       shift and go to state 166
    exp                            shift and go to state 18

state 162

    (27) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt . MAKA

    MAKA            shift and go to state 167


state 163

    (23) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON . sign exp NEWLINE cmpdstmt BAISA
    (75) sign -> . PLUS
    (76) sign -> . MINUS

    PLUS            shift and go to state 37
    MINUS           shift and go to state 34

    sign                           shift and go to state 168

state 164

    (24) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE . cmpdstmt BAISA
    (70) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (71) cmpdstmt -> .
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER LUKAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (23) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (27) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (28) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (29) stmt -> . exp PATHAU
    (30) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (64) dynamString -> . exp COMMA dynamString
    (65) dynamString -> . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    BAISA           reduce using rule 71 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 9
    BAHIRA          shift and go to state 4
    ARKO            shift and go to state 5
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    dynamString                    shift and go to state 2
    cmpdstmt                       shift and go to state 169
    stmt                           shift and go to state 110
    exp                            shift and go to state 18

state 165

    (62) exp -> LPARA exp RPARA QUESTION exp COLON exp .
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    COMMA           reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    LEKHA           reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    BHAE            reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    NABHAE          reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    RPARA           reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    RGPARA          reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    CHHA            reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    CHHAINA         reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    COLON           reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    NEWLINE         reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    $end            reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    DEKHI           reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    SEMICOLON       reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62

  ! EQ              [ reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! LE              [ reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! GE              [ reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! NE              [ reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! LT              [ reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! GT              [ reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! PLUS            [ reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! MINUS           [ reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! TIMES           [ reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! DIVIDE          [ reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! POWER           [ reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! MODULUS         [ reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! RA              [ reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! WA              [ reduce using rule 62 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]


state 166

    (72) optelse -> ATHAWA condition NEWLINE cmpdstmt . optelse
    (72) optelse -> . ATHAWA condition NEWLINE cmpdstmt optelse
    (73) optelse -> . ATHAWA NEWLINE cmpdstmt
    (74) optelse -> .

    ATHAWA          shift and go to state 135
    DIYE            reduce using rule 74 (optelse -> .)

    optelse                        shift and go to state 170

state 167

    (27) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA .

    NEWLINE         reduce using rule 27 (stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA .)
    $end            reduce using rule 27 (stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA .)


state 168

    (23) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign . exp NEWLINE cmpdstmt BAISA
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 20
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    exp                            shift and go to state 171

state 169

    (24) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt . BAISA

    BAISA           shift and go to state 172


state 170

    (72) optelse -> ATHAWA condition NEWLINE cmpdstmt optelse .

    DIYE            reduce using rule 72 (optelse -> ATHAWA condition NEWLINE cmpdstmt optelse .)


state 171

    (23) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp . NEWLINE cmpdstmt BAISA
    (37) exp -> exp . EQ exp
    (38) exp -> exp . LE exp
    (39) exp -> exp . GE exp
    (40) exp -> exp . NE exp
    (41) exp -> exp . LT exp
    (42) exp -> exp . GT exp
    (43) exp -> exp . PLUS exp
    (44) exp -> exp . MINUS exp
    (45) exp -> exp . TIMES exp
    (46) exp -> exp . DIVIDE exp
    (47) exp -> exp . POWER exp
    (48) exp -> exp . MODULUS exp
    (49) exp -> exp . RA exp
    (50) exp -> exp . WA exp

    NEWLINE         shift and go to state 173
    EQ              shift and go to state 64
    LE              shift and go to state 50
    GE              shift and go to state 57
    NE              shift and go to state 55
    LT              shift and go to state 54
    GT              shift and go to state 58
    PLUS            shift and go to state 61
    MINUS           shift and go to state 65
    TIMES           shift and go to state 63
    DIVIDE          shift and go to state 51
    POWER           shift and go to state 52
    MODULUS         shift and go to state 53
    RA              shift and go to state 60
    WA              shift and go to state 62


state 172

    (24) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA .

    NEWLINE         reduce using rule 24 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA .)
    $end            reduce using rule 24 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA .)


state 173

    (23) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE . cmpdstmt BAISA
    (70) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (71) cmpdstmt -> .
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER LUKAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (23) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (26) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (27) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (28) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (29) stmt -> . exp PATHAU
    (30) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (64) dynamString -> . exp COMMA dynamString
    (65) dynamString -> . exp
    (37) exp -> . exp EQ exp
    (38) exp -> . exp LE exp
    (39) exp -> . exp GE exp
    (40) exp -> . exp NE exp
    (41) exp -> . exp LT exp
    (42) exp -> . exp GT exp
    (43) exp -> . exp PLUS exp
    (44) exp -> . exp MINUS exp
    (45) exp -> . exp TIMES exp
    (46) exp -> . exp DIVIDE exp
    (47) exp -> . exp POWER exp
    (48) exp -> . exp MODULUS exp
    (49) exp -> . exp RA exp
    (50) exp -> . exp WA exp
    (51) exp -> . IDENTIFIER
    (52) exp -> . STRING
    (53) exp -> . NUMBER
    (54) exp -> . MINUS NUMBER
    (55) exp -> . SUNYA
    (56) exp -> . LGPARA variableexp RGPARA
    (57) exp -> . IDENTIFIER LGPARA exp RGPARA
    (58) exp -> . LPARA exp RPARA
    (59) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (62) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (63) exp -> . IDENTIFIER LPARA variableexp RPARA

    BAISA           reduce using rule 71 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 9
    BAHIRA          shift and go to state 4
    ARKO            shift and go to state 5
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    STRING          shift and go to state 19
    NUMBER          shift and go to state 12
    MINUS           shift and go to state 3
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 15
    LPARA           shift and go to state 11

    dynamString                    shift and go to state 2
    cmpdstmt                       shift and go to state 174
    stmt                           shift and go to state 110
    exp                            shift and go to state 18

state 174

    (23) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt . BAISA

    BAISA           shift and go to state 175


state 175

    (23) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .

    NEWLINE         reduce using rule 23 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .)
    $end            reduce using rule 23 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQ in state 95 resolved as shift
WARNING: shift/reduce conflict for LE in state 95 resolved as shift
WARNING: shift/reduce conflict for GE in state 95 resolved as shift
WARNING: shift/reduce conflict for NE in state 95 resolved as shift
WARNING: shift/reduce conflict for LT in state 95 resolved as shift
WARNING: shift/reduce conflict for GT in state 95 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 95 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 95 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 95 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 95 resolved as shift
WARNING: shift/reduce conflict for POWER in state 95 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 95 resolved as shift
WARNING: shift/reduce conflict for RA in state 95 resolved as shift
WARNING: shift/reduce conflict for WA in state 95 resolved as shift
WARNING: shift/reduce conflict for EQ in state 97 resolved as shift
WARNING: shift/reduce conflict for LE in state 97 resolved as shift
WARNING: shift/reduce conflict for GE in state 97 resolved as shift
WARNING: shift/reduce conflict for NE in state 97 resolved as shift
WARNING: shift/reduce conflict for LT in state 97 resolved as shift
WARNING: shift/reduce conflict for GT in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 97 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 97 resolved as shift
WARNING: shift/reduce conflict for POWER in state 97 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 97 resolved as shift
WARNING: shift/reduce conflict for RA in state 97 resolved as shift
WARNING: shift/reduce conflict for WA in state 97 resolved as shift
WARNING: shift/reduce conflict for EQ in state 101 resolved as shift
WARNING: shift/reduce conflict for LE in state 101 resolved as shift
WARNING: shift/reduce conflict for GE in state 101 resolved as shift
WARNING: shift/reduce conflict for NE in state 101 resolved as shift
WARNING: shift/reduce conflict for LT in state 101 resolved as shift
WARNING: shift/reduce conflict for GT in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 101 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 101 resolved as shift
WARNING: shift/reduce conflict for POWER in state 101 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 101 resolved as shift
WARNING: shift/reduce conflict for RA in state 101 resolved as shift
WARNING: shift/reduce conflict for WA in state 101 resolved as shift
WARNING: shift/reduce conflict for EQ in state 103 resolved as shift
WARNING: shift/reduce conflict for LE in state 103 resolved as shift
WARNING: shift/reduce conflict for GE in state 103 resolved as shift
WARNING: shift/reduce conflict for NE in state 103 resolved as shift
WARNING: shift/reduce conflict for LT in state 103 resolved as shift
WARNING: shift/reduce conflict for GT in state 103 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 103 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 103 resolved as shift
WARNING: shift/reduce conflict for POWER in state 103 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 103 resolved as shift
WARNING: shift/reduce conflict for RA in state 103 resolved as shift
WARNING: shift/reduce conflict for WA in state 103 resolved as shift
WARNING: shift/reduce conflict for RA in state 109 resolved as shift
WARNING: shift/reduce conflict for WA in state 109 resolved as shift
WARNING: shift/reduce conflict for RA in state 112 resolved as shift
WARNING: shift/reduce conflict for WA in state 112 resolved as shift
WARNING: shift/reduce conflict for RA in state 138 resolved as shift
WARNING: shift/reduce conflict for WA in state 138 resolved as shift
WARNING: shift/reduce conflict for RA in state 140 resolved as shift
WARNING: shift/reduce conflict for WA in state 140 resolved as shift
WARNING: shift/reduce conflict for EQ in state 165 resolved as shift
WARNING: shift/reduce conflict for LE in state 165 resolved as shift
WARNING: shift/reduce conflict for GE in state 165 resolved as shift
WARNING: shift/reduce conflict for NE in state 165 resolved as shift
WARNING: shift/reduce conflict for LT in state 165 resolved as shift
WARNING: shift/reduce conflict for GT in state 165 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 165 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 165 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 165 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 165 resolved as shift
WARNING: shift/reduce conflict for POWER in state 165 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 165 resolved as shift
WARNING: shift/reduce conflict for RA in state 165 resolved as shift
WARNING: shift/reduce conflict for WA in state 165 resolved as shift
WARNING: reduce/reduce conflict in state 144 resolved using rule (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA)
WARNING: rejected rule (exp -> LGPARA variableexp RGPARA) in state 144
