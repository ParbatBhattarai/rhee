Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> N
Rule 1     N -> element NEWLINE N
Rule 2     N -> element
Rule 3     N -> <empty>
Rule 4     element -> stmt
Rule 5     stmt -> IDENTIFIER ASSIGNMENT exp
Rule 6     stmt -> IDENTIFIER MA dynamString LEKHA SEMICOLON
Rule 7     stmt -> IDENTIFIER MA dynamString LEKHA
Rule 8     stmt -> IDENTIFIER BATA IDENTIFIER LEU
Rule 9     stmt -> IDENTIFIER BANDAGARA
Rule 10    stmt -> IDENTIFIER DEKHAU
Rule 11    stmt -> IDENTIFIER LUKAU
Rule 12    stmt -> IDENTIFIER BANAU
Rule 13    stmt -> IDENTIFIER METAU
Rule 14    stmt -> IDENTIFIER MA IDENTIFIER KORA variableexp
Rule 15    stmt -> dynamString LEKHA
Rule 16    stmt -> dynamString LEKHA SEMICOLON
Rule 17    stmt -> IDENTIFIER LEU
Rule 18    stmt -> IDENTIFIER incrementsign ASSIGNMENT exp
Rule 19    stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE
Rule 20    stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
Rule 21    stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
Rule 22    stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
Rule 23    stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
Rule 24    stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
Rule 25    stmt -> IDENTIFIER LPARA variableexp RPARA
Rule 26    stmt -> exp PATHAU
Rule 27    stmt -> NEWLINE
Rule 28    variableArgs -> IDENTIFIER COMMA variableArgs
Rule 29    variableArgs -> IDENTIFIER
Rule 30    variableArgs -> <empty>
Rule 31    variableexp -> exp COMMA variableexp
Rule 32    variableexp -> exp
Rule 33    variableexp -> <empty>
Rule 34    exp -> exp EQ exp
Rule 35    exp -> exp LE exp
Rule 36    exp -> exp GE exp
Rule 37    exp -> exp NE exp
Rule 38    exp -> exp LT exp
Rule 39    exp -> exp GT exp
Rule 40    exp -> exp PLUS exp
Rule 41    exp -> exp MINUS exp
Rule 42    exp -> exp TIMES exp
Rule 43    exp -> exp DIVIDE exp
Rule 44    exp -> exp POWER exp
Rule 45    exp -> exp RA exp
Rule 46    exp -> exp WA exp
Rule 47    exp -> IDENTIFIER
Rule 48    exp -> STRING
Rule 49    exp -> NUMBER
Rule 50    exp -> LGPARA variableexp RGPARA
Rule 51    exp -> IDENTIFIER LGPARA exp RGPARA
Rule 52    exp -> LPARA exp RPARA
Rule 53    exp -> LPARA exp RPARA QUESTION exp COLON exp
Rule 54    exp -> IDENTIFIER LPARA variableexp RPARA
Rule 55    dynamString -> exp COMMA dynamString
Rule 56    dynamString -> exp
Rule 57    condition -> condition RA condition
Rule 58    condition -> condition WA condition
Rule 59    condition -> exp BHAE
Rule 60    condition -> exp NABHAE
Rule 61    cmpdstmt -> stmt NEWLINE cmpdstmt
Rule 62    cmpdstmt -> <empty>
Rule 63    optelse -> ATHAWA condition NEWLINE cmpdstmt optelse
Rule 64    optelse -> ATHAWA NEWLINE cmpdstmt
Rule 65    optelse -> <empty>
Rule 66    sign -> PLUS
Rule 67    sign -> MINUS
Rule 68    incrementsign -> sign
Rule 69    incrementsign -> TIMES
Rule 70    incrementsign -> DIVIDE
Rule 71    whilecond -> whilecond RA whilecond
Rule 72    whilecond -> whilecond WA whilecond
Rule 73    whilecond -> exp CHHA
Rule 74    whilecond -> exp CHHAINA

Terminals, with rules where they appear

ASSIGNMENT           : 5 18 20 21 23
ATHAWA               : 63 64
BAISA                : 20 21
BAJA                 : 22
BANAU                : 12
BANDAGARA            : 9
BATA                 : 8
BHAE                 : 59
CHHA                 : 73
CHHAINA              : 74
COLON                : 53
COMMA                : 28 31 55
DEKHAU               : 10
DEKHI                : 20 21
DIVIDE               : 43 70
DIYE                 : 19
EQ                   : 34
GE                   : 36
GT                   : 39
IDENTIFIER           : 5 6 7 8 8 9 10 11 12 13 14 14 17 18 20 21 23 24 25 28 29 47 51 54
JABA                 : 22
KAAM                 : 24
KORA                 : 14
LE                   : 35
LEKHA                : 6 7 15 16
LEU                  : 8 17
LGPARA               : 23 50 51
LPARA                : 24 25 52 53 54
LT                   : 38
LUKAU                : 11
MA                   : 6 7 14
MAKA                 : 24
METAU                : 13
MINUS                : 41 67
NABHAE               : 60
NE                   : 37
NEWLINE              : 1 19 20 21 22 24 27 61 63 64
NUMBER               : 49
PATHAU               : 26
PLUS                 : 40 66
POWER                : 44
QUESTION             : 53
RA                   : 45 57 71
RGPARA               : 23 50 51
RPARA                : 24 25 52 53 54
SABEI                : 20 21
SAMMA                : 22
SEMICOLON            : 6 16 20
STRING               : 48
TIMES                : 42 69
WA                   : 46 58 72
YEDI                 : 19
error                : 

Nonterminals, with rules where they appear

N                    : 1 0
cmpdstmt             : 19 20 21 22 24 61 63 64
condition            : 19 57 57 58 58 63
dynamString          : 6 7 15 16 55
element              : 1 2
exp                  : 5 18 20 20 20 21 21 26 31 32 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 51 52 53 53 53 55 56 59 60 73 74
incrementsign        : 18
optelse              : 19 63
sign                 : 20 68
stmt                 : 4 61
variableArgs         : 24 28
variableexp          : 14 23 25 31 50 54
whilecond            : 22 71 71 72 72

Parsing method: LALR

state 0

    (0) S' -> . N
    (1) N -> . element NEWLINE N
    (2) N -> . element
    (3) N -> .
    (4) element -> . stmt
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . IDENTIFIER DEKHAU
    (11) stmt -> . IDENTIFIER LUKAU
    (12) stmt -> . IDENTIFIER BANAU
    (13) stmt -> . IDENTIFIER METAU
    (14) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (15) stmt -> . dynamString LEKHA
    (16) stmt -> . dynamString LEKHA SEMICOLON
    (17) stmt -> . IDENTIFIER LEU
    (18) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (19) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (20) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (21) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (22) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (23) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (24) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (25) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (26) stmt -> . exp PATHAU
    (27) stmt -> . NEWLINE
    (55) dynamString -> . exp COMMA dynamString
    (56) dynamString -> . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    $end            reduce using rule 3 (N -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 6
    KAAM            shift and go to state 4
    NEWLINE         shift and go to state 5
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    dynamString                    shift and go to state 2
    N                              shift and go to state 12
    stmt                           shift and go to state 11
    exp                            shift and go to state 15
    element                        shift and go to state 14

state 1

    (19) stmt -> YEDI . condition NEWLINE cmpdstmt optelse DIYE
    (57) condition -> . condition RA condition
    (58) condition -> . condition WA condition
    (59) condition -> . exp BHAE
    (60) condition -> . exp NABHAE
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 18
    condition                      shift and go to state 17

state 2

    (15) stmt -> dynamString . LEKHA
    (16) stmt -> dynamString . LEKHA SEMICOLON

    LEKHA           shift and go to state 19


state 3

    (48) exp -> STRING .

    EQ              reduce using rule 48 (exp -> STRING .)
    LE              reduce using rule 48 (exp -> STRING .)
    GE              reduce using rule 48 (exp -> STRING .)
    NE              reduce using rule 48 (exp -> STRING .)
    LT              reduce using rule 48 (exp -> STRING .)
    GT              reduce using rule 48 (exp -> STRING .)
    PLUS            reduce using rule 48 (exp -> STRING .)
    MINUS           reduce using rule 48 (exp -> STRING .)
    TIMES           reduce using rule 48 (exp -> STRING .)
    DIVIDE          reduce using rule 48 (exp -> STRING .)
    POWER           reduce using rule 48 (exp -> STRING .)
    RA              reduce using rule 48 (exp -> STRING .)
    WA              reduce using rule 48 (exp -> STRING .)
    PATHAU          reduce using rule 48 (exp -> STRING .)
    COMMA           reduce using rule 48 (exp -> STRING .)
    LEKHA           reduce using rule 48 (exp -> STRING .)
    BHAE            reduce using rule 48 (exp -> STRING .)
    NABHAE          reduce using rule 48 (exp -> STRING .)
    RPARA           reduce using rule 48 (exp -> STRING .)
    RGPARA          reduce using rule 48 (exp -> STRING .)
    CHHA            reduce using rule 48 (exp -> STRING .)
    CHHAINA         reduce using rule 48 (exp -> STRING .)
    NEWLINE         reduce using rule 48 (exp -> STRING .)
    $end            reduce using rule 48 (exp -> STRING .)
    DEKHI           reduce using rule 48 (exp -> STRING .)
    COLON           reduce using rule 48 (exp -> STRING .)
    SEMICOLON       reduce using rule 48 (exp -> STRING .)


state 4

    (24) stmt -> KAAM . IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA

    IDENTIFIER      shift and go to state 20


state 5

    (27) stmt -> NEWLINE .

    NEWLINE         reduce using rule 27 (stmt -> NEWLINE .)
    $end            reduce using rule 27 (stmt -> NEWLINE .)


state 6

    (22) stmt -> JABA . SAMMA whilecond NEWLINE cmpdstmt BAJA

    SAMMA           shift and go to state 21


state 7

    (5) stmt -> IDENTIFIER . ASSIGNMENT exp
    (6) stmt -> IDENTIFIER . MA dynamString LEKHA SEMICOLON
    (7) stmt -> IDENTIFIER . MA dynamString LEKHA
    (8) stmt -> IDENTIFIER . BATA IDENTIFIER LEU
    (9) stmt -> IDENTIFIER . BANDAGARA
    (10) stmt -> IDENTIFIER . DEKHAU
    (11) stmt -> IDENTIFIER . LUKAU
    (12) stmt -> IDENTIFIER . BANAU
    (13) stmt -> IDENTIFIER . METAU
    (14) stmt -> IDENTIFIER . MA IDENTIFIER KORA variableexp
    (17) stmt -> IDENTIFIER . LEU
    (18) stmt -> IDENTIFIER . incrementsign ASSIGNMENT exp
    (23) stmt -> IDENTIFIER . ASSIGNMENT LGPARA variableexp RGPARA
    (25) stmt -> IDENTIFIER . LPARA variableexp RPARA
    (47) exp -> IDENTIFIER .
    (51) exp -> IDENTIFIER . LGPARA exp RGPARA
    (54) exp -> IDENTIFIER . LPARA variableexp RPARA
    (68) incrementsign -> . sign
    (69) incrementsign -> . TIMES
    (70) incrementsign -> . DIVIDE
    (66) sign -> . PLUS
    (67) sign -> . MINUS

    ASSIGNMENT      shift and go to state 24
    MA              shift and go to state 36
    BATA            shift and go to state 23
    BANDAGARA       shift and go to state 27
    DEKHAU          shift and go to state 37
    LUKAU           shift and go to state 25
    BANAU           shift and go to state 29
    METAU           shift and go to state 35
    LEU             shift and go to state 38
    LPARA           shift and go to state 32
    PATHAU          reduce using rule 47 (exp -> IDENTIFIER .)
    COMMA           reduce using rule 47 (exp -> IDENTIFIER .)
    EQ              reduce using rule 47 (exp -> IDENTIFIER .)
    LE              reduce using rule 47 (exp -> IDENTIFIER .)
    GE              reduce using rule 47 (exp -> IDENTIFIER .)
    NE              reduce using rule 47 (exp -> IDENTIFIER .)
    LT              reduce using rule 47 (exp -> IDENTIFIER .)
    GT              reduce using rule 47 (exp -> IDENTIFIER .)
    POWER           reduce using rule 47 (exp -> IDENTIFIER .)
    RA              reduce using rule 47 (exp -> IDENTIFIER .)
    WA              reduce using rule 47 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 47 (exp -> IDENTIFIER .)
    LGPARA          shift and go to state 22
    TIMES           shift and go to state 34
    DIVIDE          shift and go to state 33
    PLUS            shift and go to state 30
    MINUS           shift and go to state 28

  ! PLUS            [ reduce using rule 47 (exp -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 47 (exp -> IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 47 (exp -> IDENTIFIER .) ]
  ! DIVIDE          [ reduce using rule 47 (exp -> IDENTIFIER .) ]

    incrementsign                  shift and go to state 31
    sign                           shift and go to state 26

state 8

    (20) stmt -> SABEI . IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (21) stmt -> SABEI . IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA

    IDENTIFIER      shift and go to state 39


state 9

    (52) exp -> LPARA . exp RPARA
    (53) exp -> LPARA . exp RPARA QUESTION exp COLON exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 40

state 10

    (49) exp -> NUMBER .

    EQ              reduce using rule 49 (exp -> NUMBER .)
    LE              reduce using rule 49 (exp -> NUMBER .)
    GE              reduce using rule 49 (exp -> NUMBER .)
    NE              reduce using rule 49 (exp -> NUMBER .)
    LT              reduce using rule 49 (exp -> NUMBER .)
    GT              reduce using rule 49 (exp -> NUMBER .)
    PLUS            reduce using rule 49 (exp -> NUMBER .)
    MINUS           reduce using rule 49 (exp -> NUMBER .)
    TIMES           reduce using rule 49 (exp -> NUMBER .)
    DIVIDE          reduce using rule 49 (exp -> NUMBER .)
    POWER           reduce using rule 49 (exp -> NUMBER .)
    RA              reduce using rule 49 (exp -> NUMBER .)
    WA              reduce using rule 49 (exp -> NUMBER .)
    PATHAU          reduce using rule 49 (exp -> NUMBER .)
    COMMA           reduce using rule 49 (exp -> NUMBER .)
    LEKHA           reduce using rule 49 (exp -> NUMBER .)
    BHAE            reduce using rule 49 (exp -> NUMBER .)
    NABHAE          reduce using rule 49 (exp -> NUMBER .)
    RPARA           reduce using rule 49 (exp -> NUMBER .)
    RGPARA          reduce using rule 49 (exp -> NUMBER .)
    CHHA            reduce using rule 49 (exp -> NUMBER .)
    CHHAINA         reduce using rule 49 (exp -> NUMBER .)
    NEWLINE         reduce using rule 49 (exp -> NUMBER .)
    $end            reduce using rule 49 (exp -> NUMBER .)
    DEKHI           reduce using rule 49 (exp -> NUMBER .)
    COLON           reduce using rule 49 (exp -> NUMBER .)
    SEMICOLON       reduce using rule 49 (exp -> NUMBER .)


state 11

    (4) element -> stmt .

    NEWLINE         reduce using rule 4 (element -> stmt .)
    $end            reduce using rule 4 (element -> stmt .)


state 12

    (0) S' -> N .



state 13

    (50) exp -> LGPARA . variableexp RGPARA
    (31) variableexp -> . exp COMMA variableexp
    (32) variableexp -> . exp
    (33) variableexp -> .
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    RGPARA          reduce using rule 33 (variableexp -> .)
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 42
    variableexp                    shift and go to state 41

state 14

    (1) N -> element . NEWLINE N
    (2) N -> element .

    NEWLINE         shift and go to state 43
    $end            reduce using rule 2 (N -> element .)


state 15

    (26) stmt -> exp . PATHAU
    (55) dynamString -> exp . COMMA dynamString
    (56) dynamString -> exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    PATHAU          shift and go to state 49
    COMMA           shift and go to state 52
    LEKHA           reduce using rule 56 (dynamString -> exp .)
    EQ              shift and go to state 57
    LE              shift and go to state 44
    GE              shift and go to state 50
    NE              shift and go to state 48
    LT              shift and go to state 47
    GT              shift and go to state 51
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46
    RA              shift and go to state 53
    WA              shift and go to state 55


state 16

    (47) exp -> IDENTIFIER .
    (51) exp -> IDENTIFIER . LGPARA exp RGPARA
    (54) exp -> IDENTIFIER . LPARA variableexp RPARA

    EQ              reduce using rule 47 (exp -> IDENTIFIER .)
    LE              reduce using rule 47 (exp -> IDENTIFIER .)
    GE              reduce using rule 47 (exp -> IDENTIFIER .)
    NE              reduce using rule 47 (exp -> IDENTIFIER .)
    LT              reduce using rule 47 (exp -> IDENTIFIER .)
    GT              reduce using rule 47 (exp -> IDENTIFIER .)
    PLUS            reduce using rule 47 (exp -> IDENTIFIER .)
    MINUS           reduce using rule 47 (exp -> IDENTIFIER .)
    TIMES           reduce using rule 47 (exp -> IDENTIFIER .)
    DIVIDE          reduce using rule 47 (exp -> IDENTIFIER .)
    POWER           reduce using rule 47 (exp -> IDENTIFIER .)
    RA              reduce using rule 47 (exp -> IDENTIFIER .)
    WA              reduce using rule 47 (exp -> IDENTIFIER .)
    PATHAU          reduce using rule 47 (exp -> IDENTIFIER .)
    COMMA           reduce using rule 47 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 47 (exp -> IDENTIFIER .)
    BHAE            reduce using rule 47 (exp -> IDENTIFIER .)
    NABHAE          reduce using rule 47 (exp -> IDENTIFIER .)
    RPARA           reduce using rule 47 (exp -> IDENTIFIER .)
    RGPARA          reduce using rule 47 (exp -> IDENTIFIER .)
    CHHA            reduce using rule 47 (exp -> IDENTIFIER .)
    CHHAINA         reduce using rule 47 (exp -> IDENTIFIER .)
    NEWLINE         reduce using rule 47 (exp -> IDENTIFIER .)
    $end            reduce using rule 47 (exp -> IDENTIFIER .)
    DEKHI           reduce using rule 47 (exp -> IDENTIFIER .)
    COLON           reduce using rule 47 (exp -> IDENTIFIER .)
    SEMICOLON       reduce using rule 47 (exp -> IDENTIFIER .)
    LGPARA          shift and go to state 22
    LPARA           shift and go to state 59


state 17

    (19) stmt -> YEDI condition . NEWLINE cmpdstmt optelse DIYE
    (57) condition -> condition . RA condition
    (58) condition -> condition . WA condition

    NEWLINE         shift and go to state 61
    RA              shift and go to state 62
    WA              shift and go to state 60


state 18

    (59) condition -> exp . BHAE
    (60) condition -> exp . NABHAE
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    BHAE            shift and go to state 63
    NABHAE          shift and go to state 64
    EQ              shift and go to state 57
    LE              shift and go to state 44
    GE              shift and go to state 50
    NE              shift and go to state 48
    LT              shift and go to state 47
    GT              shift and go to state 51
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46
    RA              shift and go to state 53
    WA              shift and go to state 55


state 19

    (15) stmt -> dynamString LEKHA .
    (16) stmt -> dynamString LEKHA . SEMICOLON

    NEWLINE         reduce using rule 15 (stmt -> dynamString LEKHA .)
    $end            reduce using rule 15 (stmt -> dynamString LEKHA .)
    SEMICOLON       shift and go to state 65


state 20

    (24) stmt -> KAAM IDENTIFIER . LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA

    LPARA           shift and go to state 66


state 21

    (22) stmt -> JABA SAMMA . whilecond NEWLINE cmpdstmt BAJA
    (71) whilecond -> . whilecond RA whilecond
    (72) whilecond -> . whilecond WA whilecond
    (73) whilecond -> . exp CHHA
    (74) whilecond -> . exp CHHAINA
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 68
    whilecond                      shift and go to state 67

state 22

    (51) exp -> IDENTIFIER LGPARA . exp RGPARA
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 69

state 23

    (8) stmt -> IDENTIFIER BATA . IDENTIFIER LEU

    IDENTIFIER      shift and go to state 70


state 24

    (5) stmt -> IDENTIFIER ASSIGNMENT . exp
    (23) stmt -> IDENTIFIER ASSIGNMENT . LGPARA variableexp RGPARA
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    LGPARA          shift and go to state 71
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LPARA           shift and go to state 9

    exp                            shift and go to state 72

state 25

    (11) stmt -> IDENTIFIER LUKAU .

    NEWLINE         reduce using rule 11 (stmt -> IDENTIFIER LUKAU .)
    $end            reduce using rule 11 (stmt -> IDENTIFIER LUKAU .)


state 26

    (68) incrementsign -> sign .

    ASSIGNMENT      reduce using rule 68 (incrementsign -> sign .)


state 27

    (9) stmt -> IDENTIFIER BANDAGARA .

    NEWLINE         reduce using rule 9 (stmt -> IDENTIFIER BANDAGARA .)
    $end            reduce using rule 9 (stmt -> IDENTIFIER BANDAGARA .)


state 28

    (67) sign -> MINUS .

    IDENTIFIER      reduce using rule 67 (sign -> MINUS .)
    STRING          reduce using rule 67 (sign -> MINUS .)
    NUMBER          reduce using rule 67 (sign -> MINUS .)
    LGPARA          reduce using rule 67 (sign -> MINUS .)
    LPARA           reduce using rule 67 (sign -> MINUS .)
    ASSIGNMENT      reduce using rule 67 (sign -> MINUS .)


state 29

    (12) stmt -> IDENTIFIER BANAU .

    NEWLINE         reduce using rule 12 (stmt -> IDENTIFIER BANAU .)
    $end            reduce using rule 12 (stmt -> IDENTIFIER BANAU .)


state 30

    (66) sign -> PLUS .

    IDENTIFIER      reduce using rule 66 (sign -> PLUS .)
    STRING          reduce using rule 66 (sign -> PLUS .)
    NUMBER          reduce using rule 66 (sign -> PLUS .)
    LGPARA          reduce using rule 66 (sign -> PLUS .)
    LPARA           reduce using rule 66 (sign -> PLUS .)
    ASSIGNMENT      reduce using rule 66 (sign -> PLUS .)


state 31

    (18) stmt -> IDENTIFIER incrementsign . ASSIGNMENT exp

    ASSIGNMENT      shift and go to state 73


state 32

    (25) stmt -> IDENTIFIER LPARA . variableexp RPARA
    (54) exp -> IDENTIFIER LPARA . variableexp RPARA
    (31) variableexp -> . exp COMMA variableexp
    (32) variableexp -> . exp
    (33) variableexp -> .
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    RPARA           reduce using rule 33 (variableexp -> .)
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 42
    variableexp                    shift and go to state 74

state 33

    (70) incrementsign -> DIVIDE .

    ASSIGNMENT      reduce using rule 70 (incrementsign -> DIVIDE .)


state 34

    (69) incrementsign -> TIMES .

    ASSIGNMENT      reduce using rule 69 (incrementsign -> TIMES .)


state 35

    (13) stmt -> IDENTIFIER METAU .

    NEWLINE         reduce using rule 13 (stmt -> IDENTIFIER METAU .)
    $end            reduce using rule 13 (stmt -> IDENTIFIER METAU .)


state 36

    (6) stmt -> IDENTIFIER MA . dynamString LEKHA SEMICOLON
    (7) stmt -> IDENTIFIER MA . dynamString LEKHA
    (14) stmt -> IDENTIFIER MA . IDENTIFIER KORA variableexp
    (55) dynamString -> . exp COMMA dynamString
    (56) dynamString -> . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 76
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 77
    dynamString                    shift and go to state 75

state 37

    (10) stmt -> IDENTIFIER DEKHAU .

    NEWLINE         reduce using rule 10 (stmt -> IDENTIFIER DEKHAU .)
    $end            reduce using rule 10 (stmt -> IDENTIFIER DEKHAU .)


state 38

    (17) stmt -> IDENTIFIER LEU .

    NEWLINE         reduce using rule 17 (stmt -> IDENTIFIER LEU .)
    $end            reduce using rule 17 (stmt -> IDENTIFIER LEU .)


state 39

    (20) stmt -> SABEI IDENTIFIER . ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (21) stmt -> SABEI IDENTIFIER . ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA

    ASSIGNMENT      shift and go to state 78


state 40

    (52) exp -> LPARA exp . RPARA
    (53) exp -> LPARA exp . RPARA QUESTION exp COLON exp
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    RPARA           shift and go to state 79
    EQ              shift and go to state 57
    LE              shift and go to state 44
    GE              shift and go to state 50
    NE              shift and go to state 48
    LT              shift and go to state 47
    GT              shift and go to state 51
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46
    RA              shift and go to state 53
    WA              shift and go to state 55


state 41

    (50) exp -> LGPARA variableexp . RGPARA

    RGPARA          shift and go to state 80


state 42

    (31) variableexp -> exp . COMMA variableexp
    (32) variableexp -> exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    COMMA           shift and go to state 81
    RGPARA          reduce using rule 32 (variableexp -> exp .)
    NEWLINE         reduce using rule 32 (variableexp -> exp .)
    $end            reduce using rule 32 (variableexp -> exp .)
    RPARA           reduce using rule 32 (variableexp -> exp .)
    EQ              shift and go to state 57
    LE              shift and go to state 44
    GE              shift and go to state 50
    NE              shift and go to state 48
    LT              shift and go to state 47
    GT              shift and go to state 51
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46
    RA              shift and go to state 53
    WA              shift and go to state 55


state 43

    (1) N -> element NEWLINE . N
    (1) N -> . element NEWLINE N
    (2) N -> . element
    (3) N -> .
    (4) element -> . stmt
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . IDENTIFIER DEKHAU
    (11) stmt -> . IDENTIFIER LUKAU
    (12) stmt -> . IDENTIFIER BANAU
    (13) stmt -> . IDENTIFIER METAU
    (14) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (15) stmt -> . dynamString LEKHA
    (16) stmt -> . dynamString LEKHA SEMICOLON
    (17) stmt -> . IDENTIFIER LEU
    (18) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (19) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (20) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (21) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (22) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (23) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (24) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (25) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (26) stmt -> . exp PATHAU
    (27) stmt -> . NEWLINE
    (55) dynamString -> . exp COMMA dynamString
    (56) dynamString -> . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    $end            reduce using rule 3 (N -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 6
    KAAM            shift and go to state 4
    NEWLINE         shift and go to state 5
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    dynamString                    shift and go to state 2
    stmt                           shift and go to state 11
    exp                            shift and go to state 15
    element                        shift and go to state 14
    N                              shift and go to state 82

state 44

    (35) exp -> exp LE . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 83

state 45

    (43) exp -> exp DIVIDE . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 84

state 46

    (44) exp -> exp POWER . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 85

state 47

    (38) exp -> exp LT . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 86

state 48

    (37) exp -> exp NE . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 87

state 49

    (26) stmt -> exp PATHAU .

    NEWLINE         reduce using rule 26 (stmt -> exp PATHAU .)
    $end            reduce using rule 26 (stmt -> exp PATHAU .)


state 50

    (36) exp -> exp GE . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 88

state 51

    (39) exp -> exp GT . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 89

state 52

    (55) dynamString -> exp COMMA . dynamString
    (55) dynamString -> . exp COMMA dynamString
    (56) dynamString -> . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 77
    dynamString                    shift and go to state 90

state 53

    (45) exp -> exp RA . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 91

state 54

    (40) exp -> exp PLUS . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 92

state 55

    (46) exp -> exp WA . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 93

state 56

    (42) exp -> exp TIMES . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 94

state 57

    (34) exp -> exp EQ . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 95

state 58

    (41) exp -> exp MINUS . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 96

state 59

    (54) exp -> IDENTIFIER LPARA . variableexp RPARA
    (31) variableexp -> . exp COMMA variableexp
    (32) variableexp -> . exp
    (33) variableexp -> .
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    RPARA           reduce using rule 33 (variableexp -> .)
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 42
    variableexp                    shift and go to state 97

state 60

    (58) condition -> condition WA . condition
    (57) condition -> . condition RA condition
    (58) condition -> . condition WA condition
    (59) condition -> . exp BHAE
    (60) condition -> . exp NABHAE
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 18
    condition                      shift and go to state 98

state 61

    (19) stmt -> YEDI condition NEWLINE . cmpdstmt optelse DIYE
    (61) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (62) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . IDENTIFIER DEKHAU
    (11) stmt -> . IDENTIFIER LUKAU
    (12) stmt -> . IDENTIFIER BANAU
    (13) stmt -> . IDENTIFIER METAU
    (14) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (15) stmt -> . dynamString LEKHA
    (16) stmt -> . dynamString LEKHA SEMICOLON
    (17) stmt -> . IDENTIFIER LEU
    (18) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (19) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (20) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (21) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (22) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (23) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (24) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (25) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (26) stmt -> . exp PATHAU
    (27) stmt -> . NEWLINE
    (55) dynamString -> . exp COMMA dynamString
    (56) dynamString -> . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    ATHAWA          reduce using rule 62 (cmpdstmt -> .)
    DIYE            reduce using rule 62 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 6
    KAAM            shift and go to state 4
    NEWLINE         shift and go to state 5
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    stmt                           shift and go to state 99
    dynamString                    shift and go to state 2
    cmpdstmt                       shift and go to state 100
    exp                            shift and go to state 15

state 62

    (57) condition -> condition RA . condition
    (57) condition -> . condition RA condition
    (58) condition -> . condition WA condition
    (59) condition -> . exp BHAE
    (60) condition -> . exp NABHAE
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 18
    condition                      shift and go to state 101

state 63

    (59) condition -> exp BHAE .

    NEWLINE         reduce using rule 59 (condition -> exp BHAE .)
    RA              reduce using rule 59 (condition -> exp BHAE .)
    WA              reduce using rule 59 (condition -> exp BHAE .)


state 64

    (60) condition -> exp NABHAE .

    NEWLINE         reduce using rule 60 (condition -> exp NABHAE .)
    RA              reduce using rule 60 (condition -> exp NABHAE .)
    WA              reduce using rule 60 (condition -> exp NABHAE .)


state 65

    (16) stmt -> dynamString LEKHA SEMICOLON .

    NEWLINE         reduce using rule 16 (stmt -> dynamString LEKHA SEMICOLON .)
    $end            reduce using rule 16 (stmt -> dynamString LEKHA SEMICOLON .)


state 66

    (24) stmt -> KAAM IDENTIFIER LPARA . variableArgs RPARA NEWLINE cmpdstmt MAKA
    (28) variableArgs -> . IDENTIFIER COMMA variableArgs
    (29) variableArgs -> . IDENTIFIER
    (30) variableArgs -> .

    IDENTIFIER      shift and go to state 103
    RPARA           reduce using rule 30 (variableArgs -> .)

    variableArgs                   shift and go to state 102

state 67

    (22) stmt -> JABA SAMMA whilecond . NEWLINE cmpdstmt BAJA
    (71) whilecond -> whilecond . RA whilecond
    (72) whilecond -> whilecond . WA whilecond

    NEWLINE         shift and go to state 105
    RA              shift and go to state 106
    WA              shift and go to state 104


state 68

    (73) whilecond -> exp . CHHA
    (74) whilecond -> exp . CHHAINA
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    CHHA            shift and go to state 107
    CHHAINA         shift and go to state 108
    EQ              shift and go to state 57
    LE              shift and go to state 44
    GE              shift and go to state 50
    NE              shift and go to state 48
    LT              shift and go to state 47
    GT              shift and go to state 51
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46
    RA              shift and go to state 53
    WA              shift and go to state 55


state 69

    (51) exp -> IDENTIFIER LGPARA exp . RGPARA
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    RGPARA          shift and go to state 109
    EQ              shift and go to state 57
    LE              shift and go to state 44
    GE              shift and go to state 50
    NE              shift and go to state 48
    LT              shift and go to state 47
    GT              shift and go to state 51
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46
    RA              shift and go to state 53
    WA              shift and go to state 55


state 70

    (8) stmt -> IDENTIFIER BATA IDENTIFIER . LEU

    LEU             shift and go to state 110


state 71

    (23) stmt -> IDENTIFIER ASSIGNMENT LGPARA . variableexp RGPARA
    (50) exp -> LGPARA . variableexp RGPARA
    (31) variableexp -> . exp COMMA variableexp
    (32) variableexp -> . exp
    (33) variableexp -> .
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    RGPARA          reduce using rule 33 (variableexp -> .)
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 42
    variableexp                    shift and go to state 111

state 72

    (5) stmt -> IDENTIFIER ASSIGNMENT exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    NEWLINE         reduce using rule 5 (stmt -> IDENTIFIER ASSIGNMENT exp .)
    $end            reduce using rule 5 (stmt -> IDENTIFIER ASSIGNMENT exp .)
    EQ              shift and go to state 57
    LE              shift and go to state 44
    GE              shift and go to state 50
    NE              shift and go to state 48
    LT              shift and go to state 47
    GT              shift and go to state 51
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46
    RA              shift and go to state 53
    WA              shift and go to state 55


state 73

    (18) stmt -> IDENTIFIER incrementsign ASSIGNMENT . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 112

state 74

    (25) stmt -> IDENTIFIER LPARA variableexp . RPARA
    (54) exp -> IDENTIFIER LPARA variableexp . RPARA

    RPARA           shift and go to state 113


state 75

    (6) stmt -> IDENTIFIER MA dynamString . LEKHA SEMICOLON
    (7) stmt -> IDENTIFIER MA dynamString . LEKHA

    LEKHA           shift and go to state 114


state 76

    (14) stmt -> IDENTIFIER MA IDENTIFIER . KORA variableexp
    (47) exp -> IDENTIFIER .
    (51) exp -> IDENTIFIER . LGPARA exp RGPARA
    (54) exp -> IDENTIFIER . LPARA variableexp RPARA

    KORA            shift and go to state 115
    COMMA           reduce using rule 47 (exp -> IDENTIFIER .)
    EQ              reduce using rule 47 (exp -> IDENTIFIER .)
    LE              reduce using rule 47 (exp -> IDENTIFIER .)
    GE              reduce using rule 47 (exp -> IDENTIFIER .)
    NE              reduce using rule 47 (exp -> IDENTIFIER .)
    LT              reduce using rule 47 (exp -> IDENTIFIER .)
    GT              reduce using rule 47 (exp -> IDENTIFIER .)
    PLUS            reduce using rule 47 (exp -> IDENTIFIER .)
    MINUS           reduce using rule 47 (exp -> IDENTIFIER .)
    TIMES           reduce using rule 47 (exp -> IDENTIFIER .)
    DIVIDE          reduce using rule 47 (exp -> IDENTIFIER .)
    POWER           reduce using rule 47 (exp -> IDENTIFIER .)
    RA              reduce using rule 47 (exp -> IDENTIFIER .)
    WA              reduce using rule 47 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 47 (exp -> IDENTIFIER .)
    LGPARA          shift and go to state 22
    LPARA           shift and go to state 59


state 77

    (55) dynamString -> exp . COMMA dynamString
    (56) dynamString -> exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    COMMA           shift and go to state 52
    LEKHA           reduce using rule 56 (dynamString -> exp .)
    EQ              shift and go to state 57
    LE              shift and go to state 44
    GE              shift and go to state 50
    NE              shift and go to state 48
    LT              shift and go to state 47
    GT              shift and go to state 51
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46
    RA              shift and go to state 53
    WA              shift and go to state 55


state 78

    (20) stmt -> SABEI IDENTIFIER ASSIGNMENT . exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (21) stmt -> SABEI IDENTIFIER ASSIGNMENT . exp DEKHI exp NEWLINE cmpdstmt BAISA
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 116

state 79

    (52) exp -> LPARA exp RPARA .
    (53) exp -> LPARA exp RPARA . QUESTION exp COLON exp

    EQ              reduce using rule 52 (exp -> LPARA exp RPARA .)
    LE              reduce using rule 52 (exp -> LPARA exp RPARA .)
    GE              reduce using rule 52 (exp -> LPARA exp RPARA .)
    NE              reduce using rule 52 (exp -> LPARA exp RPARA .)
    LT              reduce using rule 52 (exp -> LPARA exp RPARA .)
    GT              reduce using rule 52 (exp -> LPARA exp RPARA .)
    PLUS            reduce using rule 52 (exp -> LPARA exp RPARA .)
    MINUS           reduce using rule 52 (exp -> LPARA exp RPARA .)
    TIMES           reduce using rule 52 (exp -> LPARA exp RPARA .)
    DIVIDE          reduce using rule 52 (exp -> LPARA exp RPARA .)
    POWER           reduce using rule 52 (exp -> LPARA exp RPARA .)
    RA              reduce using rule 52 (exp -> LPARA exp RPARA .)
    WA              reduce using rule 52 (exp -> LPARA exp RPARA .)
    PATHAU          reduce using rule 52 (exp -> LPARA exp RPARA .)
    COMMA           reduce using rule 52 (exp -> LPARA exp RPARA .)
    LEKHA           reduce using rule 52 (exp -> LPARA exp RPARA .)
    BHAE            reduce using rule 52 (exp -> LPARA exp RPARA .)
    NABHAE          reduce using rule 52 (exp -> LPARA exp RPARA .)
    RPARA           reduce using rule 52 (exp -> LPARA exp RPARA .)
    RGPARA          reduce using rule 52 (exp -> LPARA exp RPARA .)
    CHHA            reduce using rule 52 (exp -> LPARA exp RPARA .)
    CHHAINA         reduce using rule 52 (exp -> LPARA exp RPARA .)
    NEWLINE         reduce using rule 52 (exp -> LPARA exp RPARA .)
    $end            reduce using rule 52 (exp -> LPARA exp RPARA .)
    DEKHI           reduce using rule 52 (exp -> LPARA exp RPARA .)
    COLON           reduce using rule 52 (exp -> LPARA exp RPARA .)
    SEMICOLON       reduce using rule 52 (exp -> LPARA exp RPARA .)
    QUESTION        shift and go to state 117


state 80

    (50) exp -> LGPARA variableexp RGPARA .

    EQ              reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    LE              reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    GE              reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    NE              reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    LT              reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    GT              reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    PLUS            reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    MINUS           reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    TIMES           reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    DIVIDE          reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    POWER           reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    RA              reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    WA              reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    PATHAU          reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    COMMA           reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    LEKHA           reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    BHAE            reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    NABHAE          reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    RPARA           reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    RGPARA          reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    CHHA            reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    CHHAINA         reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    NEWLINE         reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    $end            reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    DEKHI           reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    COLON           reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    SEMICOLON       reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)


state 81

    (31) variableexp -> exp COMMA . variableexp
    (31) variableexp -> . exp COMMA variableexp
    (32) variableexp -> . exp
    (33) variableexp -> .
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    RGPARA          reduce using rule 33 (variableexp -> .)
    RPARA           reduce using rule 33 (variableexp -> .)
    NEWLINE         reduce using rule 33 (variableexp -> .)
    $end            reduce using rule 33 (variableexp -> .)
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    variableexp                    shift and go to state 118
    exp                            shift and go to state 42

state 82

    (1) N -> element NEWLINE N .

    $end            reduce using rule 1 (N -> element NEWLINE N .)


state 83

    (35) exp -> exp LE exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    EQ              reduce using rule 35 (exp -> exp LE exp .)
    LE              reduce using rule 35 (exp -> exp LE exp .)
    GE              reduce using rule 35 (exp -> exp LE exp .)
    NE              reduce using rule 35 (exp -> exp LE exp .)
    LT              reduce using rule 35 (exp -> exp LE exp .)
    GT              reduce using rule 35 (exp -> exp LE exp .)
    RA              reduce using rule 35 (exp -> exp LE exp .)
    WA              reduce using rule 35 (exp -> exp LE exp .)
    PATHAU          reduce using rule 35 (exp -> exp LE exp .)
    COMMA           reduce using rule 35 (exp -> exp LE exp .)
    LEKHA           reduce using rule 35 (exp -> exp LE exp .)
    BHAE            reduce using rule 35 (exp -> exp LE exp .)
    NABHAE          reduce using rule 35 (exp -> exp LE exp .)
    RPARA           reduce using rule 35 (exp -> exp LE exp .)
    RGPARA          reduce using rule 35 (exp -> exp LE exp .)
    CHHA            reduce using rule 35 (exp -> exp LE exp .)
    CHHAINA         reduce using rule 35 (exp -> exp LE exp .)
    NEWLINE         reduce using rule 35 (exp -> exp LE exp .)
    $end            reduce using rule 35 (exp -> exp LE exp .)
    DEKHI           reduce using rule 35 (exp -> exp LE exp .)
    COLON           reduce using rule 35 (exp -> exp LE exp .)
    SEMICOLON       reduce using rule 35 (exp -> exp LE exp .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46

  ! PLUS            [ reduce using rule 35 (exp -> exp LE exp .) ]
  ! MINUS           [ reduce using rule 35 (exp -> exp LE exp .) ]
  ! TIMES           [ reduce using rule 35 (exp -> exp LE exp .) ]
  ! DIVIDE          [ reduce using rule 35 (exp -> exp LE exp .) ]
  ! POWER           [ reduce using rule 35 (exp -> exp LE exp .) ]
  ! EQ              [ shift and go to state 57 ]
  ! LE              [ shift and go to state 44 ]
  ! GE              [ shift and go to state 50 ]
  ! NE              [ shift and go to state 48 ]
  ! LT              [ shift and go to state 47 ]
  ! GT              [ shift and go to state 51 ]
  ! RA              [ shift and go to state 53 ]
  ! WA              [ shift and go to state 55 ]


state 84

    (43) exp -> exp DIVIDE exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    EQ              reduce using rule 43 (exp -> exp DIVIDE exp .)
    LE              reduce using rule 43 (exp -> exp DIVIDE exp .)
    GE              reduce using rule 43 (exp -> exp DIVIDE exp .)
    NE              reduce using rule 43 (exp -> exp DIVIDE exp .)
    LT              reduce using rule 43 (exp -> exp DIVIDE exp .)
    GT              reduce using rule 43 (exp -> exp DIVIDE exp .)
    PLUS            reduce using rule 43 (exp -> exp DIVIDE exp .)
    MINUS           reduce using rule 43 (exp -> exp DIVIDE exp .)
    TIMES           reduce using rule 43 (exp -> exp DIVIDE exp .)
    DIVIDE          reduce using rule 43 (exp -> exp DIVIDE exp .)
    POWER           reduce using rule 43 (exp -> exp DIVIDE exp .)
    RA              reduce using rule 43 (exp -> exp DIVIDE exp .)
    WA              reduce using rule 43 (exp -> exp DIVIDE exp .)
    PATHAU          reduce using rule 43 (exp -> exp DIVIDE exp .)
    COMMA           reduce using rule 43 (exp -> exp DIVIDE exp .)
    LEKHA           reduce using rule 43 (exp -> exp DIVIDE exp .)
    BHAE            reduce using rule 43 (exp -> exp DIVIDE exp .)
    NABHAE          reduce using rule 43 (exp -> exp DIVIDE exp .)
    RPARA           reduce using rule 43 (exp -> exp DIVIDE exp .)
    RGPARA          reduce using rule 43 (exp -> exp DIVIDE exp .)
    CHHA            reduce using rule 43 (exp -> exp DIVIDE exp .)
    CHHAINA         reduce using rule 43 (exp -> exp DIVIDE exp .)
    NEWLINE         reduce using rule 43 (exp -> exp DIVIDE exp .)
    $end            reduce using rule 43 (exp -> exp DIVIDE exp .)
    DEKHI           reduce using rule 43 (exp -> exp DIVIDE exp .)
    COLON           reduce using rule 43 (exp -> exp DIVIDE exp .)
    SEMICOLON       reduce using rule 43 (exp -> exp DIVIDE exp .)

  ! EQ              [ shift and go to state 57 ]
  ! LE              [ shift and go to state 44 ]
  ! GE              [ shift and go to state 50 ]
  ! NE              [ shift and go to state 48 ]
  ! LT              [ shift and go to state 47 ]
  ! GT              [ shift and go to state 51 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 58 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 45 ]
  ! POWER           [ shift and go to state 46 ]
  ! RA              [ shift and go to state 53 ]
  ! WA              [ shift and go to state 55 ]


state 85

    (44) exp -> exp POWER exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    EQ              reduce using rule 44 (exp -> exp POWER exp .)
    LE              reduce using rule 44 (exp -> exp POWER exp .)
    GE              reduce using rule 44 (exp -> exp POWER exp .)
    NE              reduce using rule 44 (exp -> exp POWER exp .)
    LT              reduce using rule 44 (exp -> exp POWER exp .)
    GT              reduce using rule 44 (exp -> exp POWER exp .)
    PLUS            reduce using rule 44 (exp -> exp POWER exp .)
    MINUS           reduce using rule 44 (exp -> exp POWER exp .)
    TIMES           reduce using rule 44 (exp -> exp POWER exp .)
    DIVIDE          reduce using rule 44 (exp -> exp POWER exp .)
    POWER           reduce using rule 44 (exp -> exp POWER exp .)
    RA              reduce using rule 44 (exp -> exp POWER exp .)
    WA              reduce using rule 44 (exp -> exp POWER exp .)
    PATHAU          reduce using rule 44 (exp -> exp POWER exp .)
    COMMA           reduce using rule 44 (exp -> exp POWER exp .)
    LEKHA           reduce using rule 44 (exp -> exp POWER exp .)
    BHAE            reduce using rule 44 (exp -> exp POWER exp .)
    NABHAE          reduce using rule 44 (exp -> exp POWER exp .)
    RPARA           reduce using rule 44 (exp -> exp POWER exp .)
    RGPARA          reduce using rule 44 (exp -> exp POWER exp .)
    CHHA            reduce using rule 44 (exp -> exp POWER exp .)
    CHHAINA         reduce using rule 44 (exp -> exp POWER exp .)
    NEWLINE         reduce using rule 44 (exp -> exp POWER exp .)
    $end            reduce using rule 44 (exp -> exp POWER exp .)
    DEKHI           reduce using rule 44 (exp -> exp POWER exp .)
    COLON           reduce using rule 44 (exp -> exp POWER exp .)
    SEMICOLON       reduce using rule 44 (exp -> exp POWER exp .)

  ! EQ              [ shift and go to state 57 ]
  ! LE              [ shift and go to state 44 ]
  ! GE              [ shift and go to state 50 ]
  ! NE              [ shift and go to state 48 ]
  ! LT              [ shift and go to state 47 ]
  ! GT              [ shift and go to state 51 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 58 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 45 ]
  ! POWER           [ shift and go to state 46 ]
  ! RA              [ shift and go to state 53 ]
  ! WA              [ shift and go to state 55 ]


state 86

    (38) exp -> exp LT exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    EQ              reduce using rule 38 (exp -> exp LT exp .)
    LE              reduce using rule 38 (exp -> exp LT exp .)
    GE              reduce using rule 38 (exp -> exp LT exp .)
    NE              reduce using rule 38 (exp -> exp LT exp .)
    LT              reduce using rule 38 (exp -> exp LT exp .)
    GT              reduce using rule 38 (exp -> exp LT exp .)
    RA              reduce using rule 38 (exp -> exp LT exp .)
    WA              reduce using rule 38 (exp -> exp LT exp .)
    PATHAU          reduce using rule 38 (exp -> exp LT exp .)
    COMMA           reduce using rule 38 (exp -> exp LT exp .)
    LEKHA           reduce using rule 38 (exp -> exp LT exp .)
    BHAE            reduce using rule 38 (exp -> exp LT exp .)
    NABHAE          reduce using rule 38 (exp -> exp LT exp .)
    RPARA           reduce using rule 38 (exp -> exp LT exp .)
    RGPARA          reduce using rule 38 (exp -> exp LT exp .)
    CHHA            reduce using rule 38 (exp -> exp LT exp .)
    CHHAINA         reduce using rule 38 (exp -> exp LT exp .)
    NEWLINE         reduce using rule 38 (exp -> exp LT exp .)
    $end            reduce using rule 38 (exp -> exp LT exp .)
    DEKHI           reduce using rule 38 (exp -> exp LT exp .)
    COLON           reduce using rule 38 (exp -> exp LT exp .)
    SEMICOLON       reduce using rule 38 (exp -> exp LT exp .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46

  ! PLUS            [ reduce using rule 38 (exp -> exp LT exp .) ]
  ! MINUS           [ reduce using rule 38 (exp -> exp LT exp .) ]
  ! TIMES           [ reduce using rule 38 (exp -> exp LT exp .) ]
  ! DIVIDE          [ reduce using rule 38 (exp -> exp LT exp .) ]
  ! POWER           [ reduce using rule 38 (exp -> exp LT exp .) ]
  ! EQ              [ shift and go to state 57 ]
  ! LE              [ shift and go to state 44 ]
  ! GE              [ shift and go to state 50 ]
  ! NE              [ shift and go to state 48 ]
  ! LT              [ shift and go to state 47 ]
  ! GT              [ shift and go to state 51 ]
  ! RA              [ shift and go to state 53 ]
  ! WA              [ shift and go to state 55 ]


state 87

    (37) exp -> exp NE exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 37 (exp -> exp NE exp .)
    COMMA           reduce using rule 37 (exp -> exp NE exp .)
    LEKHA           reduce using rule 37 (exp -> exp NE exp .)
    BHAE            reduce using rule 37 (exp -> exp NE exp .)
    NABHAE          reduce using rule 37 (exp -> exp NE exp .)
    RPARA           reduce using rule 37 (exp -> exp NE exp .)
    RGPARA          reduce using rule 37 (exp -> exp NE exp .)
    CHHA            reduce using rule 37 (exp -> exp NE exp .)
    CHHAINA         reduce using rule 37 (exp -> exp NE exp .)
    NEWLINE         reduce using rule 37 (exp -> exp NE exp .)
    $end            reduce using rule 37 (exp -> exp NE exp .)
    DEKHI           reduce using rule 37 (exp -> exp NE exp .)
    COLON           reduce using rule 37 (exp -> exp NE exp .)
    SEMICOLON       reduce using rule 37 (exp -> exp NE exp .)
    EQ              shift and go to state 57
    LE              shift and go to state 44
    GE              shift and go to state 50
    NE              shift and go to state 48
    LT              shift and go to state 47
    GT              shift and go to state 51
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46
    RA              shift and go to state 53
    WA              shift and go to state 55

  ! EQ              [ reduce using rule 37 (exp -> exp NE exp .) ]
  ! LE              [ reduce using rule 37 (exp -> exp NE exp .) ]
  ! GE              [ reduce using rule 37 (exp -> exp NE exp .) ]
  ! NE              [ reduce using rule 37 (exp -> exp NE exp .) ]
  ! LT              [ reduce using rule 37 (exp -> exp NE exp .) ]
  ! GT              [ reduce using rule 37 (exp -> exp NE exp .) ]
  ! PLUS            [ reduce using rule 37 (exp -> exp NE exp .) ]
  ! MINUS           [ reduce using rule 37 (exp -> exp NE exp .) ]
  ! TIMES           [ reduce using rule 37 (exp -> exp NE exp .) ]
  ! DIVIDE          [ reduce using rule 37 (exp -> exp NE exp .) ]
  ! POWER           [ reduce using rule 37 (exp -> exp NE exp .) ]
  ! RA              [ reduce using rule 37 (exp -> exp NE exp .) ]
  ! WA              [ reduce using rule 37 (exp -> exp NE exp .) ]


state 88

    (36) exp -> exp GE exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    EQ              reduce using rule 36 (exp -> exp GE exp .)
    LE              reduce using rule 36 (exp -> exp GE exp .)
    GE              reduce using rule 36 (exp -> exp GE exp .)
    NE              reduce using rule 36 (exp -> exp GE exp .)
    LT              reduce using rule 36 (exp -> exp GE exp .)
    GT              reduce using rule 36 (exp -> exp GE exp .)
    RA              reduce using rule 36 (exp -> exp GE exp .)
    WA              reduce using rule 36 (exp -> exp GE exp .)
    PATHAU          reduce using rule 36 (exp -> exp GE exp .)
    COMMA           reduce using rule 36 (exp -> exp GE exp .)
    LEKHA           reduce using rule 36 (exp -> exp GE exp .)
    BHAE            reduce using rule 36 (exp -> exp GE exp .)
    NABHAE          reduce using rule 36 (exp -> exp GE exp .)
    RPARA           reduce using rule 36 (exp -> exp GE exp .)
    RGPARA          reduce using rule 36 (exp -> exp GE exp .)
    CHHA            reduce using rule 36 (exp -> exp GE exp .)
    CHHAINA         reduce using rule 36 (exp -> exp GE exp .)
    NEWLINE         reduce using rule 36 (exp -> exp GE exp .)
    $end            reduce using rule 36 (exp -> exp GE exp .)
    DEKHI           reduce using rule 36 (exp -> exp GE exp .)
    COLON           reduce using rule 36 (exp -> exp GE exp .)
    SEMICOLON       reduce using rule 36 (exp -> exp GE exp .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46

  ! PLUS            [ reduce using rule 36 (exp -> exp GE exp .) ]
  ! MINUS           [ reduce using rule 36 (exp -> exp GE exp .) ]
  ! TIMES           [ reduce using rule 36 (exp -> exp GE exp .) ]
  ! DIVIDE          [ reduce using rule 36 (exp -> exp GE exp .) ]
  ! POWER           [ reduce using rule 36 (exp -> exp GE exp .) ]
  ! EQ              [ shift and go to state 57 ]
  ! LE              [ shift and go to state 44 ]
  ! GE              [ shift and go to state 50 ]
  ! NE              [ shift and go to state 48 ]
  ! LT              [ shift and go to state 47 ]
  ! GT              [ shift and go to state 51 ]
  ! RA              [ shift and go to state 53 ]
  ! WA              [ shift and go to state 55 ]


state 89

    (39) exp -> exp GT exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    EQ              reduce using rule 39 (exp -> exp GT exp .)
    LE              reduce using rule 39 (exp -> exp GT exp .)
    GE              reduce using rule 39 (exp -> exp GT exp .)
    NE              reduce using rule 39 (exp -> exp GT exp .)
    LT              reduce using rule 39 (exp -> exp GT exp .)
    GT              reduce using rule 39 (exp -> exp GT exp .)
    RA              reduce using rule 39 (exp -> exp GT exp .)
    WA              reduce using rule 39 (exp -> exp GT exp .)
    PATHAU          reduce using rule 39 (exp -> exp GT exp .)
    COMMA           reduce using rule 39 (exp -> exp GT exp .)
    LEKHA           reduce using rule 39 (exp -> exp GT exp .)
    BHAE            reduce using rule 39 (exp -> exp GT exp .)
    NABHAE          reduce using rule 39 (exp -> exp GT exp .)
    RPARA           reduce using rule 39 (exp -> exp GT exp .)
    RGPARA          reduce using rule 39 (exp -> exp GT exp .)
    CHHA            reduce using rule 39 (exp -> exp GT exp .)
    CHHAINA         reduce using rule 39 (exp -> exp GT exp .)
    NEWLINE         reduce using rule 39 (exp -> exp GT exp .)
    $end            reduce using rule 39 (exp -> exp GT exp .)
    DEKHI           reduce using rule 39 (exp -> exp GT exp .)
    COLON           reduce using rule 39 (exp -> exp GT exp .)
    SEMICOLON       reduce using rule 39 (exp -> exp GT exp .)
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46

  ! PLUS            [ reduce using rule 39 (exp -> exp GT exp .) ]
  ! MINUS           [ reduce using rule 39 (exp -> exp GT exp .) ]
  ! TIMES           [ reduce using rule 39 (exp -> exp GT exp .) ]
  ! DIVIDE          [ reduce using rule 39 (exp -> exp GT exp .) ]
  ! POWER           [ reduce using rule 39 (exp -> exp GT exp .) ]
  ! EQ              [ shift and go to state 57 ]
  ! LE              [ shift and go to state 44 ]
  ! GE              [ shift and go to state 50 ]
  ! NE              [ shift and go to state 48 ]
  ! LT              [ shift and go to state 47 ]
  ! GT              [ shift and go to state 51 ]
  ! RA              [ shift and go to state 53 ]
  ! WA              [ shift and go to state 55 ]


state 90

    (55) dynamString -> exp COMMA dynamString .

    LEKHA           reduce using rule 55 (dynamString -> exp COMMA dynamString .)


state 91

    (45) exp -> exp RA exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 45 (exp -> exp RA exp .)
    COMMA           reduce using rule 45 (exp -> exp RA exp .)
    LEKHA           reduce using rule 45 (exp -> exp RA exp .)
    BHAE            reduce using rule 45 (exp -> exp RA exp .)
    NABHAE          reduce using rule 45 (exp -> exp RA exp .)
    RPARA           reduce using rule 45 (exp -> exp RA exp .)
    RGPARA          reduce using rule 45 (exp -> exp RA exp .)
    CHHA            reduce using rule 45 (exp -> exp RA exp .)
    CHHAINA         reduce using rule 45 (exp -> exp RA exp .)
    NEWLINE         reduce using rule 45 (exp -> exp RA exp .)
    $end            reduce using rule 45 (exp -> exp RA exp .)
    DEKHI           reduce using rule 45 (exp -> exp RA exp .)
    COLON           reduce using rule 45 (exp -> exp RA exp .)
    SEMICOLON       reduce using rule 45 (exp -> exp RA exp .)
    EQ              shift and go to state 57
    LE              shift and go to state 44
    GE              shift and go to state 50
    NE              shift and go to state 48
    LT              shift and go to state 47
    GT              shift and go to state 51
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46
    RA              shift and go to state 53
    WA              shift and go to state 55

  ! EQ              [ reduce using rule 45 (exp -> exp RA exp .) ]
  ! LE              [ reduce using rule 45 (exp -> exp RA exp .) ]
  ! GE              [ reduce using rule 45 (exp -> exp RA exp .) ]
  ! NE              [ reduce using rule 45 (exp -> exp RA exp .) ]
  ! LT              [ reduce using rule 45 (exp -> exp RA exp .) ]
  ! GT              [ reduce using rule 45 (exp -> exp RA exp .) ]
  ! PLUS            [ reduce using rule 45 (exp -> exp RA exp .) ]
  ! MINUS           [ reduce using rule 45 (exp -> exp RA exp .) ]
  ! TIMES           [ reduce using rule 45 (exp -> exp RA exp .) ]
  ! DIVIDE          [ reduce using rule 45 (exp -> exp RA exp .) ]
  ! POWER           [ reduce using rule 45 (exp -> exp RA exp .) ]
  ! RA              [ reduce using rule 45 (exp -> exp RA exp .) ]
  ! WA              [ reduce using rule 45 (exp -> exp RA exp .) ]


state 92

    (40) exp -> exp PLUS exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    EQ              reduce using rule 40 (exp -> exp PLUS exp .)
    LE              reduce using rule 40 (exp -> exp PLUS exp .)
    GE              reduce using rule 40 (exp -> exp PLUS exp .)
    NE              reduce using rule 40 (exp -> exp PLUS exp .)
    LT              reduce using rule 40 (exp -> exp PLUS exp .)
    GT              reduce using rule 40 (exp -> exp PLUS exp .)
    PLUS            reduce using rule 40 (exp -> exp PLUS exp .)
    MINUS           reduce using rule 40 (exp -> exp PLUS exp .)
    RA              reduce using rule 40 (exp -> exp PLUS exp .)
    WA              reduce using rule 40 (exp -> exp PLUS exp .)
    PATHAU          reduce using rule 40 (exp -> exp PLUS exp .)
    COMMA           reduce using rule 40 (exp -> exp PLUS exp .)
    LEKHA           reduce using rule 40 (exp -> exp PLUS exp .)
    BHAE            reduce using rule 40 (exp -> exp PLUS exp .)
    NABHAE          reduce using rule 40 (exp -> exp PLUS exp .)
    RPARA           reduce using rule 40 (exp -> exp PLUS exp .)
    RGPARA          reduce using rule 40 (exp -> exp PLUS exp .)
    CHHA            reduce using rule 40 (exp -> exp PLUS exp .)
    CHHAINA         reduce using rule 40 (exp -> exp PLUS exp .)
    NEWLINE         reduce using rule 40 (exp -> exp PLUS exp .)
    $end            reduce using rule 40 (exp -> exp PLUS exp .)
    DEKHI           reduce using rule 40 (exp -> exp PLUS exp .)
    COLON           reduce using rule 40 (exp -> exp PLUS exp .)
    SEMICOLON       reduce using rule 40 (exp -> exp PLUS exp .)
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46

  ! TIMES           [ reduce using rule 40 (exp -> exp PLUS exp .) ]
  ! DIVIDE          [ reduce using rule 40 (exp -> exp PLUS exp .) ]
  ! POWER           [ reduce using rule 40 (exp -> exp PLUS exp .) ]
  ! EQ              [ shift and go to state 57 ]
  ! LE              [ shift and go to state 44 ]
  ! GE              [ shift and go to state 50 ]
  ! NE              [ shift and go to state 48 ]
  ! LT              [ shift and go to state 47 ]
  ! GT              [ shift and go to state 51 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 58 ]
  ! RA              [ shift and go to state 53 ]
  ! WA              [ shift and go to state 55 ]


state 93

    (46) exp -> exp WA exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 46 (exp -> exp WA exp .)
    COMMA           reduce using rule 46 (exp -> exp WA exp .)
    LEKHA           reduce using rule 46 (exp -> exp WA exp .)
    BHAE            reduce using rule 46 (exp -> exp WA exp .)
    NABHAE          reduce using rule 46 (exp -> exp WA exp .)
    RPARA           reduce using rule 46 (exp -> exp WA exp .)
    RGPARA          reduce using rule 46 (exp -> exp WA exp .)
    CHHA            reduce using rule 46 (exp -> exp WA exp .)
    CHHAINA         reduce using rule 46 (exp -> exp WA exp .)
    NEWLINE         reduce using rule 46 (exp -> exp WA exp .)
    $end            reduce using rule 46 (exp -> exp WA exp .)
    DEKHI           reduce using rule 46 (exp -> exp WA exp .)
    COLON           reduce using rule 46 (exp -> exp WA exp .)
    SEMICOLON       reduce using rule 46 (exp -> exp WA exp .)
    EQ              shift and go to state 57
    LE              shift and go to state 44
    GE              shift and go to state 50
    NE              shift and go to state 48
    LT              shift and go to state 47
    GT              shift and go to state 51
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46
    RA              shift and go to state 53
    WA              shift and go to state 55

  ! EQ              [ reduce using rule 46 (exp -> exp WA exp .) ]
  ! LE              [ reduce using rule 46 (exp -> exp WA exp .) ]
  ! GE              [ reduce using rule 46 (exp -> exp WA exp .) ]
  ! NE              [ reduce using rule 46 (exp -> exp WA exp .) ]
  ! LT              [ reduce using rule 46 (exp -> exp WA exp .) ]
  ! GT              [ reduce using rule 46 (exp -> exp WA exp .) ]
  ! PLUS            [ reduce using rule 46 (exp -> exp WA exp .) ]
  ! MINUS           [ reduce using rule 46 (exp -> exp WA exp .) ]
  ! TIMES           [ reduce using rule 46 (exp -> exp WA exp .) ]
  ! DIVIDE          [ reduce using rule 46 (exp -> exp WA exp .) ]
  ! POWER           [ reduce using rule 46 (exp -> exp WA exp .) ]
  ! RA              [ reduce using rule 46 (exp -> exp WA exp .) ]
  ! WA              [ reduce using rule 46 (exp -> exp WA exp .) ]


state 94

    (42) exp -> exp TIMES exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    EQ              reduce using rule 42 (exp -> exp TIMES exp .)
    LE              reduce using rule 42 (exp -> exp TIMES exp .)
    GE              reduce using rule 42 (exp -> exp TIMES exp .)
    NE              reduce using rule 42 (exp -> exp TIMES exp .)
    LT              reduce using rule 42 (exp -> exp TIMES exp .)
    GT              reduce using rule 42 (exp -> exp TIMES exp .)
    PLUS            reduce using rule 42 (exp -> exp TIMES exp .)
    MINUS           reduce using rule 42 (exp -> exp TIMES exp .)
    TIMES           reduce using rule 42 (exp -> exp TIMES exp .)
    DIVIDE          reduce using rule 42 (exp -> exp TIMES exp .)
    POWER           reduce using rule 42 (exp -> exp TIMES exp .)
    RA              reduce using rule 42 (exp -> exp TIMES exp .)
    WA              reduce using rule 42 (exp -> exp TIMES exp .)
    PATHAU          reduce using rule 42 (exp -> exp TIMES exp .)
    COMMA           reduce using rule 42 (exp -> exp TIMES exp .)
    LEKHA           reduce using rule 42 (exp -> exp TIMES exp .)
    BHAE            reduce using rule 42 (exp -> exp TIMES exp .)
    NABHAE          reduce using rule 42 (exp -> exp TIMES exp .)
    RPARA           reduce using rule 42 (exp -> exp TIMES exp .)
    RGPARA          reduce using rule 42 (exp -> exp TIMES exp .)
    CHHA            reduce using rule 42 (exp -> exp TIMES exp .)
    CHHAINA         reduce using rule 42 (exp -> exp TIMES exp .)
    NEWLINE         reduce using rule 42 (exp -> exp TIMES exp .)
    $end            reduce using rule 42 (exp -> exp TIMES exp .)
    DEKHI           reduce using rule 42 (exp -> exp TIMES exp .)
    COLON           reduce using rule 42 (exp -> exp TIMES exp .)
    SEMICOLON       reduce using rule 42 (exp -> exp TIMES exp .)

  ! EQ              [ shift and go to state 57 ]
  ! LE              [ shift and go to state 44 ]
  ! GE              [ shift and go to state 50 ]
  ! NE              [ shift and go to state 48 ]
  ! LT              [ shift and go to state 47 ]
  ! GT              [ shift and go to state 51 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 58 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 45 ]
  ! POWER           [ shift and go to state 46 ]
  ! RA              [ shift and go to state 53 ]
  ! WA              [ shift and go to state 55 ]


state 95

    (34) exp -> exp EQ exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    EQ              reduce using rule 34 (exp -> exp EQ exp .)
    NE              reduce using rule 34 (exp -> exp EQ exp .)
    RA              reduce using rule 34 (exp -> exp EQ exp .)
    WA              reduce using rule 34 (exp -> exp EQ exp .)
    PATHAU          reduce using rule 34 (exp -> exp EQ exp .)
    COMMA           reduce using rule 34 (exp -> exp EQ exp .)
    LEKHA           reduce using rule 34 (exp -> exp EQ exp .)
    BHAE            reduce using rule 34 (exp -> exp EQ exp .)
    NABHAE          reduce using rule 34 (exp -> exp EQ exp .)
    RPARA           reduce using rule 34 (exp -> exp EQ exp .)
    RGPARA          reduce using rule 34 (exp -> exp EQ exp .)
    CHHA            reduce using rule 34 (exp -> exp EQ exp .)
    CHHAINA         reduce using rule 34 (exp -> exp EQ exp .)
    NEWLINE         reduce using rule 34 (exp -> exp EQ exp .)
    $end            reduce using rule 34 (exp -> exp EQ exp .)
    DEKHI           reduce using rule 34 (exp -> exp EQ exp .)
    COLON           reduce using rule 34 (exp -> exp EQ exp .)
    SEMICOLON       reduce using rule 34 (exp -> exp EQ exp .)
    LE              shift and go to state 44
    GE              shift and go to state 50
    LT              shift and go to state 47
    GT              shift and go to state 51
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46

  ! LE              [ reduce using rule 34 (exp -> exp EQ exp .) ]
  ! GE              [ reduce using rule 34 (exp -> exp EQ exp .) ]
  ! LT              [ reduce using rule 34 (exp -> exp EQ exp .) ]
  ! GT              [ reduce using rule 34 (exp -> exp EQ exp .) ]
  ! PLUS            [ reduce using rule 34 (exp -> exp EQ exp .) ]
  ! MINUS           [ reduce using rule 34 (exp -> exp EQ exp .) ]
  ! TIMES           [ reduce using rule 34 (exp -> exp EQ exp .) ]
  ! DIVIDE          [ reduce using rule 34 (exp -> exp EQ exp .) ]
  ! POWER           [ reduce using rule 34 (exp -> exp EQ exp .) ]
  ! EQ              [ shift and go to state 57 ]
  ! NE              [ shift and go to state 48 ]
  ! RA              [ shift and go to state 53 ]
  ! WA              [ shift and go to state 55 ]


state 96

    (41) exp -> exp MINUS exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    EQ              reduce using rule 41 (exp -> exp MINUS exp .)
    LE              reduce using rule 41 (exp -> exp MINUS exp .)
    GE              reduce using rule 41 (exp -> exp MINUS exp .)
    NE              reduce using rule 41 (exp -> exp MINUS exp .)
    LT              reduce using rule 41 (exp -> exp MINUS exp .)
    GT              reduce using rule 41 (exp -> exp MINUS exp .)
    PLUS            reduce using rule 41 (exp -> exp MINUS exp .)
    MINUS           reduce using rule 41 (exp -> exp MINUS exp .)
    RA              reduce using rule 41 (exp -> exp MINUS exp .)
    WA              reduce using rule 41 (exp -> exp MINUS exp .)
    PATHAU          reduce using rule 41 (exp -> exp MINUS exp .)
    COMMA           reduce using rule 41 (exp -> exp MINUS exp .)
    LEKHA           reduce using rule 41 (exp -> exp MINUS exp .)
    BHAE            reduce using rule 41 (exp -> exp MINUS exp .)
    NABHAE          reduce using rule 41 (exp -> exp MINUS exp .)
    RPARA           reduce using rule 41 (exp -> exp MINUS exp .)
    RGPARA          reduce using rule 41 (exp -> exp MINUS exp .)
    CHHA            reduce using rule 41 (exp -> exp MINUS exp .)
    CHHAINA         reduce using rule 41 (exp -> exp MINUS exp .)
    NEWLINE         reduce using rule 41 (exp -> exp MINUS exp .)
    $end            reduce using rule 41 (exp -> exp MINUS exp .)
    DEKHI           reduce using rule 41 (exp -> exp MINUS exp .)
    COLON           reduce using rule 41 (exp -> exp MINUS exp .)
    SEMICOLON       reduce using rule 41 (exp -> exp MINUS exp .)
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46

  ! TIMES           [ reduce using rule 41 (exp -> exp MINUS exp .) ]
  ! DIVIDE          [ reduce using rule 41 (exp -> exp MINUS exp .) ]
  ! POWER           [ reduce using rule 41 (exp -> exp MINUS exp .) ]
  ! EQ              [ shift and go to state 57 ]
  ! LE              [ shift and go to state 44 ]
  ! GE              [ shift and go to state 50 ]
  ! NE              [ shift and go to state 48 ]
  ! LT              [ shift and go to state 47 ]
  ! GT              [ shift and go to state 51 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 58 ]
  ! RA              [ shift and go to state 53 ]
  ! WA              [ shift and go to state 55 ]


state 97

    (54) exp -> IDENTIFIER LPARA variableexp . RPARA

    RPARA           shift and go to state 119


state 98

    (58) condition -> condition WA condition .
    (57) condition -> condition . RA condition
    (58) condition -> condition . WA condition

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 58 (condition -> condition WA condition .)
    RA              shift and go to state 62
    WA              shift and go to state 60

  ! RA              [ reduce using rule 58 (condition -> condition WA condition .) ]
  ! WA              [ reduce using rule 58 (condition -> condition WA condition .) ]


state 99

    (61) cmpdstmt -> stmt . NEWLINE cmpdstmt

    NEWLINE         shift and go to state 120


state 100

    (19) stmt -> YEDI condition NEWLINE cmpdstmt . optelse DIYE
    (63) optelse -> . ATHAWA condition NEWLINE cmpdstmt optelse
    (64) optelse -> . ATHAWA NEWLINE cmpdstmt
    (65) optelse -> .

    ATHAWA          shift and go to state 122
    DIYE            reduce using rule 65 (optelse -> .)

    optelse                        shift and go to state 121

state 101

    (57) condition -> condition RA condition .
    (57) condition -> condition . RA condition
    (58) condition -> condition . WA condition

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 57 (condition -> condition RA condition .)
    RA              shift and go to state 62
    WA              shift and go to state 60

  ! RA              [ reduce using rule 57 (condition -> condition RA condition .) ]
  ! WA              [ reduce using rule 57 (condition -> condition RA condition .) ]


state 102

    (24) stmt -> KAAM IDENTIFIER LPARA variableArgs . RPARA NEWLINE cmpdstmt MAKA

    RPARA           shift and go to state 123


state 103

    (28) variableArgs -> IDENTIFIER . COMMA variableArgs
    (29) variableArgs -> IDENTIFIER .

    COMMA           shift and go to state 124
    RPARA           reduce using rule 29 (variableArgs -> IDENTIFIER .)


state 104

    (72) whilecond -> whilecond WA . whilecond
    (71) whilecond -> . whilecond RA whilecond
    (72) whilecond -> . whilecond WA whilecond
    (73) whilecond -> . exp CHHA
    (74) whilecond -> . exp CHHAINA
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 68
    whilecond                      shift and go to state 125

state 105

    (22) stmt -> JABA SAMMA whilecond NEWLINE . cmpdstmt BAJA
    (61) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (62) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . IDENTIFIER DEKHAU
    (11) stmt -> . IDENTIFIER LUKAU
    (12) stmt -> . IDENTIFIER BANAU
    (13) stmt -> . IDENTIFIER METAU
    (14) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (15) stmt -> . dynamString LEKHA
    (16) stmt -> . dynamString LEKHA SEMICOLON
    (17) stmt -> . IDENTIFIER LEU
    (18) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (19) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (20) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (21) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (22) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (23) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (24) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (25) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (26) stmt -> . exp PATHAU
    (27) stmt -> . NEWLINE
    (55) dynamString -> . exp COMMA dynamString
    (56) dynamString -> . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    BAJA            reduce using rule 62 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 6
    KAAM            shift and go to state 4
    NEWLINE         shift and go to state 5
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    dynamString                    shift and go to state 2
    cmpdstmt                       shift and go to state 126
    stmt                           shift and go to state 99
    exp                            shift and go to state 15

state 106

    (71) whilecond -> whilecond RA . whilecond
    (71) whilecond -> . whilecond RA whilecond
    (72) whilecond -> . whilecond WA whilecond
    (73) whilecond -> . exp CHHA
    (74) whilecond -> . exp CHHAINA
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 68
    whilecond                      shift and go to state 127

state 107

    (73) whilecond -> exp CHHA .

    RA              reduce using rule 73 (whilecond -> exp CHHA .)
    WA              reduce using rule 73 (whilecond -> exp CHHA .)
    NEWLINE         reduce using rule 73 (whilecond -> exp CHHA .)


state 108

    (74) whilecond -> exp CHHAINA .

    RA              reduce using rule 74 (whilecond -> exp CHHAINA .)
    WA              reduce using rule 74 (whilecond -> exp CHHAINA .)
    NEWLINE         reduce using rule 74 (whilecond -> exp CHHAINA .)


state 109

    (51) exp -> IDENTIFIER LGPARA exp RGPARA .

    EQ              reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LE              reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    GE              reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NE              reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LT              reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    GT              reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    PLUS            reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    MINUS           reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    TIMES           reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    DIVIDE          reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    POWER           reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RA              reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    WA              reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    PATHAU          reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    COMMA           reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LEKHA           reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    BHAE            reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NABHAE          reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RPARA           reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RGPARA          reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    CHHA            reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    CHHAINA         reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NEWLINE         reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    $end            reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    DEKHI           reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    COLON           reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    SEMICOLON       reduce using rule 51 (exp -> IDENTIFIER LGPARA exp RGPARA .)


state 110

    (8) stmt -> IDENTIFIER BATA IDENTIFIER LEU .

    NEWLINE         reduce using rule 8 (stmt -> IDENTIFIER BATA IDENTIFIER LEU .)
    $end            reduce using rule 8 (stmt -> IDENTIFIER BATA IDENTIFIER LEU .)


state 111

    (23) stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp . RGPARA
    (50) exp -> LGPARA variableexp . RGPARA

    RGPARA          shift and go to state 128


state 112

    (18) stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    NEWLINE         reduce using rule 18 (stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .)
    $end            reduce using rule 18 (stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .)
    EQ              shift and go to state 57
    LE              shift and go to state 44
    GE              shift and go to state 50
    NE              shift and go to state 48
    LT              shift and go to state 47
    GT              shift and go to state 51
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46
    RA              shift and go to state 53
    WA              shift and go to state 55


state 113

    (25) stmt -> IDENTIFIER LPARA variableexp RPARA .
    (54) exp -> IDENTIFIER LPARA variableexp RPARA .

    NEWLINE         reduce using rule 25 (stmt -> IDENTIFIER LPARA variableexp RPARA .)
    $end            reduce using rule 25 (stmt -> IDENTIFIER LPARA variableexp RPARA .)
    PATHAU          reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    COMMA           reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    EQ              reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LE              reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GE              reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NE              reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LT              reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GT              reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    PLUS            reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    MINUS           reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    TIMES           reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    DIVIDE          reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    POWER           reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RA              reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    WA              reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LEKHA           reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)


state 114

    (6) stmt -> IDENTIFIER MA dynamString LEKHA . SEMICOLON
    (7) stmt -> IDENTIFIER MA dynamString LEKHA .

    SEMICOLON       shift and go to state 129
    NEWLINE         reduce using rule 7 (stmt -> IDENTIFIER MA dynamString LEKHA .)
    $end            reduce using rule 7 (stmt -> IDENTIFIER MA dynamString LEKHA .)


state 115

    (14) stmt -> IDENTIFIER MA IDENTIFIER KORA . variableexp
    (31) variableexp -> . exp COMMA variableexp
    (32) variableexp -> . exp
    (33) variableexp -> .
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    NEWLINE         reduce using rule 33 (variableexp -> .)
    $end            reduce using rule 33 (variableexp -> .)
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 42
    variableexp                    shift and go to state 130

state 116

    (20) stmt -> SABEI IDENTIFIER ASSIGNMENT exp . DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (21) stmt -> SABEI IDENTIFIER ASSIGNMENT exp . DEKHI exp NEWLINE cmpdstmt BAISA
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    DEKHI           shift and go to state 131
    EQ              shift and go to state 57
    LE              shift and go to state 44
    GE              shift and go to state 50
    NE              shift and go to state 48
    LT              shift and go to state 47
    GT              shift and go to state 51
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46
    RA              shift and go to state 53
    WA              shift and go to state 55


state 117

    (53) exp -> LPARA exp RPARA QUESTION . exp COLON exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 132

state 118

    (31) variableexp -> exp COMMA variableexp .

    RGPARA          reduce using rule 31 (variableexp -> exp COMMA variableexp .)
    NEWLINE         reduce using rule 31 (variableexp -> exp COMMA variableexp .)
    $end            reduce using rule 31 (variableexp -> exp COMMA variableexp .)
    RPARA           reduce using rule 31 (variableexp -> exp COMMA variableexp .)


state 119

    (54) exp -> IDENTIFIER LPARA variableexp RPARA .

    EQ              reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LE              reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GE              reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NE              reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LT              reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GT              reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    PLUS            reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    MINUS           reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    TIMES           reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    DIVIDE          reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    POWER           reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RA              reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    WA              reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    PATHAU          reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    COMMA           reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LEKHA           reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    BHAE            reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NABHAE          reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RPARA           reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RGPARA          reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    CHHA            reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    CHHAINA         reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NEWLINE         reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    $end            reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    DEKHI           reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    COLON           reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    SEMICOLON       reduce using rule 54 (exp -> IDENTIFIER LPARA variableexp RPARA .)


state 120

    (61) cmpdstmt -> stmt NEWLINE . cmpdstmt
    (61) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (62) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . IDENTIFIER DEKHAU
    (11) stmt -> . IDENTIFIER LUKAU
    (12) stmt -> . IDENTIFIER BANAU
    (13) stmt -> . IDENTIFIER METAU
    (14) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (15) stmt -> . dynamString LEKHA
    (16) stmt -> . dynamString LEKHA SEMICOLON
    (17) stmt -> . IDENTIFIER LEU
    (18) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (19) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (20) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (21) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (22) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (23) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (24) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (25) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (26) stmt -> . exp PATHAU
    (27) stmt -> . NEWLINE
    (55) dynamString -> . exp COMMA dynamString
    (56) dynamString -> . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    ATHAWA          reduce using rule 62 (cmpdstmt -> .)
    DIYE            reduce using rule 62 (cmpdstmt -> .)
    BAJA            reduce using rule 62 (cmpdstmt -> .)
    MAKA            reduce using rule 62 (cmpdstmt -> .)
    BAISA           reduce using rule 62 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 6
    KAAM            shift and go to state 4
    NEWLINE         shift and go to state 5
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    dynamString                    shift and go to state 2
    cmpdstmt                       shift and go to state 133
    stmt                           shift and go to state 99
    exp                            shift and go to state 15

state 121

    (19) stmt -> YEDI condition NEWLINE cmpdstmt optelse . DIYE

    DIYE            shift and go to state 134


state 122

    (63) optelse -> ATHAWA . condition NEWLINE cmpdstmt optelse
    (64) optelse -> ATHAWA . NEWLINE cmpdstmt
    (57) condition -> . condition RA condition
    (58) condition -> . condition WA condition
    (59) condition -> . exp BHAE
    (60) condition -> . exp NABHAE
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    NEWLINE         shift and go to state 135
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 18
    condition                      shift and go to state 136

state 123

    (24) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA . NEWLINE cmpdstmt MAKA

    NEWLINE         shift and go to state 137


state 124

    (28) variableArgs -> IDENTIFIER COMMA . variableArgs
    (28) variableArgs -> . IDENTIFIER COMMA variableArgs
    (29) variableArgs -> . IDENTIFIER
    (30) variableArgs -> .

    IDENTIFIER      shift and go to state 103
    RPARA           reduce using rule 30 (variableArgs -> .)

    variableArgs                   shift and go to state 138

state 125

    (72) whilecond -> whilecond WA whilecond .
    (71) whilecond -> whilecond . RA whilecond
    (72) whilecond -> whilecond . WA whilecond

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 72 (whilecond -> whilecond WA whilecond .)
    RA              shift and go to state 106
    WA              shift and go to state 104

  ! RA              [ reduce using rule 72 (whilecond -> whilecond WA whilecond .) ]
  ! WA              [ reduce using rule 72 (whilecond -> whilecond WA whilecond .) ]


state 126

    (22) stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt . BAJA

    BAJA            shift and go to state 139


state 127

    (71) whilecond -> whilecond RA whilecond .
    (71) whilecond -> whilecond . RA whilecond
    (72) whilecond -> whilecond . WA whilecond

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 71 (whilecond -> whilecond RA whilecond .)
    RA              shift and go to state 106
    WA              shift and go to state 104

  ! RA              [ reduce using rule 71 (whilecond -> whilecond RA whilecond .) ]
  ! WA              [ reduce using rule 71 (whilecond -> whilecond RA whilecond .) ]


state 128

    (23) stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .
    (50) exp -> LGPARA variableexp RGPARA .

  ! reduce/reduce conflict for NEWLINE resolved using rule 23 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
  ! reduce/reduce conflict for $end resolved using rule 23 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    NEWLINE         reduce using rule 23 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    $end            reduce using rule 23 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    EQ              reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    LE              reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    GE              reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    NE              reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    LT              reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    GT              reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    PLUS            reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    MINUS           reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    TIMES           reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    DIVIDE          reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    POWER           reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    RA              reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)
    WA              reduce using rule 50 (exp -> LGPARA variableexp RGPARA .)

  ! NEWLINE         [ reduce using rule 50 (exp -> LGPARA variableexp RGPARA .) ]
  ! $end            [ reduce using rule 50 (exp -> LGPARA variableexp RGPARA .) ]


state 129

    (6) stmt -> IDENTIFIER MA dynamString LEKHA SEMICOLON .

    NEWLINE         reduce using rule 6 (stmt -> IDENTIFIER MA dynamString LEKHA SEMICOLON .)
    $end            reduce using rule 6 (stmt -> IDENTIFIER MA dynamString LEKHA SEMICOLON .)


state 130

    (14) stmt -> IDENTIFIER MA IDENTIFIER KORA variableexp .

    NEWLINE         reduce using rule 14 (stmt -> IDENTIFIER MA IDENTIFIER KORA variableexp .)
    $end            reduce using rule 14 (stmt -> IDENTIFIER MA IDENTIFIER KORA variableexp .)


state 131

    (20) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI . exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (21) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI . exp NEWLINE cmpdstmt BAISA
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 140

state 132

    (53) exp -> LPARA exp RPARA QUESTION exp . COLON exp
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    COLON           shift and go to state 141
    EQ              shift and go to state 57
    LE              shift and go to state 44
    GE              shift and go to state 50
    NE              shift and go to state 48
    LT              shift and go to state 47
    GT              shift and go to state 51
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46
    RA              shift and go to state 53
    WA              shift and go to state 55


state 133

    (61) cmpdstmt -> stmt NEWLINE cmpdstmt .

    BAJA            reduce using rule 61 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    ATHAWA          reduce using rule 61 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    DIYE            reduce using rule 61 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    BAISA           reduce using rule 61 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    MAKA            reduce using rule 61 (cmpdstmt -> stmt NEWLINE cmpdstmt .)


state 134

    (19) stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .

    NEWLINE         reduce using rule 19 (stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .)
    $end            reduce using rule 19 (stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .)


state 135

    (64) optelse -> ATHAWA NEWLINE . cmpdstmt
    (61) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (62) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . IDENTIFIER DEKHAU
    (11) stmt -> . IDENTIFIER LUKAU
    (12) stmt -> . IDENTIFIER BANAU
    (13) stmt -> . IDENTIFIER METAU
    (14) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (15) stmt -> . dynamString LEKHA
    (16) stmt -> . dynamString LEKHA SEMICOLON
    (17) stmt -> . IDENTIFIER LEU
    (18) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (19) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (20) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (21) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (22) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (23) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (24) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (25) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (26) stmt -> . exp PATHAU
    (27) stmt -> . NEWLINE
    (55) dynamString -> . exp COMMA dynamString
    (56) dynamString -> . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    DIYE            reduce using rule 62 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 6
    KAAM            shift and go to state 4
    NEWLINE         shift and go to state 5
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    dynamString                    shift and go to state 2
    cmpdstmt                       shift and go to state 142
    stmt                           shift and go to state 99
    exp                            shift and go to state 15

state 136

    (63) optelse -> ATHAWA condition . NEWLINE cmpdstmt optelse
    (57) condition -> condition . RA condition
    (58) condition -> condition . WA condition

    NEWLINE         shift and go to state 143
    RA              shift and go to state 62
    WA              shift and go to state 60


state 137

    (24) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE . cmpdstmt MAKA
    (61) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (62) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . IDENTIFIER DEKHAU
    (11) stmt -> . IDENTIFIER LUKAU
    (12) stmt -> . IDENTIFIER BANAU
    (13) stmt -> . IDENTIFIER METAU
    (14) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (15) stmt -> . dynamString LEKHA
    (16) stmt -> . dynamString LEKHA SEMICOLON
    (17) stmt -> . IDENTIFIER LEU
    (18) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (19) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (20) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (21) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (22) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (23) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (24) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (25) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (26) stmt -> . exp PATHAU
    (27) stmt -> . NEWLINE
    (55) dynamString -> . exp COMMA dynamString
    (56) dynamString -> . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    MAKA            reduce using rule 62 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 6
    KAAM            shift and go to state 4
    NEWLINE         shift and go to state 5
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    dynamString                    shift and go to state 2
    cmpdstmt                       shift and go to state 144
    stmt                           shift and go to state 99
    exp                            shift and go to state 15

state 138

    (28) variableArgs -> IDENTIFIER COMMA variableArgs .

    RPARA           reduce using rule 28 (variableArgs -> IDENTIFIER COMMA variableArgs .)


state 139

    (22) stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .

    NEWLINE         reduce using rule 22 (stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .)
    $end            reduce using rule 22 (stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .)


state 140

    (20) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp . SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (21) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp . NEWLINE cmpdstmt BAISA
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    SEMICOLON       shift and go to state 145
    NEWLINE         shift and go to state 146
    EQ              shift and go to state 57
    LE              shift and go to state 44
    GE              shift and go to state 50
    NE              shift and go to state 48
    LT              shift and go to state 47
    GT              shift and go to state 51
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46
    RA              shift and go to state 53
    WA              shift and go to state 55


state 141

    (53) exp -> LPARA exp RPARA QUESTION exp COLON . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 147

state 142

    (64) optelse -> ATHAWA NEWLINE cmpdstmt .

    DIYE            reduce using rule 64 (optelse -> ATHAWA NEWLINE cmpdstmt .)


state 143

    (63) optelse -> ATHAWA condition NEWLINE . cmpdstmt optelse
    (61) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (62) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . IDENTIFIER DEKHAU
    (11) stmt -> . IDENTIFIER LUKAU
    (12) stmt -> . IDENTIFIER BANAU
    (13) stmt -> . IDENTIFIER METAU
    (14) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (15) stmt -> . dynamString LEKHA
    (16) stmt -> . dynamString LEKHA SEMICOLON
    (17) stmt -> . IDENTIFIER LEU
    (18) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (19) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (20) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (21) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (22) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (23) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (24) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (25) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (26) stmt -> . exp PATHAU
    (27) stmt -> . NEWLINE
    (55) dynamString -> . exp COMMA dynamString
    (56) dynamString -> . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    ATHAWA          reduce using rule 62 (cmpdstmt -> .)
    DIYE            reduce using rule 62 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 6
    KAAM            shift and go to state 4
    NEWLINE         shift and go to state 5
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    stmt                           shift and go to state 99
    dynamString                    shift and go to state 2
    cmpdstmt                       shift and go to state 148
    exp                            shift and go to state 15

state 144

    (24) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt . MAKA

    MAKA            shift and go to state 149


state 145

    (20) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON . sign exp NEWLINE cmpdstmt BAISA
    (66) sign -> . PLUS
    (67) sign -> . MINUS

    PLUS            shift and go to state 30
    MINUS           shift and go to state 28

    sign                           shift and go to state 150

state 146

    (21) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE . cmpdstmt BAISA
    (61) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (62) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . IDENTIFIER DEKHAU
    (11) stmt -> . IDENTIFIER LUKAU
    (12) stmt -> . IDENTIFIER BANAU
    (13) stmt -> . IDENTIFIER METAU
    (14) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (15) stmt -> . dynamString LEKHA
    (16) stmt -> . dynamString LEKHA SEMICOLON
    (17) stmt -> . IDENTIFIER LEU
    (18) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (19) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (20) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (21) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (22) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (23) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (24) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (25) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (26) stmt -> . exp PATHAU
    (27) stmt -> . NEWLINE
    (55) dynamString -> . exp COMMA dynamString
    (56) dynamString -> . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    BAISA           reduce using rule 62 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 6
    KAAM            shift and go to state 4
    NEWLINE         shift and go to state 5
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    dynamString                    shift and go to state 2
    cmpdstmt                       shift and go to state 151
    stmt                           shift and go to state 99
    exp                            shift and go to state 15

state 147

    (53) exp -> LPARA exp RPARA QUESTION exp COLON exp .
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    COMMA           reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    LEKHA           reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    BHAE            reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    NABHAE          reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    RPARA           reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    RGPARA          reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    CHHA            reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    CHHAINA         reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    NEWLINE         reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    $end            reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    DEKHI           reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    COLON           reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    SEMICOLON       reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    EQ              shift and go to state 57
    LE              shift and go to state 44
    GE              shift and go to state 50
    NE              shift and go to state 48
    LT              shift and go to state 47
    GT              shift and go to state 51
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46
    RA              shift and go to state 53
    WA              shift and go to state 55

  ! EQ              [ reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! LE              [ reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! GE              [ reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! NE              [ reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! LT              [ reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! GT              [ reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! PLUS            [ reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! MINUS           [ reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! TIMES           [ reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! DIVIDE          [ reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! POWER           [ reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! RA              [ reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! WA              [ reduce using rule 53 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]


state 148

    (63) optelse -> ATHAWA condition NEWLINE cmpdstmt . optelse
    (63) optelse -> . ATHAWA condition NEWLINE cmpdstmt optelse
    (64) optelse -> . ATHAWA NEWLINE cmpdstmt
    (65) optelse -> .

    ATHAWA          shift and go to state 122
    DIYE            reduce using rule 65 (optelse -> .)

    optelse                        shift and go to state 152

state 149

    (24) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA .

    NEWLINE         reduce using rule 24 (stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA .)
    $end            reduce using rule 24 (stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA .)


state 150

    (20) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign . exp NEWLINE cmpdstmt BAISA
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    exp                            shift and go to state 153

state 151

    (21) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt . BAISA

    BAISA           shift and go to state 154


state 152

    (63) optelse -> ATHAWA condition NEWLINE cmpdstmt optelse .

    DIYE            reduce using rule 63 (optelse -> ATHAWA condition NEWLINE cmpdstmt optelse .)


state 153

    (20) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp . NEWLINE cmpdstmt BAISA
    (34) exp -> exp . EQ exp
    (35) exp -> exp . LE exp
    (36) exp -> exp . GE exp
    (37) exp -> exp . NE exp
    (38) exp -> exp . LT exp
    (39) exp -> exp . GT exp
    (40) exp -> exp . PLUS exp
    (41) exp -> exp . MINUS exp
    (42) exp -> exp . TIMES exp
    (43) exp -> exp . DIVIDE exp
    (44) exp -> exp . POWER exp
    (45) exp -> exp . RA exp
    (46) exp -> exp . WA exp

    NEWLINE         shift and go to state 155
    EQ              shift and go to state 57
    LE              shift and go to state 44
    GE              shift and go to state 50
    NE              shift and go to state 48
    LT              shift and go to state 47
    GT              shift and go to state 51
    PLUS            shift and go to state 54
    MINUS           shift and go to state 58
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 45
    POWER           shift and go to state 46
    RA              shift and go to state 53
    WA              shift and go to state 55


state 154

    (21) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA .

    NEWLINE         reduce using rule 21 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA .)
    $end            reduce using rule 21 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA .)


state 155

    (20) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE . cmpdstmt BAISA
    (61) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (62) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . IDENTIFIER DEKHAU
    (11) stmt -> . IDENTIFIER LUKAU
    (12) stmt -> . IDENTIFIER BANAU
    (13) stmt -> . IDENTIFIER METAU
    (14) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (15) stmt -> . dynamString LEKHA
    (16) stmt -> . dynamString LEKHA SEMICOLON
    (17) stmt -> . IDENTIFIER LEU
    (18) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (19) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (20) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (21) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (22) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (23) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (24) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (25) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (26) stmt -> . exp PATHAU
    (27) stmt -> . NEWLINE
    (55) dynamString -> . exp COMMA dynamString
    (56) dynamString -> . exp
    (34) exp -> . exp EQ exp
    (35) exp -> . exp LE exp
    (36) exp -> . exp GE exp
    (37) exp -> . exp NE exp
    (38) exp -> . exp LT exp
    (39) exp -> . exp GT exp
    (40) exp -> . exp PLUS exp
    (41) exp -> . exp MINUS exp
    (42) exp -> . exp TIMES exp
    (43) exp -> . exp DIVIDE exp
    (44) exp -> . exp POWER exp
    (45) exp -> . exp RA exp
    (46) exp -> . exp WA exp
    (47) exp -> . IDENTIFIER
    (48) exp -> . STRING
    (49) exp -> . NUMBER
    (50) exp -> . LGPARA variableexp RGPARA
    (51) exp -> . IDENTIFIER LGPARA exp RGPARA
    (52) exp -> . LPARA exp RPARA
    (53) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (54) exp -> . IDENTIFIER LPARA variableexp RPARA

    BAISA           reduce using rule 62 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 6
    KAAM            shift and go to state 4
    NEWLINE         shift and go to state 5
    STRING          shift and go to state 3
    NUMBER          shift and go to state 10
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 9

    dynamString                    shift and go to state 2
    cmpdstmt                       shift and go to state 156
    stmt                           shift and go to state 99
    exp                            shift and go to state 15

state 156

    (20) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt . BAISA

    BAISA           shift and go to state 157


state 157

    (20) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .

    NEWLINE         reduce using rule 20 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .)
    $end            reduce using rule 20 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQ in state 87 resolved as shift
WARNING: shift/reduce conflict for LE in state 87 resolved as shift
WARNING: shift/reduce conflict for GE in state 87 resolved as shift
WARNING: shift/reduce conflict for NE in state 87 resolved as shift
WARNING: shift/reduce conflict for LT in state 87 resolved as shift
WARNING: shift/reduce conflict for GT in state 87 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 87 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 87 resolved as shift
WARNING: shift/reduce conflict for POWER in state 87 resolved as shift
WARNING: shift/reduce conflict for RA in state 87 resolved as shift
WARNING: shift/reduce conflict for WA in state 87 resolved as shift
WARNING: shift/reduce conflict for EQ in state 91 resolved as shift
WARNING: shift/reduce conflict for LE in state 91 resolved as shift
WARNING: shift/reduce conflict for GE in state 91 resolved as shift
WARNING: shift/reduce conflict for NE in state 91 resolved as shift
WARNING: shift/reduce conflict for LT in state 91 resolved as shift
WARNING: shift/reduce conflict for GT in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 91 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 91 resolved as shift
WARNING: shift/reduce conflict for POWER in state 91 resolved as shift
WARNING: shift/reduce conflict for RA in state 91 resolved as shift
WARNING: shift/reduce conflict for WA in state 91 resolved as shift
WARNING: shift/reduce conflict for EQ in state 93 resolved as shift
WARNING: shift/reduce conflict for LE in state 93 resolved as shift
WARNING: shift/reduce conflict for GE in state 93 resolved as shift
WARNING: shift/reduce conflict for NE in state 93 resolved as shift
WARNING: shift/reduce conflict for LT in state 93 resolved as shift
WARNING: shift/reduce conflict for GT in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 93 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 93 resolved as shift
WARNING: shift/reduce conflict for POWER in state 93 resolved as shift
WARNING: shift/reduce conflict for RA in state 93 resolved as shift
WARNING: shift/reduce conflict for WA in state 93 resolved as shift
WARNING: shift/reduce conflict for RA in state 98 resolved as shift
WARNING: shift/reduce conflict for WA in state 98 resolved as shift
WARNING: shift/reduce conflict for RA in state 101 resolved as shift
WARNING: shift/reduce conflict for WA in state 101 resolved as shift
WARNING: shift/reduce conflict for RA in state 125 resolved as shift
WARNING: shift/reduce conflict for WA in state 125 resolved as shift
WARNING: shift/reduce conflict for RA in state 127 resolved as shift
WARNING: shift/reduce conflict for WA in state 127 resolved as shift
WARNING: shift/reduce conflict for EQ in state 147 resolved as shift
WARNING: shift/reduce conflict for LE in state 147 resolved as shift
WARNING: shift/reduce conflict for GE in state 147 resolved as shift
WARNING: shift/reduce conflict for NE in state 147 resolved as shift
WARNING: shift/reduce conflict for LT in state 147 resolved as shift
WARNING: shift/reduce conflict for GT in state 147 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 147 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 147 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 147 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 147 resolved as shift
WARNING: shift/reduce conflict for POWER in state 147 resolved as shift
WARNING: shift/reduce conflict for RA in state 147 resolved as shift
WARNING: shift/reduce conflict for WA in state 147 resolved as shift
WARNING: reduce/reduce conflict in state 128 resolved using rule (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA)
WARNING: rejected rule (exp -> LGPARA variableexp RGPARA) in state 128
