Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    LUKAU

Grammar

Rule 0     S' -> N
Rule 1     N -> element NEWLINE N
Rule 2     N -> NEWLINE N
Rule 3     N -> element
Rule 4     N -> <empty>
Rule 5     element -> stmt
Rule 6     stmt -> IDENTIFIER ASSIGNMENT exp
Rule 7     stmt -> dynamString LEKHA
Rule 8     stmt -> dynamString LEKHA SEMICOLON
Rule 9     stmt -> BAHIRA
Rule 10    stmt -> ARKO
Rule 11    stmt -> IDENTIFIER MA dynamString LEKHA SEMICOLON
Rule 12    stmt -> IDENTIFIER MA dynamString LEKHA
Rule 13    stmt -> IDENTIFIER BATA IDENTIFIER LEU
Rule 14    stmt -> IDENTIFIER BANDAGARA
Rule 15    stmt -> IDENTIFIER DEKHAU
Rule 16    stmt -> IDENTIFIER HATAU
Rule 17    stmt -> IDENTIFIER BANAU
Rule 18    stmt -> IDENTIFIER METAU
Rule 19    stmt -> IDENTIFIER MA IDENTIFIER KORA variableexp
Rule 20    stmt -> IDENTIFIER LEU
Rule 21    stmt -> IDENTIFIER incrementsign ASSIGNMENT exp
Rule 22    stmt -> IDENTIFIER LGPARA exp RGPARA incrementsign ASSIGNMENT exp
Rule 23    stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE
Rule 24    stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
Rule 25    stmt -> exp CHOTI NEWLINE cmpdstmt TICHO
Rule 26    stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
Rule 27    stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
Rule 28    stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
Rule 29    stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
Rule 30    stmt -> IDENTIFIER LPARA variableexp RPARA
Rule 31    stmt -> exp PATHAU
Rule 32    stmt -> IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
Rule 33    variableArgs -> IDENTIFIER COMMA variableArgs
Rule 34    variableArgs -> IDENTIFIER
Rule 35    variableArgs -> <empty>
Rule 36    variableexp -> exp COMMA variableexp
Rule 37    variableexp -> exp
Rule 38    variableexp -> <empty>
Rule 39    exp -> exp EQ exp
Rule 40    exp -> exp LE exp
Rule 41    exp -> exp GE exp
Rule 42    exp -> exp NE exp
Rule 43    exp -> exp LT exp
Rule 44    exp -> exp GT exp
Rule 45    exp -> exp PLUS exp
Rule 46    exp -> exp MINUS exp
Rule 47    exp -> exp TIMES exp
Rule 48    exp -> exp DIVIDE exp
Rule 49    exp -> exp POWER exp
Rule 50    exp -> exp MODULUS exp
Rule 51    exp -> exp RA exp
Rule 52    exp -> exp WA exp
Rule 53    exp -> IDENTIFIER
Rule 54    exp -> STRING
Rule 55    exp -> NUMBER
Rule 56    exp -> MINUS NUMBER
Rule 57    exp -> SUNYA
Rule 58    exp -> LGPARA variableexp RGPARA
Rule 59    exp -> IDENTIFIER LGPARA exp RGPARA
Rule 60    exp -> LPARA exp RPARA
Rule 61    exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
Rule 62    sliceexp -> exp
Rule 63    sliceexp -> <empty>
Rule 64    exp -> LPARA exp RPARA QUESTION exp COLON exp
Rule 65    exp -> IDENTIFIER LPARA variableexp RPARA
Rule 66    dynamString -> exp COMMA dynamString
Rule 67    dynamString -> exp
Rule 68    condition -> condition RA condition
Rule 69    condition -> condition WA condition
Rule 70    condition -> exp BHAE
Rule 71    condition -> exp NABHAE
Rule 72    cmpdstmt -> stmt NEWLINE cmpdstmt
Rule 73    cmpdstmt -> <empty>
Rule 74    optelse -> ATHAWA condition NEWLINE cmpdstmt optelse
Rule 75    optelse -> ATHAWA NEWLINE cmpdstmt
Rule 76    optelse -> <empty>
Rule 77    sign -> PLUS
Rule 78    sign -> MINUS
Rule 79    incrementsign -> sign
Rule 80    incrementsign -> TIMES
Rule 81    incrementsign -> DIVIDE
Rule 82    whilecond -> whilecond RA whilecond
Rule 83    whilecond -> whilecond WA whilecond
Rule 84    whilecond -> exp CHHA
Rule 85    whilecond -> exp CHHAINA

Terminals, with rules where they appear

ARKO                 : 10
ASSIGNMENT           : 6 21 22 24 26 28 32
ATHAWA               : 74 75
BAHIRA               : 9
BAISA                : 24 26
BAJA                 : 27
BANAU                : 17
BANDAGARA            : 14
BATA                 : 13
BHAE                 : 70
CHHA                 : 84
CHHAINA              : 85
CHOTI                : 25
COLON                : 61 64
COMMA                : 33 36 66
DEKHAU               : 15
DEKHI                : 24 26
DIVIDE               : 48 81
DIYE                 : 23
EQ                   : 39
GE                   : 41
GT                   : 44
HATAU                : 16
IDENTIFIER           : 6 11 12 13 13 14 15 16 17 18 19 19 20 21 22 24 26 28 29 30 32 33 34 53 59 61 65
JABA                 : 27
KAAM                 : 29
KORA                 : 19
LE                   : 40
LEKHA                : 7 8 11 12
LEU                  : 13 20
LGPARA               : 22 28 32 58 59 61
LPARA                : 29 30 60 64 65
LT                   : 43
LUKAU                : 
MA                   : 11 12 19
MAKA                 : 29
METAU                : 18
MINUS                : 46 56 78
MODULUS              : 50
NABHAE               : 71
NE                   : 42
NEWLINE              : 1 2 23 24 25 26 27 29 72 74 75
NUMBER               : 55 56
PATHAU               : 31
PLUS                 : 45 77
POWER                : 49
QUESTION             : 64
RA                   : 51 68 82
RGPARA               : 22 28 32 58 59 61
RPARA                : 29 30 60 64 65
SABEI                : 24 26
SAMMA                : 27
SEMICOLON            : 8 11 24
STRING               : 54
SUNYA                : 57
TICHO                : 25
TIMES                : 47 80
WA                   : 52 69 83
YEDI                 : 23
error                : 

Nonterminals, with rules where they appear

N                    : 1 2 0
cmpdstmt             : 23 24 25 26 27 29 72 74 75
condition            : 23 68 68 69 69 74
dynamString          : 7 8 11 12 66
element              : 1 3
exp                  : 6 21 22 22 24 24 24 25 26 26 31 32 32 36 37 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 59 60 62 64 64 64 66 67 70 71 84 85
incrementsign        : 21 22
optelse              : 23 74
sign                 : 24 79
sliceexp             : 61 61
stmt                 : 5 72
variableArgs         : 29 33
variableexp          : 19 28 30 36 58 65
whilecond            : 27 82 82 83 83

Parsing method: LALR

state 0

    (0) S' -> . N
    (1) N -> . element NEWLINE N
    (2) N -> . NEWLINE N
    (3) N -> . element
    (4) N -> .
    (5) element -> . stmt
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER HATAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . IDENTIFIER LGPARA exp RGPARA incrementsign ASSIGNMENT exp
    (23) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . exp CHOTI NEWLINE cmpdstmt TICHO
    (26) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (27) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (28) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (29) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (30) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (31) stmt -> . exp PATHAU
    (32) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (66) dynamString -> . exp COMMA dynamString
    (67) dynamString -> . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    NEWLINE         shift and go to state 9
    $end            reduce using rule 4 (N -> .)
    IDENTIFIER      shift and go to state 11
    BAHIRA          shift and go to state 6
    ARKO            shift and go to state 7
    YEDI            shift and go to state 2
    SABEI           shift and go to state 12
    JABA            shift and go to state 10
    KAAM            shift and go to state 8
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    dynamString                    shift and go to state 4
    N                              shift and go to state 15
    stmt                           shift and go to state 14
    exp                            shift and go to state 18
    element                        shift and go to state 17

state 1

    (58) exp -> LGPARA . variableexp RGPARA
    (36) variableexp -> . exp COMMA variableexp
    (37) variableexp -> . exp
    (38) variableexp -> .
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    RGPARA          reduce using rule 38 (variableexp -> .)
    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 22
    variableexp                    shift and go to state 20

state 2

    (23) stmt -> YEDI . condition NEWLINE cmpdstmt optelse DIYE
    (68) condition -> . condition RA condition
    (69) condition -> . condition WA condition
    (70) condition -> . exp BHAE
    (71) condition -> . exp NABHAE
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 24
    condition                      shift and go to state 23

state 3

    (60) exp -> LPARA . exp RPARA
    (64) exp -> LPARA . exp RPARA QUESTION exp COLON exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 25

state 4

    (7) stmt -> dynamString . LEKHA
    (8) stmt -> dynamString . LEKHA SEMICOLON

    LEKHA           shift and go to state 26


state 5

    (56) exp -> MINUS . NUMBER

    NUMBER          shift and go to state 27


state 6

    (9) stmt -> BAHIRA .

    NEWLINE         reduce using rule 9 (stmt -> BAHIRA .)
    $end            reduce using rule 9 (stmt -> BAHIRA .)


state 7

    (10) stmt -> ARKO .

    NEWLINE         reduce using rule 10 (stmt -> ARKO .)
    $end            reduce using rule 10 (stmt -> ARKO .)


state 8

    (29) stmt -> KAAM . IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA

    IDENTIFIER      shift and go to state 28


state 9

    (2) N -> NEWLINE . N
    (1) N -> . element NEWLINE N
    (2) N -> . NEWLINE N
    (3) N -> . element
    (4) N -> .
    (5) element -> . stmt
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER HATAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . IDENTIFIER LGPARA exp RGPARA incrementsign ASSIGNMENT exp
    (23) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . exp CHOTI NEWLINE cmpdstmt TICHO
    (26) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (27) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (28) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (29) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (30) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (31) stmt -> . exp PATHAU
    (32) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (66) dynamString -> . exp COMMA dynamString
    (67) dynamString -> . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    NEWLINE         shift and go to state 9
    $end            reduce using rule 4 (N -> .)
    IDENTIFIER      shift and go to state 11
    BAHIRA          shift and go to state 6
    ARKO            shift and go to state 7
    YEDI            shift and go to state 2
    SABEI           shift and go to state 12
    JABA            shift and go to state 10
    KAAM            shift and go to state 8
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    dynamString                    shift and go to state 4
    N                              shift and go to state 29
    stmt                           shift and go to state 14
    exp                            shift and go to state 18
    element                        shift and go to state 17

state 10

    (27) stmt -> JABA . SAMMA whilecond NEWLINE cmpdstmt BAJA

    SAMMA           shift and go to state 30


state 11

    (6) stmt -> IDENTIFIER . ASSIGNMENT exp
    (11) stmt -> IDENTIFIER . MA dynamString LEKHA SEMICOLON
    (12) stmt -> IDENTIFIER . MA dynamString LEKHA
    (13) stmt -> IDENTIFIER . BATA IDENTIFIER LEU
    (14) stmt -> IDENTIFIER . BANDAGARA
    (15) stmt -> IDENTIFIER . DEKHAU
    (16) stmt -> IDENTIFIER . HATAU
    (17) stmt -> IDENTIFIER . BANAU
    (18) stmt -> IDENTIFIER . METAU
    (19) stmt -> IDENTIFIER . MA IDENTIFIER KORA variableexp
    (20) stmt -> IDENTIFIER . LEU
    (21) stmt -> IDENTIFIER . incrementsign ASSIGNMENT exp
    (22) stmt -> IDENTIFIER . LGPARA exp RGPARA incrementsign ASSIGNMENT exp
    (28) stmt -> IDENTIFIER . ASSIGNMENT LGPARA variableexp RGPARA
    (30) stmt -> IDENTIFIER . LPARA variableexp RPARA
    (32) stmt -> IDENTIFIER . LGPARA exp RGPARA ASSIGNMENT exp
    (53) exp -> IDENTIFIER .
    (59) exp -> IDENTIFIER . LGPARA exp RGPARA
    (61) exp -> IDENTIFIER . LGPARA sliceexp COLON sliceexp RGPARA
    (65) exp -> IDENTIFIER . LPARA variableexp RPARA
    (79) incrementsign -> . sign
    (80) incrementsign -> . TIMES
    (81) incrementsign -> . DIVIDE
    (77) sign -> . PLUS
    (78) sign -> . MINUS

    ASSIGNMENT      shift and go to state 35
    MA              shift and go to state 45
    BATA            shift and go to state 34
    BANDAGARA       shift and go to state 37
    DEKHAU          shift and go to state 46
    HATAU           shift and go to state 33
    BANAU           shift and go to state 39
    METAU           shift and go to state 43
    LEU             shift and go to state 47
    LGPARA          shift and go to state 32
    LPARA           shift and go to state 36
    CHOTI           reduce using rule 53 (exp -> IDENTIFIER .)
    PATHAU          reduce using rule 53 (exp -> IDENTIFIER .)
    COMMA           reduce using rule 53 (exp -> IDENTIFIER .)
    EQ              reduce using rule 53 (exp -> IDENTIFIER .)
    LE              reduce using rule 53 (exp -> IDENTIFIER .)
    GE              reduce using rule 53 (exp -> IDENTIFIER .)
    NE              reduce using rule 53 (exp -> IDENTIFIER .)
    LT              reduce using rule 53 (exp -> IDENTIFIER .)
    GT              reduce using rule 53 (exp -> IDENTIFIER .)
    POWER           reduce using rule 53 (exp -> IDENTIFIER .)
    MODULUS         reduce using rule 53 (exp -> IDENTIFIER .)
    RA              reduce using rule 53 (exp -> IDENTIFIER .)
    WA              reduce using rule 53 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 53 (exp -> IDENTIFIER .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 42
    PLUS            shift and go to state 41
    MINUS           shift and go to state 38

  ! PLUS            [ reduce using rule 53 (exp -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 53 (exp -> IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 53 (exp -> IDENTIFIER .) ]
  ! DIVIDE          [ reduce using rule 53 (exp -> IDENTIFIER .) ]

    incrementsign                  shift and go to state 40
    sign                           shift and go to state 44

state 12

    (24) stmt -> SABEI . IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (26) stmt -> SABEI . IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA

    IDENTIFIER      shift and go to state 48


state 13

    (55) exp -> NUMBER .

    EQ              reduce using rule 55 (exp -> NUMBER .)
    LE              reduce using rule 55 (exp -> NUMBER .)
    GE              reduce using rule 55 (exp -> NUMBER .)
    NE              reduce using rule 55 (exp -> NUMBER .)
    LT              reduce using rule 55 (exp -> NUMBER .)
    GT              reduce using rule 55 (exp -> NUMBER .)
    PLUS            reduce using rule 55 (exp -> NUMBER .)
    MINUS           reduce using rule 55 (exp -> NUMBER .)
    TIMES           reduce using rule 55 (exp -> NUMBER .)
    DIVIDE          reduce using rule 55 (exp -> NUMBER .)
    POWER           reduce using rule 55 (exp -> NUMBER .)
    MODULUS         reduce using rule 55 (exp -> NUMBER .)
    RA              reduce using rule 55 (exp -> NUMBER .)
    WA              reduce using rule 55 (exp -> NUMBER .)
    CHOTI           reduce using rule 55 (exp -> NUMBER .)
    PATHAU          reduce using rule 55 (exp -> NUMBER .)
    COMMA           reduce using rule 55 (exp -> NUMBER .)
    LEKHA           reduce using rule 55 (exp -> NUMBER .)
    RGPARA          reduce using rule 55 (exp -> NUMBER .)
    BHAE            reduce using rule 55 (exp -> NUMBER .)
    NABHAE          reduce using rule 55 (exp -> NUMBER .)
    RPARA           reduce using rule 55 (exp -> NUMBER .)
    CHHA            reduce using rule 55 (exp -> NUMBER .)
    CHHAINA         reduce using rule 55 (exp -> NUMBER .)
    COLON           reduce using rule 55 (exp -> NUMBER .)
    NEWLINE         reduce using rule 55 (exp -> NUMBER .)
    $end            reduce using rule 55 (exp -> NUMBER .)
    DEKHI           reduce using rule 55 (exp -> NUMBER .)
    SEMICOLON       reduce using rule 55 (exp -> NUMBER .)


state 14

    (5) element -> stmt .

    NEWLINE         reduce using rule 5 (element -> stmt .)
    $end            reduce using rule 5 (element -> stmt .)


state 15

    (0) S' -> N .



state 16

    (57) exp -> SUNYA .

    EQ              reduce using rule 57 (exp -> SUNYA .)
    LE              reduce using rule 57 (exp -> SUNYA .)
    GE              reduce using rule 57 (exp -> SUNYA .)
    NE              reduce using rule 57 (exp -> SUNYA .)
    LT              reduce using rule 57 (exp -> SUNYA .)
    GT              reduce using rule 57 (exp -> SUNYA .)
    PLUS            reduce using rule 57 (exp -> SUNYA .)
    MINUS           reduce using rule 57 (exp -> SUNYA .)
    TIMES           reduce using rule 57 (exp -> SUNYA .)
    DIVIDE          reduce using rule 57 (exp -> SUNYA .)
    POWER           reduce using rule 57 (exp -> SUNYA .)
    MODULUS         reduce using rule 57 (exp -> SUNYA .)
    RA              reduce using rule 57 (exp -> SUNYA .)
    WA              reduce using rule 57 (exp -> SUNYA .)
    CHOTI           reduce using rule 57 (exp -> SUNYA .)
    PATHAU          reduce using rule 57 (exp -> SUNYA .)
    COMMA           reduce using rule 57 (exp -> SUNYA .)
    LEKHA           reduce using rule 57 (exp -> SUNYA .)
    RGPARA          reduce using rule 57 (exp -> SUNYA .)
    BHAE            reduce using rule 57 (exp -> SUNYA .)
    NABHAE          reduce using rule 57 (exp -> SUNYA .)
    RPARA           reduce using rule 57 (exp -> SUNYA .)
    CHHA            reduce using rule 57 (exp -> SUNYA .)
    CHHAINA         reduce using rule 57 (exp -> SUNYA .)
    COLON           reduce using rule 57 (exp -> SUNYA .)
    NEWLINE         reduce using rule 57 (exp -> SUNYA .)
    $end            reduce using rule 57 (exp -> SUNYA .)
    DEKHI           reduce using rule 57 (exp -> SUNYA .)
    SEMICOLON       reduce using rule 57 (exp -> SUNYA .)


state 17

    (1) N -> element . NEWLINE N
    (3) N -> element .

    NEWLINE         shift and go to state 49
    $end            reduce using rule 3 (N -> element .)


state 18

    (25) stmt -> exp . CHOTI NEWLINE cmpdstmt TICHO
    (31) stmt -> exp . PATHAU
    (66) dynamString -> exp . COMMA dynamString
    (67) dynamString -> exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    CHOTI           shift and go to state 65
    PATHAU          shift and go to state 63
    COMMA           shift and go to state 57
    LEKHA           reduce using rule 67 (dynamString -> exp .)
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50


state 19

    (54) exp -> STRING .

    EQ              reduce using rule 54 (exp -> STRING .)
    LE              reduce using rule 54 (exp -> STRING .)
    GE              reduce using rule 54 (exp -> STRING .)
    NE              reduce using rule 54 (exp -> STRING .)
    LT              reduce using rule 54 (exp -> STRING .)
    GT              reduce using rule 54 (exp -> STRING .)
    PLUS            reduce using rule 54 (exp -> STRING .)
    MINUS           reduce using rule 54 (exp -> STRING .)
    TIMES           reduce using rule 54 (exp -> STRING .)
    DIVIDE          reduce using rule 54 (exp -> STRING .)
    POWER           reduce using rule 54 (exp -> STRING .)
    MODULUS         reduce using rule 54 (exp -> STRING .)
    RA              reduce using rule 54 (exp -> STRING .)
    WA              reduce using rule 54 (exp -> STRING .)
    CHOTI           reduce using rule 54 (exp -> STRING .)
    PATHAU          reduce using rule 54 (exp -> STRING .)
    COMMA           reduce using rule 54 (exp -> STRING .)
    LEKHA           reduce using rule 54 (exp -> STRING .)
    RGPARA          reduce using rule 54 (exp -> STRING .)
    BHAE            reduce using rule 54 (exp -> STRING .)
    NABHAE          reduce using rule 54 (exp -> STRING .)
    RPARA           reduce using rule 54 (exp -> STRING .)
    CHHA            reduce using rule 54 (exp -> STRING .)
    CHHAINA         reduce using rule 54 (exp -> STRING .)
    COLON           reduce using rule 54 (exp -> STRING .)
    NEWLINE         reduce using rule 54 (exp -> STRING .)
    $end            reduce using rule 54 (exp -> STRING .)
    DEKHI           reduce using rule 54 (exp -> STRING .)
    SEMICOLON       reduce using rule 54 (exp -> STRING .)


state 20

    (58) exp -> LGPARA variableexp . RGPARA

    RGPARA          shift and go to state 67


state 21

    (53) exp -> IDENTIFIER .
    (59) exp -> IDENTIFIER . LGPARA exp RGPARA
    (61) exp -> IDENTIFIER . LGPARA sliceexp COLON sliceexp RGPARA
    (65) exp -> IDENTIFIER . LPARA variableexp RPARA

    EQ              reduce using rule 53 (exp -> IDENTIFIER .)
    LE              reduce using rule 53 (exp -> IDENTIFIER .)
    GE              reduce using rule 53 (exp -> IDENTIFIER .)
    NE              reduce using rule 53 (exp -> IDENTIFIER .)
    LT              reduce using rule 53 (exp -> IDENTIFIER .)
    GT              reduce using rule 53 (exp -> IDENTIFIER .)
    PLUS            reduce using rule 53 (exp -> IDENTIFIER .)
    MINUS           reduce using rule 53 (exp -> IDENTIFIER .)
    TIMES           reduce using rule 53 (exp -> IDENTIFIER .)
    DIVIDE          reduce using rule 53 (exp -> IDENTIFIER .)
    POWER           reduce using rule 53 (exp -> IDENTIFIER .)
    MODULUS         reduce using rule 53 (exp -> IDENTIFIER .)
    RA              reduce using rule 53 (exp -> IDENTIFIER .)
    WA              reduce using rule 53 (exp -> IDENTIFIER .)
    CHOTI           reduce using rule 53 (exp -> IDENTIFIER .)
    PATHAU          reduce using rule 53 (exp -> IDENTIFIER .)
    COMMA           reduce using rule 53 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 53 (exp -> IDENTIFIER .)
    RGPARA          reduce using rule 53 (exp -> IDENTIFIER .)
    BHAE            reduce using rule 53 (exp -> IDENTIFIER .)
    NABHAE          reduce using rule 53 (exp -> IDENTIFIER .)
    RPARA           reduce using rule 53 (exp -> IDENTIFIER .)
    CHHA            reduce using rule 53 (exp -> IDENTIFIER .)
    CHHAINA         reduce using rule 53 (exp -> IDENTIFIER .)
    COLON           reduce using rule 53 (exp -> IDENTIFIER .)
    NEWLINE         reduce using rule 53 (exp -> IDENTIFIER .)
    $end            reduce using rule 53 (exp -> IDENTIFIER .)
    DEKHI           reduce using rule 53 (exp -> IDENTIFIER .)
    SEMICOLON       reduce using rule 53 (exp -> IDENTIFIER .)
    LGPARA          shift and go to state 68
    LPARA           shift and go to state 69


state 22

    (36) variableexp -> exp . COMMA variableexp
    (37) variableexp -> exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    COMMA           shift and go to state 70
    RGPARA          reduce using rule 37 (variableexp -> exp .)
    RPARA           reduce using rule 37 (variableexp -> exp .)
    NEWLINE         reduce using rule 37 (variableexp -> exp .)
    $end            reduce using rule 37 (variableexp -> exp .)
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50


state 23

    (23) stmt -> YEDI condition . NEWLINE cmpdstmt optelse DIYE
    (68) condition -> condition . RA condition
    (69) condition -> condition . WA condition

    NEWLINE         shift and go to state 72
    RA              shift and go to state 73
    WA              shift and go to state 71


state 24

    (70) condition -> exp . BHAE
    (71) condition -> exp . NABHAE
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    BHAE            shift and go to state 74
    NABHAE          shift and go to state 75
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50


state 25

    (60) exp -> LPARA exp . RPARA
    (64) exp -> LPARA exp . RPARA QUESTION exp COLON exp
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    RPARA           shift and go to state 76
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50


state 26

    (7) stmt -> dynamString LEKHA .
    (8) stmt -> dynamString LEKHA . SEMICOLON

    NEWLINE         reduce using rule 7 (stmt -> dynamString LEKHA .)
    $end            reduce using rule 7 (stmt -> dynamString LEKHA .)
    SEMICOLON       shift and go to state 77


state 27

    (56) exp -> MINUS NUMBER .

    EQ              reduce using rule 56 (exp -> MINUS NUMBER .)
    LE              reduce using rule 56 (exp -> MINUS NUMBER .)
    GE              reduce using rule 56 (exp -> MINUS NUMBER .)
    NE              reduce using rule 56 (exp -> MINUS NUMBER .)
    LT              reduce using rule 56 (exp -> MINUS NUMBER .)
    GT              reduce using rule 56 (exp -> MINUS NUMBER .)
    PLUS            reduce using rule 56 (exp -> MINUS NUMBER .)
    MINUS           reduce using rule 56 (exp -> MINUS NUMBER .)
    TIMES           reduce using rule 56 (exp -> MINUS NUMBER .)
    DIVIDE          reduce using rule 56 (exp -> MINUS NUMBER .)
    POWER           reduce using rule 56 (exp -> MINUS NUMBER .)
    MODULUS         reduce using rule 56 (exp -> MINUS NUMBER .)
    RA              reduce using rule 56 (exp -> MINUS NUMBER .)
    WA              reduce using rule 56 (exp -> MINUS NUMBER .)
    CHOTI           reduce using rule 56 (exp -> MINUS NUMBER .)
    PATHAU          reduce using rule 56 (exp -> MINUS NUMBER .)
    COMMA           reduce using rule 56 (exp -> MINUS NUMBER .)
    LEKHA           reduce using rule 56 (exp -> MINUS NUMBER .)
    RGPARA          reduce using rule 56 (exp -> MINUS NUMBER .)
    BHAE            reduce using rule 56 (exp -> MINUS NUMBER .)
    NABHAE          reduce using rule 56 (exp -> MINUS NUMBER .)
    RPARA           reduce using rule 56 (exp -> MINUS NUMBER .)
    CHHA            reduce using rule 56 (exp -> MINUS NUMBER .)
    CHHAINA         reduce using rule 56 (exp -> MINUS NUMBER .)
    COLON           reduce using rule 56 (exp -> MINUS NUMBER .)
    NEWLINE         reduce using rule 56 (exp -> MINUS NUMBER .)
    $end            reduce using rule 56 (exp -> MINUS NUMBER .)
    DEKHI           reduce using rule 56 (exp -> MINUS NUMBER .)
    SEMICOLON       reduce using rule 56 (exp -> MINUS NUMBER .)


state 28

    (29) stmt -> KAAM IDENTIFIER . LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA

    LPARA           shift and go to state 78


state 29

    (2) N -> NEWLINE N .

    $end            reduce using rule 2 (N -> NEWLINE N .)


state 30

    (27) stmt -> JABA SAMMA . whilecond NEWLINE cmpdstmt BAJA
    (82) whilecond -> . whilecond RA whilecond
    (83) whilecond -> . whilecond WA whilecond
    (84) whilecond -> . exp CHHA
    (85) whilecond -> . exp CHHAINA
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 80
    whilecond                      shift and go to state 79

state 31

    (80) incrementsign -> TIMES .

    ASSIGNMENT      reduce using rule 80 (incrementsign -> TIMES .)


state 32

    (22) stmt -> IDENTIFIER LGPARA . exp RGPARA incrementsign ASSIGNMENT exp
    (32) stmt -> IDENTIFIER LGPARA . exp RGPARA ASSIGNMENT exp
    (59) exp -> IDENTIFIER LGPARA . exp RGPARA
    (61) exp -> IDENTIFIER LGPARA . sliceexp COLON sliceexp RGPARA
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA
    (62) sliceexp -> . exp
    (63) sliceexp -> .

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3
    COLON           reduce using rule 63 (sliceexp -> .)

    exp                            shift and go to state 82
    sliceexp                       shift and go to state 81

state 33

    (16) stmt -> IDENTIFIER HATAU .

    NEWLINE         reduce using rule 16 (stmt -> IDENTIFIER HATAU .)
    $end            reduce using rule 16 (stmt -> IDENTIFIER HATAU .)


state 34

    (13) stmt -> IDENTIFIER BATA . IDENTIFIER LEU

    IDENTIFIER      shift and go to state 83


state 35

    (6) stmt -> IDENTIFIER ASSIGNMENT . exp
    (28) stmt -> IDENTIFIER ASSIGNMENT . LGPARA variableexp RGPARA
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    LGPARA          shift and go to state 84
    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LPARA           shift and go to state 3

    exp                            shift and go to state 85

state 36

    (30) stmt -> IDENTIFIER LPARA . variableexp RPARA
    (65) exp -> IDENTIFIER LPARA . variableexp RPARA
    (36) variableexp -> . exp COMMA variableexp
    (37) variableexp -> . exp
    (38) variableexp -> .
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    RPARA           reduce using rule 38 (variableexp -> .)
    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 22
    variableexp                    shift and go to state 86

state 37

    (14) stmt -> IDENTIFIER BANDAGARA .

    NEWLINE         reduce using rule 14 (stmt -> IDENTIFIER BANDAGARA .)
    $end            reduce using rule 14 (stmt -> IDENTIFIER BANDAGARA .)


state 38

    (78) sign -> MINUS .

    ASSIGNMENT      reduce using rule 78 (sign -> MINUS .)
    IDENTIFIER      reduce using rule 78 (sign -> MINUS .)
    STRING          reduce using rule 78 (sign -> MINUS .)
    NUMBER          reduce using rule 78 (sign -> MINUS .)
    MINUS           reduce using rule 78 (sign -> MINUS .)
    SUNYA           reduce using rule 78 (sign -> MINUS .)
    LGPARA          reduce using rule 78 (sign -> MINUS .)
    LPARA           reduce using rule 78 (sign -> MINUS .)


state 39

    (17) stmt -> IDENTIFIER BANAU .

    NEWLINE         reduce using rule 17 (stmt -> IDENTIFIER BANAU .)
    $end            reduce using rule 17 (stmt -> IDENTIFIER BANAU .)


state 40

    (21) stmt -> IDENTIFIER incrementsign . ASSIGNMENT exp

    ASSIGNMENT      shift and go to state 87


state 41

    (77) sign -> PLUS .

    ASSIGNMENT      reduce using rule 77 (sign -> PLUS .)
    IDENTIFIER      reduce using rule 77 (sign -> PLUS .)
    STRING          reduce using rule 77 (sign -> PLUS .)
    NUMBER          reduce using rule 77 (sign -> PLUS .)
    MINUS           reduce using rule 77 (sign -> PLUS .)
    SUNYA           reduce using rule 77 (sign -> PLUS .)
    LGPARA          reduce using rule 77 (sign -> PLUS .)
    LPARA           reduce using rule 77 (sign -> PLUS .)


state 42

    (81) incrementsign -> DIVIDE .

    ASSIGNMENT      reduce using rule 81 (incrementsign -> DIVIDE .)


state 43

    (18) stmt -> IDENTIFIER METAU .

    NEWLINE         reduce using rule 18 (stmt -> IDENTIFIER METAU .)
    $end            reduce using rule 18 (stmt -> IDENTIFIER METAU .)


state 44

    (79) incrementsign -> sign .

    ASSIGNMENT      reduce using rule 79 (incrementsign -> sign .)


state 45

    (11) stmt -> IDENTIFIER MA . dynamString LEKHA SEMICOLON
    (12) stmt -> IDENTIFIER MA . dynamString LEKHA
    (19) stmt -> IDENTIFIER MA . IDENTIFIER KORA variableexp
    (66) dynamString -> . exp COMMA dynamString
    (67) dynamString -> . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 89
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 90
    dynamString                    shift and go to state 88

state 46

    (15) stmt -> IDENTIFIER DEKHAU .

    NEWLINE         reduce using rule 15 (stmt -> IDENTIFIER DEKHAU .)
    $end            reduce using rule 15 (stmt -> IDENTIFIER DEKHAU .)


state 47

    (20) stmt -> IDENTIFIER LEU .

    NEWLINE         reduce using rule 20 (stmt -> IDENTIFIER LEU .)
    $end            reduce using rule 20 (stmt -> IDENTIFIER LEU .)


state 48

    (24) stmt -> SABEI IDENTIFIER . ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (26) stmt -> SABEI IDENTIFIER . ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA

    ASSIGNMENT      shift and go to state 91


state 49

    (1) N -> element NEWLINE . N
    (1) N -> . element NEWLINE N
    (2) N -> . NEWLINE N
    (3) N -> . element
    (4) N -> .
    (5) element -> . stmt
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER HATAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . IDENTIFIER LGPARA exp RGPARA incrementsign ASSIGNMENT exp
    (23) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . exp CHOTI NEWLINE cmpdstmt TICHO
    (26) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (27) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (28) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (29) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (30) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (31) stmt -> . exp PATHAU
    (32) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (66) dynamString -> . exp COMMA dynamString
    (67) dynamString -> . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    NEWLINE         shift and go to state 9
    $end            reduce using rule 4 (N -> .)
    IDENTIFIER      shift and go to state 11
    BAHIRA          shift and go to state 6
    ARKO            shift and go to state 7
    YEDI            shift and go to state 2
    SABEI           shift and go to state 12
    JABA            shift and go to state 10
    KAAM            shift and go to state 8
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    dynamString                    shift and go to state 4
    stmt                           shift and go to state 14
    exp                            shift and go to state 18
    element                        shift and go to state 17
    N                              shift and go to state 92

state 50

    (52) exp -> exp WA . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 93

state 51

    (46) exp -> exp MINUS . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 94

state 52

    (40) exp -> exp LE . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 95

state 53

    (49) exp -> exp POWER . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 96

state 54

    (39) exp -> exp EQ . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 97

state 55

    (42) exp -> exp NE . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 98

state 56

    (43) exp -> exp LT . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 99

state 57

    (66) dynamString -> exp COMMA . dynamString
    (66) dynamString -> . exp COMMA dynamString
    (67) dynamString -> . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 90
    dynamString                    shift and go to state 100

state 58

    (51) exp -> exp RA . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 101

state 59

    (45) exp -> exp PLUS . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 102

state 60

    (44) exp -> exp GT . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 103

state 61

    (48) exp -> exp DIVIDE . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 104

state 62

    (47) exp -> exp TIMES . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 105

state 63

    (31) stmt -> exp PATHAU .

    NEWLINE         reduce using rule 31 (stmt -> exp PATHAU .)
    $end            reduce using rule 31 (stmt -> exp PATHAU .)


state 64

    (41) exp -> exp GE . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 106

state 65

    (25) stmt -> exp CHOTI . NEWLINE cmpdstmt TICHO

    NEWLINE         shift and go to state 107


state 66

    (50) exp -> exp MODULUS . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 108

state 67

    (58) exp -> LGPARA variableexp RGPARA .

    EQ              reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    LE              reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    GE              reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    NE              reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    LT              reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    GT              reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    PLUS            reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    MINUS           reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    TIMES           reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    DIVIDE          reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    POWER           reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    MODULUS         reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    RA              reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    WA              reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    CHOTI           reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    PATHAU          reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    COMMA           reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    LEKHA           reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    RGPARA          reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    BHAE            reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    NABHAE          reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    RPARA           reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    CHHA            reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    CHHAINA         reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    COLON           reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    NEWLINE         reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    $end            reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    DEKHI           reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    SEMICOLON       reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)


state 68

    (59) exp -> IDENTIFIER LGPARA . exp RGPARA
    (61) exp -> IDENTIFIER LGPARA . sliceexp COLON sliceexp RGPARA
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA
    (62) sliceexp -> . exp
    (63) sliceexp -> .

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3
    COLON           reduce using rule 63 (sliceexp -> .)

    exp                            shift and go to state 109
    sliceexp                       shift and go to state 81

state 69

    (65) exp -> IDENTIFIER LPARA . variableexp RPARA
    (36) variableexp -> . exp COMMA variableexp
    (37) variableexp -> . exp
    (38) variableexp -> .
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    RPARA           reduce using rule 38 (variableexp -> .)
    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 22
    variableexp                    shift and go to state 110

state 70

    (36) variableexp -> exp COMMA . variableexp
    (36) variableexp -> . exp COMMA variableexp
    (37) variableexp -> . exp
    (38) variableexp -> .
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    RGPARA          reduce using rule 38 (variableexp -> .)
    RPARA           reduce using rule 38 (variableexp -> .)
    NEWLINE         reduce using rule 38 (variableexp -> .)
    $end            reduce using rule 38 (variableexp -> .)
    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    variableexp                    shift and go to state 111
    exp                            shift and go to state 22

state 71

    (69) condition -> condition WA . condition
    (68) condition -> . condition RA condition
    (69) condition -> . condition WA condition
    (70) condition -> . exp BHAE
    (71) condition -> . exp NABHAE
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 24
    condition                      shift and go to state 112

state 72

    (23) stmt -> YEDI condition NEWLINE . cmpdstmt optelse DIYE
    (72) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (73) cmpdstmt -> .
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER HATAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . IDENTIFIER LGPARA exp RGPARA incrementsign ASSIGNMENT exp
    (23) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . exp CHOTI NEWLINE cmpdstmt TICHO
    (26) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (27) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (28) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (29) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (30) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (31) stmt -> . exp PATHAU
    (32) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (66) dynamString -> . exp COMMA dynamString
    (67) dynamString -> . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    ATHAWA          reduce using rule 73 (cmpdstmt -> .)
    DIYE            reduce using rule 73 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 11
    BAHIRA          shift and go to state 6
    ARKO            shift and go to state 7
    YEDI            shift and go to state 2
    SABEI           shift and go to state 12
    JABA            shift and go to state 10
    KAAM            shift and go to state 8
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    stmt                           shift and go to state 113
    dynamString                    shift and go to state 4
    cmpdstmt                       shift and go to state 114
    exp                            shift and go to state 18

state 73

    (68) condition -> condition RA . condition
    (68) condition -> . condition RA condition
    (69) condition -> . condition WA condition
    (70) condition -> . exp BHAE
    (71) condition -> . exp NABHAE
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 24
    condition                      shift and go to state 115

state 74

    (70) condition -> exp BHAE .

    RA              reduce using rule 70 (condition -> exp BHAE .)
    WA              reduce using rule 70 (condition -> exp BHAE .)
    NEWLINE         reduce using rule 70 (condition -> exp BHAE .)


state 75

    (71) condition -> exp NABHAE .

    RA              reduce using rule 71 (condition -> exp NABHAE .)
    WA              reduce using rule 71 (condition -> exp NABHAE .)
    NEWLINE         reduce using rule 71 (condition -> exp NABHAE .)


state 76

    (60) exp -> LPARA exp RPARA .
    (64) exp -> LPARA exp RPARA . QUESTION exp COLON exp

    EQ              reduce using rule 60 (exp -> LPARA exp RPARA .)
    LE              reduce using rule 60 (exp -> LPARA exp RPARA .)
    GE              reduce using rule 60 (exp -> LPARA exp RPARA .)
    NE              reduce using rule 60 (exp -> LPARA exp RPARA .)
    LT              reduce using rule 60 (exp -> LPARA exp RPARA .)
    GT              reduce using rule 60 (exp -> LPARA exp RPARA .)
    PLUS            reduce using rule 60 (exp -> LPARA exp RPARA .)
    MINUS           reduce using rule 60 (exp -> LPARA exp RPARA .)
    TIMES           reduce using rule 60 (exp -> LPARA exp RPARA .)
    DIVIDE          reduce using rule 60 (exp -> LPARA exp RPARA .)
    POWER           reduce using rule 60 (exp -> LPARA exp RPARA .)
    MODULUS         reduce using rule 60 (exp -> LPARA exp RPARA .)
    RA              reduce using rule 60 (exp -> LPARA exp RPARA .)
    WA              reduce using rule 60 (exp -> LPARA exp RPARA .)
    CHOTI           reduce using rule 60 (exp -> LPARA exp RPARA .)
    PATHAU          reduce using rule 60 (exp -> LPARA exp RPARA .)
    COMMA           reduce using rule 60 (exp -> LPARA exp RPARA .)
    LEKHA           reduce using rule 60 (exp -> LPARA exp RPARA .)
    RGPARA          reduce using rule 60 (exp -> LPARA exp RPARA .)
    BHAE            reduce using rule 60 (exp -> LPARA exp RPARA .)
    NABHAE          reduce using rule 60 (exp -> LPARA exp RPARA .)
    RPARA           reduce using rule 60 (exp -> LPARA exp RPARA .)
    CHHA            reduce using rule 60 (exp -> LPARA exp RPARA .)
    CHHAINA         reduce using rule 60 (exp -> LPARA exp RPARA .)
    COLON           reduce using rule 60 (exp -> LPARA exp RPARA .)
    NEWLINE         reduce using rule 60 (exp -> LPARA exp RPARA .)
    $end            reduce using rule 60 (exp -> LPARA exp RPARA .)
    DEKHI           reduce using rule 60 (exp -> LPARA exp RPARA .)
    SEMICOLON       reduce using rule 60 (exp -> LPARA exp RPARA .)
    QUESTION        shift and go to state 116


state 77

    (8) stmt -> dynamString LEKHA SEMICOLON .

    NEWLINE         reduce using rule 8 (stmt -> dynamString LEKHA SEMICOLON .)
    $end            reduce using rule 8 (stmt -> dynamString LEKHA SEMICOLON .)


state 78

    (29) stmt -> KAAM IDENTIFIER LPARA . variableArgs RPARA NEWLINE cmpdstmt MAKA
    (33) variableArgs -> . IDENTIFIER COMMA variableArgs
    (34) variableArgs -> . IDENTIFIER
    (35) variableArgs -> .

    IDENTIFIER      shift and go to state 118
    RPARA           reduce using rule 35 (variableArgs -> .)

    variableArgs                   shift and go to state 117

state 79

    (27) stmt -> JABA SAMMA whilecond . NEWLINE cmpdstmt BAJA
    (82) whilecond -> whilecond . RA whilecond
    (83) whilecond -> whilecond . WA whilecond

    NEWLINE         shift and go to state 120
    RA              shift and go to state 121
    WA              shift and go to state 119


state 80

    (84) whilecond -> exp . CHHA
    (85) whilecond -> exp . CHHAINA
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    CHHA            shift and go to state 122
    CHHAINA         shift and go to state 123
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50


state 81

    (61) exp -> IDENTIFIER LGPARA sliceexp . COLON sliceexp RGPARA

    COLON           shift and go to state 124


state 82

    (22) stmt -> IDENTIFIER LGPARA exp . RGPARA incrementsign ASSIGNMENT exp
    (32) stmt -> IDENTIFIER LGPARA exp . RGPARA ASSIGNMENT exp
    (59) exp -> IDENTIFIER LGPARA exp . RGPARA
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp
    (62) sliceexp -> exp .

    RGPARA          shift and go to state 125
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50
    COLON           reduce using rule 62 (sliceexp -> exp .)


state 83

    (13) stmt -> IDENTIFIER BATA IDENTIFIER . LEU

    LEU             shift and go to state 126


state 84

    (28) stmt -> IDENTIFIER ASSIGNMENT LGPARA . variableexp RGPARA
    (58) exp -> LGPARA . variableexp RGPARA
    (36) variableexp -> . exp COMMA variableexp
    (37) variableexp -> . exp
    (38) variableexp -> .
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    RGPARA          reduce using rule 38 (variableexp -> .)
    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 22
    variableexp                    shift and go to state 127

state 85

    (6) stmt -> IDENTIFIER ASSIGNMENT exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    NEWLINE         reduce using rule 6 (stmt -> IDENTIFIER ASSIGNMENT exp .)
    $end            reduce using rule 6 (stmt -> IDENTIFIER ASSIGNMENT exp .)
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50


state 86

    (30) stmt -> IDENTIFIER LPARA variableexp . RPARA
    (65) exp -> IDENTIFIER LPARA variableexp . RPARA

    RPARA           shift and go to state 128


state 87

    (21) stmt -> IDENTIFIER incrementsign ASSIGNMENT . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 129

state 88

    (11) stmt -> IDENTIFIER MA dynamString . LEKHA SEMICOLON
    (12) stmt -> IDENTIFIER MA dynamString . LEKHA

    LEKHA           shift and go to state 130


state 89

    (19) stmt -> IDENTIFIER MA IDENTIFIER . KORA variableexp
    (53) exp -> IDENTIFIER .
    (59) exp -> IDENTIFIER . LGPARA exp RGPARA
    (61) exp -> IDENTIFIER . LGPARA sliceexp COLON sliceexp RGPARA
    (65) exp -> IDENTIFIER . LPARA variableexp RPARA

    KORA            shift and go to state 131
    COMMA           reduce using rule 53 (exp -> IDENTIFIER .)
    EQ              reduce using rule 53 (exp -> IDENTIFIER .)
    LE              reduce using rule 53 (exp -> IDENTIFIER .)
    GE              reduce using rule 53 (exp -> IDENTIFIER .)
    NE              reduce using rule 53 (exp -> IDENTIFIER .)
    LT              reduce using rule 53 (exp -> IDENTIFIER .)
    GT              reduce using rule 53 (exp -> IDENTIFIER .)
    PLUS            reduce using rule 53 (exp -> IDENTIFIER .)
    MINUS           reduce using rule 53 (exp -> IDENTIFIER .)
    TIMES           reduce using rule 53 (exp -> IDENTIFIER .)
    DIVIDE          reduce using rule 53 (exp -> IDENTIFIER .)
    POWER           reduce using rule 53 (exp -> IDENTIFIER .)
    MODULUS         reduce using rule 53 (exp -> IDENTIFIER .)
    RA              reduce using rule 53 (exp -> IDENTIFIER .)
    WA              reduce using rule 53 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 53 (exp -> IDENTIFIER .)
    LGPARA          shift and go to state 68
    LPARA           shift and go to state 69


state 90

    (66) dynamString -> exp . COMMA dynamString
    (67) dynamString -> exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    COMMA           shift and go to state 57
    LEKHA           reduce using rule 67 (dynamString -> exp .)
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50


state 91

    (24) stmt -> SABEI IDENTIFIER ASSIGNMENT . exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (26) stmt -> SABEI IDENTIFIER ASSIGNMENT . exp DEKHI exp NEWLINE cmpdstmt BAISA
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 132

state 92

    (1) N -> element NEWLINE N .

    $end            reduce using rule 1 (N -> element NEWLINE N .)


state 93

    (52) exp -> exp WA exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    CHOTI           reduce using rule 52 (exp -> exp WA exp .)
    PATHAU          reduce using rule 52 (exp -> exp WA exp .)
    COMMA           reduce using rule 52 (exp -> exp WA exp .)
    LEKHA           reduce using rule 52 (exp -> exp WA exp .)
    RGPARA          reduce using rule 52 (exp -> exp WA exp .)
    BHAE            reduce using rule 52 (exp -> exp WA exp .)
    NABHAE          reduce using rule 52 (exp -> exp WA exp .)
    RPARA           reduce using rule 52 (exp -> exp WA exp .)
    CHHA            reduce using rule 52 (exp -> exp WA exp .)
    CHHAINA         reduce using rule 52 (exp -> exp WA exp .)
    COLON           reduce using rule 52 (exp -> exp WA exp .)
    NEWLINE         reduce using rule 52 (exp -> exp WA exp .)
    $end            reduce using rule 52 (exp -> exp WA exp .)
    DEKHI           reduce using rule 52 (exp -> exp WA exp .)
    SEMICOLON       reduce using rule 52 (exp -> exp WA exp .)
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50

  ! EQ              [ reduce using rule 52 (exp -> exp WA exp .) ]
  ! LE              [ reduce using rule 52 (exp -> exp WA exp .) ]
  ! GE              [ reduce using rule 52 (exp -> exp WA exp .) ]
  ! NE              [ reduce using rule 52 (exp -> exp WA exp .) ]
  ! LT              [ reduce using rule 52 (exp -> exp WA exp .) ]
  ! GT              [ reduce using rule 52 (exp -> exp WA exp .) ]
  ! PLUS            [ reduce using rule 52 (exp -> exp WA exp .) ]
  ! MINUS           [ reduce using rule 52 (exp -> exp WA exp .) ]
  ! TIMES           [ reduce using rule 52 (exp -> exp WA exp .) ]
  ! DIVIDE          [ reduce using rule 52 (exp -> exp WA exp .) ]
  ! POWER           [ reduce using rule 52 (exp -> exp WA exp .) ]
  ! MODULUS         [ reduce using rule 52 (exp -> exp WA exp .) ]
  ! RA              [ reduce using rule 52 (exp -> exp WA exp .) ]
  ! WA              [ reduce using rule 52 (exp -> exp WA exp .) ]


state 94

    (46) exp -> exp MINUS exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    EQ              reduce using rule 46 (exp -> exp MINUS exp .)
    LE              reduce using rule 46 (exp -> exp MINUS exp .)
    GE              reduce using rule 46 (exp -> exp MINUS exp .)
    NE              reduce using rule 46 (exp -> exp MINUS exp .)
    LT              reduce using rule 46 (exp -> exp MINUS exp .)
    GT              reduce using rule 46 (exp -> exp MINUS exp .)
    PLUS            reduce using rule 46 (exp -> exp MINUS exp .)
    MINUS           reduce using rule 46 (exp -> exp MINUS exp .)
    MODULUS         reduce using rule 46 (exp -> exp MINUS exp .)
    RA              reduce using rule 46 (exp -> exp MINUS exp .)
    WA              reduce using rule 46 (exp -> exp MINUS exp .)
    CHOTI           reduce using rule 46 (exp -> exp MINUS exp .)
    PATHAU          reduce using rule 46 (exp -> exp MINUS exp .)
    COMMA           reduce using rule 46 (exp -> exp MINUS exp .)
    LEKHA           reduce using rule 46 (exp -> exp MINUS exp .)
    RGPARA          reduce using rule 46 (exp -> exp MINUS exp .)
    BHAE            reduce using rule 46 (exp -> exp MINUS exp .)
    NABHAE          reduce using rule 46 (exp -> exp MINUS exp .)
    RPARA           reduce using rule 46 (exp -> exp MINUS exp .)
    CHHA            reduce using rule 46 (exp -> exp MINUS exp .)
    CHHAINA         reduce using rule 46 (exp -> exp MINUS exp .)
    COLON           reduce using rule 46 (exp -> exp MINUS exp .)
    NEWLINE         reduce using rule 46 (exp -> exp MINUS exp .)
    $end            reduce using rule 46 (exp -> exp MINUS exp .)
    DEKHI           reduce using rule 46 (exp -> exp MINUS exp .)
    SEMICOLON       reduce using rule 46 (exp -> exp MINUS exp .)
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53

  ! TIMES           [ reduce using rule 46 (exp -> exp MINUS exp .) ]
  ! DIVIDE          [ reduce using rule 46 (exp -> exp MINUS exp .) ]
  ! POWER           [ reduce using rule 46 (exp -> exp MINUS exp .) ]
  ! EQ              [ shift and go to state 54 ]
  ! LE              [ shift and go to state 52 ]
  ! GE              [ shift and go to state 64 ]
  ! NE              [ shift and go to state 55 ]
  ! LT              [ shift and go to state 56 ]
  ! GT              [ shift and go to state 60 ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 51 ]
  ! MODULUS         [ shift and go to state 66 ]
  ! RA              [ shift and go to state 58 ]
  ! WA              [ shift and go to state 50 ]


state 95

    (40) exp -> exp LE exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    EQ              reduce using rule 40 (exp -> exp LE exp .)
    LE              reduce using rule 40 (exp -> exp LE exp .)
    GE              reduce using rule 40 (exp -> exp LE exp .)
    NE              reduce using rule 40 (exp -> exp LE exp .)
    LT              reduce using rule 40 (exp -> exp LE exp .)
    GT              reduce using rule 40 (exp -> exp LE exp .)
    MODULUS         reduce using rule 40 (exp -> exp LE exp .)
    RA              reduce using rule 40 (exp -> exp LE exp .)
    WA              reduce using rule 40 (exp -> exp LE exp .)
    CHOTI           reduce using rule 40 (exp -> exp LE exp .)
    PATHAU          reduce using rule 40 (exp -> exp LE exp .)
    COMMA           reduce using rule 40 (exp -> exp LE exp .)
    LEKHA           reduce using rule 40 (exp -> exp LE exp .)
    RGPARA          reduce using rule 40 (exp -> exp LE exp .)
    BHAE            reduce using rule 40 (exp -> exp LE exp .)
    NABHAE          reduce using rule 40 (exp -> exp LE exp .)
    RPARA           reduce using rule 40 (exp -> exp LE exp .)
    CHHA            reduce using rule 40 (exp -> exp LE exp .)
    CHHAINA         reduce using rule 40 (exp -> exp LE exp .)
    COLON           reduce using rule 40 (exp -> exp LE exp .)
    NEWLINE         reduce using rule 40 (exp -> exp LE exp .)
    $end            reduce using rule 40 (exp -> exp LE exp .)
    DEKHI           reduce using rule 40 (exp -> exp LE exp .)
    SEMICOLON       reduce using rule 40 (exp -> exp LE exp .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53

  ! PLUS            [ reduce using rule 40 (exp -> exp LE exp .) ]
  ! MINUS           [ reduce using rule 40 (exp -> exp LE exp .) ]
  ! TIMES           [ reduce using rule 40 (exp -> exp LE exp .) ]
  ! DIVIDE          [ reduce using rule 40 (exp -> exp LE exp .) ]
  ! POWER           [ reduce using rule 40 (exp -> exp LE exp .) ]
  ! EQ              [ shift and go to state 54 ]
  ! LE              [ shift and go to state 52 ]
  ! GE              [ shift and go to state 64 ]
  ! NE              [ shift and go to state 55 ]
  ! LT              [ shift and go to state 56 ]
  ! GT              [ shift and go to state 60 ]
  ! MODULUS         [ shift and go to state 66 ]
  ! RA              [ shift and go to state 58 ]
  ! WA              [ shift and go to state 50 ]


state 96

    (49) exp -> exp POWER exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    EQ              reduce using rule 49 (exp -> exp POWER exp .)
    LE              reduce using rule 49 (exp -> exp POWER exp .)
    GE              reduce using rule 49 (exp -> exp POWER exp .)
    NE              reduce using rule 49 (exp -> exp POWER exp .)
    LT              reduce using rule 49 (exp -> exp POWER exp .)
    GT              reduce using rule 49 (exp -> exp POWER exp .)
    PLUS            reduce using rule 49 (exp -> exp POWER exp .)
    MINUS           reduce using rule 49 (exp -> exp POWER exp .)
    TIMES           reduce using rule 49 (exp -> exp POWER exp .)
    DIVIDE          reduce using rule 49 (exp -> exp POWER exp .)
    POWER           reduce using rule 49 (exp -> exp POWER exp .)
    MODULUS         reduce using rule 49 (exp -> exp POWER exp .)
    RA              reduce using rule 49 (exp -> exp POWER exp .)
    WA              reduce using rule 49 (exp -> exp POWER exp .)
    CHOTI           reduce using rule 49 (exp -> exp POWER exp .)
    PATHAU          reduce using rule 49 (exp -> exp POWER exp .)
    COMMA           reduce using rule 49 (exp -> exp POWER exp .)
    LEKHA           reduce using rule 49 (exp -> exp POWER exp .)
    RGPARA          reduce using rule 49 (exp -> exp POWER exp .)
    BHAE            reduce using rule 49 (exp -> exp POWER exp .)
    NABHAE          reduce using rule 49 (exp -> exp POWER exp .)
    RPARA           reduce using rule 49 (exp -> exp POWER exp .)
    CHHA            reduce using rule 49 (exp -> exp POWER exp .)
    CHHAINA         reduce using rule 49 (exp -> exp POWER exp .)
    COLON           reduce using rule 49 (exp -> exp POWER exp .)
    NEWLINE         reduce using rule 49 (exp -> exp POWER exp .)
    $end            reduce using rule 49 (exp -> exp POWER exp .)
    DEKHI           reduce using rule 49 (exp -> exp POWER exp .)
    SEMICOLON       reduce using rule 49 (exp -> exp POWER exp .)

  ! EQ              [ shift and go to state 54 ]
  ! LE              [ shift and go to state 52 ]
  ! GE              [ shift and go to state 64 ]
  ! NE              [ shift and go to state 55 ]
  ! LT              [ shift and go to state 56 ]
  ! GT              [ shift and go to state 60 ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 51 ]
  ! TIMES           [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 61 ]
  ! POWER           [ shift and go to state 53 ]
  ! MODULUS         [ shift and go to state 66 ]
  ! RA              [ shift and go to state 58 ]
  ! WA              [ shift and go to state 50 ]


state 97

    (39) exp -> exp EQ exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    EQ              reduce using rule 39 (exp -> exp EQ exp .)
    NE              reduce using rule 39 (exp -> exp EQ exp .)
    MODULUS         reduce using rule 39 (exp -> exp EQ exp .)
    RA              reduce using rule 39 (exp -> exp EQ exp .)
    WA              reduce using rule 39 (exp -> exp EQ exp .)
    CHOTI           reduce using rule 39 (exp -> exp EQ exp .)
    PATHAU          reduce using rule 39 (exp -> exp EQ exp .)
    COMMA           reduce using rule 39 (exp -> exp EQ exp .)
    LEKHA           reduce using rule 39 (exp -> exp EQ exp .)
    RGPARA          reduce using rule 39 (exp -> exp EQ exp .)
    BHAE            reduce using rule 39 (exp -> exp EQ exp .)
    NABHAE          reduce using rule 39 (exp -> exp EQ exp .)
    RPARA           reduce using rule 39 (exp -> exp EQ exp .)
    CHHA            reduce using rule 39 (exp -> exp EQ exp .)
    CHHAINA         reduce using rule 39 (exp -> exp EQ exp .)
    COLON           reduce using rule 39 (exp -> exp EQ exp .)
    NEWLINE         reduce using rule 39 (exp -> exp EQ exp .)
    $end            reduce using rule 39 (exp -> exp EQ exp .)
    DEKHI           reduce using rule 39 (exp -> exp EQ exp .)
    SEMICOLON       reduce using rule 39 (exp -> exp EQ exp .)
    LE              shift and go to state 52
    GE              shift and go to state 64
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53

  ! LE              [ reduce using rule 39 (exp -> exp EQ exp .) ]
  ! GE              [ reduce using rule 39 (exp -> exp EQ exp .) ]
  ! LT              [ reduce using rule 39 (exp -> exp EQ exp .) ]
  ! GT              [ reduce using rule 39 (exp -> exp EQ exp .) ]
  ! PLUS            [ reduce using rule 39 (exp -> exp EQ exp .) ]
  ! MINUS           [ reduce using rule 39 (exp -> exp EQ exp .) ]
  ! TIMES           [ reduce using rule 39 (exp -> exp EQ exp .) ]
  ! DIVIDE          [ reduce using rule 39 (exp -> exp EQ exp .) ]
  ! POWER           [ reduce using rule 39 (exp -> exp EQ exp .) ]
  ! EQ              [ shift and go to state 54 ]
  ! NE              [ shift and go to state 55 ]
  ! MODULUS         [ shift and go to state 66 ]
  ! RA              [ shift and go to state 58 ]
  ! WA              [ shift and go to state 50 ]


state 98

    (42) exp -> exp NE exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    CHOTI           reduce using rule 42 (exp -> exp NE exp .)
    PATHAU          reduce using rule 42 (exp -> exp NE exp .)
    COMMA           reduce using rule 42 (exp -> exp NE exp .)
    LEKHA           reduce using rule 42 (exp -> exp NE exp .)
    RGPARA          reduce using rule 42 (exp -> exp NE exp .)
    BHAE            reduce using rule 42 (exp -> exp NE exp .)
    NABHAE          reduce using rule 42 (exp -> exp NE exp .)
    RPARA           reduce using rule 42 (exp -> exp NE exp .)
    CHHA            reduce using rule 42 (exp -> exp NE exp .)
    CHHAINA         reduce using rule 42 (exp -> exp NE exp .)
    COLON           reduce using rule 42 (exp -> exp NE exp .)
    NEWLINE         reduce using rule 42 (exp -> exp NE exp .)
    $end            reduce using rule 42 (exp -> exp NE exp .)
    DEKHI           reduce using rule 42 (exp -> exp NE exp .)
    SEMICOLON       reduce using rule 42 (exp -> exp NE exp .)
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50

  ! EQ              [ reduce using rule 42 (exp -> exp NE exp .) ]
  ! LE              [ reduce using rule 42 (exp -> exp NE exp .) ]
  ! GE              [ reduce using rule 42 (exp -> exp NE exp .) ]
  ! NE              [ reduce using rule 42 (exp -> exp NE exp .) ]
  ! LT              [ reduce using rule 42 (exp -> exp NE exp .) ]
  ! GT              [ reduce using rule 42 (exp -> exp NE exp .) ]
  ! PLUS            [ reduce using rule 42 (exp -> exp NE exp .) ]
  ! MINUS           [ reduce using rule 42 (exp -> exp NE exp .) ]
  ! TIMES           [ reduce using rule 42 (exp -> exp NE exp .) ]
  ! DIVIDE          [ reduce using rule 42 (exp -> exp NE exp .) ]
  ! POWER           [ reduce using rule 42 (exp -> exp NE exp .) ]
  ! MODULUS         [ reduce using rule 42 (exp -> exp NE exp .) ]
  ! RA              [ reduce using rule 42 (exp -> exp NE exp .) ]
  ! WA              [ reduce using rule 42 (exp -> exp NE exp .) ]


state 99

    (43) exp -> exp LT exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    EQ              reduce using rule 43 (exp -> exp LT exp .)
    LE              reduce using rule 43 (exp -> exp LT exp .)
    GE              reduce using rule 43 (exp -> exp LT exp .)
    NE              reduce using rule 43 (exp -> exp LT exp .)
    LT              reduce using rule 43 (exp -> exp LT exp .)
    GT              reduce using rule 43 (exp -> exp LT exp .)
    MODULUS         reduce using rule 43 (exp -> exp LT exp .)
    RA              reduce using rule 43 (exp -> exp LT exp .)
    WA              reduce using rule 43 (exp -> exp LT exp .)
    CHOTI           reduce using rule 43 (exp -> exp LT exp .)
    PATHAU          reduce using rule 43 (exp -> exp LT exp .)
    COMMA           reduce using rule 43 (exp -> exp LT exp .)
    LEKHA           reduce using rule 43 (exp -> exp LT exp .)
    RGPARA          reduce using rule 43 (exp -> exp LT exp .)
    BHAE            reduce using rule 43 (exp -> exp LT exp .)
    NABHAE          reduce using rule 43 (exp -> exp LT exp .)
    RPARA           reduce using rule 43 (exp -> exp LT exp .)
    CHHA            reduce using rule 43 (exp -> exp LT exp .)
    CHHAINA         reduce using rule 43 (exp -> exp LT exp .)
    COLON           reduce using rule 43 (exp -> exp LT exp .)
    NEWLINE         reduce using rule 43 (exp -> exp LT exp .)
    $end            reduce using rule 43 (exp -> exp LT exp .)
    DEKHI           reduce using rule 43 (exp -> exp LT exp .)
    SEMICOLON       reduce using rule 43 (exp -> exp LT exp .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53

  ! PLUS            [ reduce using rule 43 (exp -> exp LT exp .) ]
  ! MINUS           [ reduce using rule 43 (exp -> exp LT exp .) ]
  ! TIMES           [ reduce using rule 43 (exp -> exp LT exp .) ]
  ! DIVIDE          [ reduce using rule 43 (exp -> exp LT exp .) ]
  ! POWER           [ reduce using rule 43 (exp -> exp LT exp .) ]
  ! EQ              [ shift and go to state 54 ]
  ! LE              [ shift and go to state 52 ]
  ! GE              [ shift and go to state 64 ]
  ! NE              [ shift and go to state 55 ]
  ! LT              [ shift and go to state 56 ]
  ! GT              [ shift and go to state 60 ]
  ! MODULUS         [ shift and go to state 66 ]
  ! RA              [ shift and go to state 58 ]
  ! WA              [ shift and go to state 50 ]


state 100

    (66) dynamString -> exp COMMA dynamString .

    LEKHA           reduce using rule 66 (dynamString -> exp COMMA dynamString .)


state 101

    (51) exp -> exp RA exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    CHOTI           reduce using rule 51 (exp -> exp RA exp .)
    PATHAU          reduce using rule 51 (exp -> exp RA exp .)
    COMMA           reduce using rule 51 (exp -> exp RA exp .)
    LEKHA           reduce using rule 51 (exp -> exp RA exp .)
    RGPARA          reduce using rule 51 (exp -> exp RA exp .)
    BHAE            reduce using rule 51 (exp -> exp RA exp .)
    NABHAE          reduce using rule 51 (exp -> exp RA exp .)
    RPARA           reduce using rule 51 (exp -> exp RA exp .)
    CHHA            reduce using rule 51 (exp -> exp RA exp .)
    CHHAINA         reduce using rule 51 (exp -> exp RA exp .)
    COLON           reduce using rule 51 (exp -> exp RA exp .)
    NEWLINE         reduce using rule 51 (exp -> exp RA exp .)
    $end            reduce using rule 51 (exp -> exp RA exp .)
    DEKHI           reduce using rule 51 (exp -> exp RA exp .)
    SEMICOLON       reduce using rule 51 (exp -> exp RA exp .)
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50

  ! EQ              [ reduce using rule 51 (exp -> exp RA exp .) ]
  ! LE              [ reduce using rule 51 (exp -> exp RA exp .) ]
  ! GE              [ reduce using rule 51 (exp -> exp RA exp .) ]
  ! NE              [ reduce using rule 51 (exp -> exp RA exp .) ]
  ! LT              [ reduce using rule 51 (exp -> exp RA exp .) ]
  ! GT              [ reduce using rule 51 (exp -> exp RA exp .) ]
  ! PLUS            [ reduce using rule 51 (exp -> exp RA exp .) ]
  ! MINUS           [ reduce using rule 51 (exp -> exp RA exp .) ]
  ! TIMES           [ reduce using rule 51 (exp -> exp RA exp .) ]
  ! DIVIDE          [ reduce using rule 51 (exp -> exp RA exp .) ]
  ! POWER           [ reduce using rule 51 (exp -> exp RA exp .) ]
  ! MODULUS         [ reduce using rule 51 (exp -> exp RA exp .) ]
  ! RA              [ reduce using rule 51 (exp -> exp RA exp .) ]
  ! WA              [ reduce using rule 51 (exp -> exp RA exp .) ]


state 102

    (45) exp -> exp PLUS exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    EQ              reduce using rule 45 (exp -> exp PLUS exp .)
    LE              reduce using rule 45 (exp -> exp PLUS exp .)
    GE              reduce using rule 45 (exp -> exp PLUS exp .)
    NE              reduce using rule 45 (exp -> exp PLUS exp .)
    LT              reduce using rule 45 (exp -> exp PLUS exp .)
    GT              reduce using rule 45 (exp -> exp PLUS exp .)
    PLUS            reduce using rule 45 (exp -> exp PLUS exp .)
    MINUS           reduce using rule 45 (exp -> exp PLUS exp .)
    MODULUS         reduce using rule 45 (exp -> exp PLUS exp .)
    RA              reduce using rule 45 (exp -> exp PLUS exp .)
    WA              reduce using rule 45 (exp -> exp PLUS exp .)
    CHOTI           reduce using rule 45 (exp -> exp PLUS exp .)
    PATHAU          reduce using rule 45 (exp -> exp PLUS exp .)
    COMMA           reduce using rule 45 (exp -> exp PLUS exp .)
    LEKHA           reduce using rule 45 (exp -> exp PLUS exp .)
    RGPARA          reduce using rule 45 (exp -> exp PLUS exp .)
    BHAE            reduce using rule 45 (exp -> exp PLUS exp .)
    NABHAE          reduce using rule 45 (exp -> exp PLUS exp .)
    RPARA           reduce using rule 45 (exp -> exp PLUS exp .)
    CHHA            reduce using rule 45 (exp -> exp PLUS exp .)
    CHHAINA         reduce using rule 45 (exp -> exp PLUS exp .)
    COLON           reduce using rule 45 (exp -> exp PLUS exp .)
    NEWLINE         reduce using rule 45 (exp -> exp PLUS exp .)
    $end            reduce using rule 45 (exp -> exp PLUS exp .)
    DEKHI           reduce using rule 45 (exp -> exp PLUS exp .)
    SEMICOLON       reduce using rule 45 (exp -> exp PLUS exp .)
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53

  ! TIMES           [ reduce using rule 45 (exp -> exp PLUS exp .) ]
  ! DIVIDE          [ reduce using rule 45 (exp -> exp PLUS exp .) ]
  ! POWER           [ reduce using rule 45 (exp -> exp PLUS exp .) ]
  ! EQ              [ shift and go to state 54 ]
  ! LE              [ shift and go to state 52 ]
  ! GE              [ shift and go to state 64 ]
  ! NE              [ shift and go to state 55 ]
  ! LT              [ shift and go to state 56 ]
  ! GT              [ shift and go to state 60 ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 51 ]
  ! MODULUS         [ shift and go to state 66 ]
  ! RA              [ shift and go to state 58 ]
  ! WA              [ shift and go to state 50 ]


state 103

    (44) exp -> exp GT exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    EQ              reduce using rule 44 (exp -> exp GT exp .)
    LE              reduce using rule 44 (exp -> exp GT exp .)
    GE              reduce using rule 44 (exp -> exp GT exp .)
    NE              reduce using rule 44 (exp -> exp GT exp .)
    LT              reduce using rule 44 (exp -> exp GT exp .)
    GT              reduce using rule 44 (exp -> exp GT exp .)
    MODULUS         reduce using rule 44 (exp -> exp GT exp .)
    RA              reduce using rule 44 (exp -> exp GT exp .)
    WA              reduce using rule 44 (exp -> exp GT exp .)
    CHOTI           reduce using rule 44 (exp -> exp GT exp .)
    PATHAU          reduce using rule 44 (exp -> exp GT exp .)
    COMMA           reduce using rule 44 (exp -> exp GT exp .)
    LEKHA           reduce using rule 44 (exp -> exp GT exp .)
    RGPARA          reduce using rule 44 (exp -> exp GT exp .)
    BHAE            reduce using rule 44 (exp -> exp GT exp .)
    NABHAE          reduce using rule 44 (exp -> exp GT exp .)
    RPARA           reduce using rule 44 (exp -> exp GT exp .)
    CHHA            reduce using rule 44 (exp -> exp GT exp .)
    CHHAINA         reduce using rule 44 (exp -> exp GT exp .)
    COLON           reduce using rule 44 (exp -> exp GT exp .)
    NEWLINE         reduce using rule 44 (exp -> exp GT exp .)
    $end            reduce using rule 44 (exp -> exp GT exp .)
    DEKHI           reduce using rule 44 (exp -> exp GT exp .)
    SEMICOLON       reduce using rule 44 (exp -> exp GT exp .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53

  ! PLUS            [ reduce using rule 44 (exp -> exp GT exp .) ]
  ! MINUS           [ reduce using rule 44 (exp -> exp GT exp .) ]
  ! TIMES           [ reduce using rule 44 (exp -> exp GT exp .) ]
  ! DIVIDE          [ reduce using rule 44 (exp -> exp GT exp .) ]
  ! POWER           [ reduce using rule 44 (exp -> exp GT exp .) ]
  ! EQ              [ shift and go to state 54 ]
  ! LE              [ shift and go to state 52 ]
  ! GE              [ shift and go to state 64 ]
  ! NE              [ shift and go to state 55 ]
  ! LT              [ shift and go to state 56 ]
  ! GT              [ shift and go to state 60 ]
  ! MODULUS         [ shift and go to state 66 ]
  ! RA              [ shift and go to state 58 ]
  ! WA              [ shift and go to state 50 ]


state 104

    (48) exp -> exp DIVIDE exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    EQ              reduce using rule 48 (exp -> exp DIVIDE exp .)
    LE              reduce using rule 48 (exp -> exp DIVIDE exp .)
    GE              reduce using rule 48 (exp -> exp DIVIDE exp .)
    NE              reduce using rule 48 (exp -> exp DIVIDE exp .)
    LT              reduce using rule 48 (exp -> exp DIVIDE exp .)
    GT              reduce using rule 48 (exp -> exp DIVIDE exp .)
    PLUS            reduce using rule 48 (exp -> exp DIVIDE exp .)
    MINUS           reduce using rule 48 (exp -> exp DIVIDE exp .)
    TIMES           reduce using rule 48 (exp -> exp DIVIDE exp .)
    DIVIDE          reduce using rule 48 (exp -> exp DIVIDE exp .)
    POWER           reduce using rule 48 (exp -> exp DIVIDE exp .)
    MODULUS         reduce using rule 48 (exp -> exp DIVIDE exp .)
    RA              reduce using rule 48 (exp -> exp DIVIDE exp .)
    WA              reduce using rule 48 (exp -> exp DIVIDE exp .)
    CHOTI           reduce using rule 48 (exp -> exp DIVIDE exp .)
    PATHAU          reduce using rule 48 (exp -> exp DIVIDE exp .)
    COMMA           reduce using rule 48 (exp -> exp DIVIDE exp .)
    LEKHA           reduce using rule 48 (exp -> exp DIVIDE exp .)
    RGPARA          reduce using rule 48 (exp -> exp DIVIDE exp .)
    BHAE            reduce using rule 48 (exp -> exp DIVIDE exp .)
    NABHAE          reduce using rule 48 (exp -> exp DIVIDE exp .)
    RPARA           reduce using rule 48 (exp -> exp DIVIDE exp .)
    CHHA            reduce using rule 48 (exp -> exp DIVIDE exp .)
    CHHAINA         reduce using rule 48 (exp -> exp DIVIDE exp .)
    COLON           reduce using rule 48 (exp -> exp DIVIDE exp .)
    NEWLINE         reduce using rule 48 (exp -> exp DIVIDE exp .)
    $end            reduce using rule 48 (exp -> exp DIVIDE exp .)
    DEKHI           reduce using rule 48 (exp -> exp DIVIDE exp .)
    SEMICOLON       reduce using rule 48 (exp -> exp DIVIDE exp .)

  ! EQ              [ shift and go to state 54 ]
  ! LE              [ shift and go to state 52 ]
  ! GE              [ shift and go to state 64 ]
  ! NE              [ shift and go to state 55 ]
  ! LT              [ shift and go to state 56 ]
  ! GT              [ shift and go to state 60 ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 51 ]
  ! TIMES           [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 61 ]
  ! POWER           [ shift and go to state 53 ]
  ! MODULUS         [ shift and go to state 66 ]
  ! RA              [ shift and go to state 58 ]
  ! WA              [ shift and go to state 50 ]


state 105

    (47) exp -> exp TIMES exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    EQ              reduce using rule 47 (exp -> exp TIMES exp .)
    LE              reduce using rule 47 (exp -> exp TIMES exp .)
    GE              reduce using rule 47 (exp -> exp TIMES exp .)
    NE              reduce using rule 47 (exp -> exp TIMES exp .)
    LT              reduce using rule 47 (exp -> exp TIMES exp .)
    GT              reduce using rule 47 (exp -> exp TIMES exp .)
    PLUS            reduce using rule 47 (exp -> exp TIMES exp .)
    MINUS           reduce using rule 47 (exp -> exp TIMES exp .)
    TIMES           reduce using rule 47 (exp -> exp TIMES exp .)
    DIVIDE          reduce using rule 47 (exp -> exp TIMES exp .)
    POWER           reduce using rule 47 (exp -> exp TIMES exp .)
    MODULUS         reduce using rule 47 (exp -> exp TIMES exp .)
    RA              reduce using rule 47 (exp -> exp TIMES exp .)
    WA              reduce using rule 47 (exp -> exp TIMES exp .)
    CHOTI           reduce using rule 47 (exp -> exp TIMES exp .)
    PATHAU          reduce using rule 47 (exp -> exp TIMES exp .)
    COMMA           reduce using rule 47 (exp -> exp TIMES exp .)
    LEKHA           reduce using rule 47 (exp -> exp TIMES exp .)
    RGPARA          reduce using rule 47 (exp -> exp TIMES exp .)
    BHAE            reduce using rule 47 (exp -> exp TIMES exp .)
    NABHAE          reduce using rule 47 (exp -> exp TIMES exp .)
    RPARA           reduce using rule 47 (exp -> exp TIMES exp .)
    CHHA            reduce using rule 47 (exp -> exp TIMES exp .)
    CHHAINA         reduce using rule 47 (exp -> exp TIMES exp .)
    COLON           reduce using rule 47 (exp -> exp TIMES exp .)
    NEWLINE         reduce using rule 47 (exp -> exp TIMES exp .)
    $end            reduce using rule 47 (exp -> exp TIMES exp .)
    DEKHI           reduce using rule 47 (exp -> exp TIMES exp .)
    SEMICOLON       reduce using rule 47 (exp -> exp TIMES exp .)

  ! EQ              [ shift and go to state 54 ]
  ! LE              [ shift and go to state 52 ]
  ! GE              [ shift and go to state 64 ]
  ! NE              [ shift and go to state 55 ]
  ! LT              [ shift and go to state 56 ]
  ! GT              [ shift and go to state 60 ]
  ! PLUS            [ shift and go to state 59 ]
  ! MINUS           [ shift and go to state 51 ]
  ! TIMES           [ shift and go to state 62 ]
  ! DIVIDE          [ shift and go to state 61 ]
  ! POWER           [ shift and go to state 53 ]
  ! MODULUS         [ shift and go to state 66 ]
  ! RA              [ shift and go to state 58 ]
  ! WA              [ shift and go to state 50 ]


state 106

    (41) exp -> exp GE exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    EQ              reduce using rule 41 (exp -> exp GE exp .)
    LE              reduce using rule 41 (exp -> exp GE exp .)
    GE              reduce using rule 41 (exp -> exp GE exp .)
    NE              reduce using rule 41 (exp -> exp GE exp .)
    LT              reduce using rule 41 (exp -> exp GE exp .)
    GT              reduce using rule 41 (exp -> exp GE exp .)
    MODULUS         reduce using rule 41 (exp -> exp GE exp .)
    RA              reduce using rule 41 (exp -> exp GE exp .)
    WA              reduce using rule 41 (exp -> exp GE exp .)
    CHOTI           reduce using rule 41 (exp -> exp GE exp .)
    PATHAU          reduce using rule 41 (exp -> exp GE exp .)
    COMMA           reduce using rule 41 (exp -> exp GE exp .)
    LEKHA           reduce using rule 41 (exp -> exp GE exp .)
    RGPARA          reduce using rule 41 (exp -> exp GE exp .)
    BHAE            reduce using rule 41 (exp -> exp GE exp .)
    NABHAE          reduce using rule 41 (exp -> exp GE exp .)
    RPARA           reduce using rule 41 (exp -> exp GE exp .)
    CHHA            reduce using rule 41 (exp -> exp GE exp .)
    CHHAINA         reduce using rule 41 (exp -> exp GE exp .)
    COLON           reduce using rule 41 (exp -> exp GE exp .)
    NEWLINE         reduce using rule 41 (exp -> exp GE exp .)
    $end            reduce using rule 41 (exp -> exp GE exp .)
    DEKHI           reduce using rule 41 (exp -> exp GE exp .)
    SEMICOLON       reduce using rule 41 (exp -> exp GE exp .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53

  ! PLUS            [ reduce using rule 41 (exp -> exp GE exp .) ]
  ! MINUS           [ reduce using rule 41 (exp -> exp GE exp .) ]
  ! TIMES           [ reduce using rule 41 (exp -> exp GE exp .) ]
  ! DIVIDE          [ reduce using rule 41 (exp -> exp GE exp .) ]
  ! POWER           [ reduce using rule 41 (exp -> exp GE exp .) ]
  ! EQ              [ shift and go to state 54 ]
  ! LE              [ shift and go to state 52 ]
  ! GE              [ shift and go to state 64 ]
  ! NE              [ shift and go to state 55 ]
  ! LT              [ shift and go to state 56 ]
  ! GT              [ shift and go to state 60 ]
  ! MODULUS         [ shift and go to state 66 ]
  ! RA              [ shift and go to state 58 ]
  ! WA              [ shift and go to state 50 ]


state 107

    (25) stmt -> exp CHOTI NEWLINE . cmpdstmt TICHO
    (72) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (73) cmpdstmt -> .
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER HATAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . IDENTIFIER LGPARA exp RGPARA incrementsign ASSIGNMENT exp
    (23) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . exp CHOTI NEWLINE cmpdstmt TICHO
    (26) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (27) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (28) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (29) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (30) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (31) stmt -> . exp PATHAU
    (32) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (66) dynamString -> . exp COMMA dynamString
    (67) dynamString -> . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    TICHO           reduce using rule 73 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 11
    BAHIRA          shift and go to state 6
    ARKO            shift and go to state 7
    YEDI            shift and go to state 2
    SABEI           shift and go to state 12
    JABA            shift and go to state 10
    KAAM            shift and go to state 8
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    dynamString                    shift and go to state 4
    cmpdstmt                       shift and go to state 133
    stmt                           shift and go to state 113
    exp                            shift and go to state 18

state 108

    (50) exp -> exp MODULUS exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    CHOTI           reduce using rule 50 (exp -> exp MODULUS exp .)
    PATHAU          reduce using rule 50 (exp -> exp MODULUS exp .)
    COMMA           reduce using rule 50 (exp -> exp MODULUS exp .)
    LEKHA           reduce using rule 50 (exp -> exp MODULUS exp .)
    RGPARA          reduce using rule 50 (exp -> exp MODULUS exp .)
    BHAE            reduce using rule 50 (exp -> exp MODULUS exp .)
    NABHAE          reduce using rule 50 (exp -> exp MODULUS exp .)
    RPARA           reduce using rule 50 (exp -> exp MODULUS exp .)
    CHHA            reduce using rule 50 (exp -> exp MODULUS exp .)
    CHHAINA         reduce using rule 50 (exp -> exp MODULUS exp .)
    COLON           reduce using rule 50 (exp -> exp MODULUS exp .)
    NEWLINE         reduce using rule 50 (exp -> exp MODULUS exp .)
    $end            reduce using rule 50 (exp -> exp MODULUS exp .)
    DEKHI           reduce using rule 50 (exp -> exp MODULUS exp .)
    SEMICOLON       reduce using rule 50 (exp -> exp MODULUS exp .)
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50

  ! EQ              [ reduce using rule 50 (exp -> exp MODULUS exp .) ]
  ! LE              [ reduce using rule 50 (exp -> exp MODULUS exp .) ]
  ! GE              [ reduce using rule 50 (exp -> exp MODULUS exp .) ]
  ! NE              [ reduce using rule 50 (exp -> exp MODULUS exp .) ]
  ! LT              [ reduce using rule 50 (exp -> exp MODULUS exp .) ]
  ! GT              [ reduce using rule 50 (exp -> exp MODULUS exp .) ]
  ! PLUS            [ reduce using rule 50 (exp -> exp MODULUS exp .) ]
  ! MINUS           [ reduce using rule 50 (exp -> exp MODULUS exp .) ]
  ! TIMES           [ reduce using rule 50 (exp -> exp MODULUS exp .) ]
  ! DIVIDE          [ reduce using rule 50 (exp -> exp MODULUS exp .) ]
  ! POWER           [ reduce using rule 50 (exp -> exp MODULUS exp .) ]
  ! MODULUS         [ reduce using rule 50 (exp -> exp MODULUS exp .) ]
  ! RA              [ reduce using rule 50 (exp -> exp MODULUS exp .) ]
  ! WA              [ reduce using rule 50 (exp -> exp MODULUS exp .) ]


state 109

    (59) exp -> IDENTIFIER LGPARA exp . RGPARA
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp
    (62) sliceexp -> exp .

    RGPARA          shift and go to state 134
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50
    COLON           reduce using rule 62 (sliceexp -> exp .)


state 110

    (65) exp -> IDENTIFIER LPARA variableexp . RPARA

    RPARA           shift and go to state 135


state 111

    (36) variableexp -> exp COMMA variableexp .

    RGPARA          reduce using rule 36 (variableexp -> exp COMMA variableexp .)
    RPARA           reduce using rule 36 (variableexp -> exp COMMA variableexp .)
    NEWLINE         reduce using rule 36 (variableexp -> exp COMMA variableexp .)
    $end            reduce using rule 36 (variableexp -> exp COMMA variableexp .)


state 112

    (69) condition -> condition WA condition .
    (68) condition -> condition . RA condition
    (69) condition -> condition . WA condition

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 69 (condition -> condition WA condition .)
    RA              shift and go to state 73
    WA              shift and go to state 71

  ! RA              [ reduce using rule 69 (condition -> condition WA condition .) ]
  ! WA              [ reduce using rule 69 (condition -> condition WA condition .) ]


state 113

    (72) cmpdstmt -> stmt . NEWLINE cmpdstmt

    NEWLINE         shift and go to state 136


state 114

    (23) stmt -> YEDI condition NEWLINE cmpdstmt . optelse DIYE
    (74) optelse -> . ATHAWA condition NEWLINE cmpdstmt optelse
    (75) optelse -> . ATHAWA NEWLINE cmpdstmt
    (76) optelse -> .

    ATHAWA          shift and go to state 138
    DIYE            reduce using rule 76 (optelse -> .)

    optelse                        shift and go to state 137

state 115

    (68) condition -> condition RA condition .
    (68) condition -> condition . RA condition
    (69) condition -> condition . WA condition

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 68 (condition -> condition RA condition .)
    RA              shift and go to state 73
    WA              shift and go to state 71

  ! RA              [ reduce using rule 68 (condition -> condition RA condition .) ]
  ! WA              [ reduce using rule 68 (condition -> condition RA condition .) ]


state 116

    (64) exp -> LPARA exp RPARA QUESTION . exp COLON exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 139

state 117

    (29) stmt -> KAAM IDENTIFIER LPARA variableArgs . RPARA NEWLINE cmpdstmt MAKA

    RPARA           shift and go to state 140


state 118

    (33) variableArgs -> IDENTIFIER . COMMA variableArgs
    (34) variableArgs -> IDENTIFIER .

    COMMA           shift and go to state 141
    RPARA           reduce using rule 34 (variableArgs -> IDENTIFIER .)


state 119

    (83) whilecond -> whilecond WA . whilecond
    (82) whilecond -> . whilecond RA whilecond
    (83) whilecond -> . whilecond WA whilecond
    (84) whilecond -> . exp CHHA
    (85) whilecond -> . exp CHHAINA
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 80
    whilecond                      shift and go to state 142

state 120

    (27) stmt -> JABA SAMMA whilecond NEWLINE . cmpdstmt BAJA
    (72) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (73) cmpdstmt -> .
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER HATAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . IDENTIFIER LGPARA exp RGPARA incrementsign ASSIGNMENT exp
    (23) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . exp CHOTI NEWLINE cmpdstmt TICHO
    (26) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (27) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (28) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (29) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (30) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (31) stmt -> . exp PATHAU
    (32) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (66) dynamString -> . exp COMMA dynamString
    (67) dynamString -> . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    BAJA            reduce using rule 73 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 11
    BAHIRA          shift and go to state 6
    ARKO            shift and go to state 7
    YEDI            shift and go to state 2
    SABEI           shift and go to state 12
    JABA            shift and go to state 10
    KAAM            shift and go to state 8
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    dynamString                    shift and go to state 4
    cmpdstmt                       shift and go to state 143
    stmt                           shift and go to state 113
    exp                            shift and go to state 18

state 121

    (82) whilecond -> whilecond RA . whilecond
    (82) whilecond -> . whilecond RA whilecond
    (83) whilecond -> . whilecond WA whilecond
    (84) whilecond -> . exp CHHA
    (85) whilecond -> . exp CHHAINA
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 80
    whilecond                      shift and go to state 144

state 122

    (84) whilecond -> exp CHHA .

    RA              reduce using rule 84 (whilecond -> exp CHHA .)
    WA              reduce using rule 84 (whilecond -> exp CHHA .)
    NEWLINE         reduce using rule 84 (whilecond -> exp CHHA .)


state 123

    (85) whilecond -> exp CHHAINA .

    RA              reduce using rule 85 (whilecond -> exp CHHAINA .)
    WA              reduce using rule 85 (whilecond -> exp CHHAINA .)
    NEWLINE         reduce using rule 85 (whilecond -> exp CHHAINA .)


state 124

    (61) exp -> IDENTIFIER LGPARA sliceexp COLON . sliceexp RGPARA
    (62) sliceexp -> . exp
    (63) sliceexp -> .
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    RGPARA          reduce using rule 63 (sliceexp -> .)
    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 146
    sliceexp                       shift and go to state 145

state 125

    (22) stmt -> IDENTIFIER LGPARA exp RGPARA . incrementsign ASSIGNMENT exp
    (32) stmt -> IDENTIFIER LGPARA exp RGPARA . ASSIGNMENT exp
    (59) exp -> IDENTIFIER LGPARA exp RGPARA .
    (79) incrementsign -> . sign
    (80) incrementsign -> . TIMES
    (81) incrementsign -> . DIVIDE
    (77) sign -> . PLUS
    (78) sign -> . MINUS

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ASSIGNMENT      shift and go to state 147
    CHOTI           reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    PATHAU          reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    COMMA           reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    EQ              reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LE              reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    GE              reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NE              reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LT              reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    GT              reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    POWER           reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    MODULUS         reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RA              reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    WA              reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LEKHA           reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    TIMES           shift and go to state 31
    DIVIDE          shift and go to state 42
    PLUS            shift and go to state 41
    MINUS           shift and go to state 38

  ! PLUS            [ reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .) ]
  ! MINUS           [ reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .) ]
  ! TIMES           [ reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .) ]
  ! DIVIDE          [ reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .) ]

    incrementsign                  shift and go to state 148
    sign                           shift and go to state 44

state 126

    (13) stmt -> IDENTIFIER BATA IDENTIFIER LEU .

    NEWLINE         reduce using rule 13 (stmt -> IDENTIFIER BATA IDENTIFIER LEU .)
    $end            reduce using rule 13 (stmt -> IDENTIFIER BATA IDENTIFIER LEU .)


state 127

    (28) stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp . RGPARA
    (58) exp -> LGPARA variableexp . RGPARA

    RGPARA          shift and go to state 149


state 128

    (30) stmt -> IDENTIFIER LPARA variableexp RPARA .
    (65) exp -> IDENTIFIER LPARA variableexp RPARA .

    NEWLINE         reduce using rule 30 (stmt -> IDENTIFIER LPARA variableexp RPARA .)
    $end            reduce using rule 30 (stmt -> IDENTIFIER LPARA variableexp RPARA .)
    CHOTI           reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    PATHAU          reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    COMMA           reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    EQ              reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LE              reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GE              reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NE              reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LT              reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GT              reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    PLUS            reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    MINUS           reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    TIMES           reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    DIVIDE          reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    POWER           reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    MODULUS         reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RA              reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    WA              reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LEKHA           reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)


state 129

    (21) stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    NEWLINE         reduce using rule 21 (stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .)
    $end            reduce using rule 21 (stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .)
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50


state 130

    (11) stmt -> IDENTIFIER MA dynamString LEKHA . SEMICOLON
    (12) stmt -> IDENTIFIER MA dynamString LEKHA .

    SEMICOLON       shift and go to state 150
    NEWLINE         reduce using rule 12 (stmt -> IDENTIFIER MA dynamString LEKHA .)
    $end            reduce using rule 12 (stmt -> IDENTIFIER MA dynamString LEKHA .)


state 131

    (19) stmt -> IDENTIFIER MA IDENTIFIER KORA . variableexp
    (36) variableexp -> . exp COMMA variableexp
    (37) variableexp -> . exp
    (38) variableexp -> .
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    NEWLINE         reduce using rule 38 (variableexp -> .)
    $end            reduce using rule 38 (variableexp -> .)
    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 22
    variableexp                    shift and go to state 151

state 132

    (24) stmt -> SABEI IDENTIFIER ASSIGNMENT exp . DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (26) stmt -> SABEI IDENTIFIER ASSIGNMENT exp . DEKHI exp NEWLINE cmpdstmt BAISA
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    DEKHI           shift and go to state 152
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50


state 133

    (25) stmt -> exp CHOTI NEWLINE cmpdstmt . TICHO

    TICHO           shift and go to state 153


state 134

    (59) exp -> IDENTIFIER LGPARA exp RGPARA .

    EQ              reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LE              reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    GE              reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NE              reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LT              reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    GT              reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    PLUS            reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    MINUS           reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    TIMES           reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    DIVIDE          reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    POWER           reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    MODULUS         reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RA              reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    WA              reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    CHOTI           reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    PATHAU          reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    COMMA           reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LEKHA           reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RGPARA          reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    BHAE            reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NABHAE          reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RPARA           reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    CHHA            reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    CHHAINA         reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    COLON           reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NEWLINE         reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    $end            reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    DEKHI           reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    SEMICOLON       reduce using rule 59 (exp -> IDENTIFIER LGPARA exp RGPARA .)


state 135

    (65) exp -> IDENTIFIER LPARA variableexp RPARA .

    EQ              reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LE              reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GE              reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NE              reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LT              reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GT              reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    PLUS            reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    MINUS           reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    TIMES           reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    DIVIDE          reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    POWER           reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    MODULUS         reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RA              reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    WA              reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    CHOTI           reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    PATHAU          reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    COMMA           reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LEKHA           reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RGPARA          reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    BHAE            reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NABHAE          reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RPARA           reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    CHHA            reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    CHHAINA         reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    COLON           reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NEWLINE         reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    $end            reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    DEKHI           reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    SEMICOLON       reduce using rule 65 (exp -> IDENTIFIER LPARA variableexp RPARA .)


state 136

    (72) cmpdstmt -> stmt NEWLINE . cmpdstmt
    (72) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (73) cmpdstmt -> .
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER HATAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . IDENTIFIER LGPARA exp RGPARA incrementsign ASSIGNMENT exp
    (23) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . exp CHOTI NEWLINE cmpdstmt TICHO
    (26) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (27) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (28) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (29) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (30) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (31) stmt -> . exp PATHAU
    (32) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (66) dynamString -> . exp COMMA dynamString
    (67) dynamString -> . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    ATHAWA          reduce using rule 73 (cmpdstmt -> .)
    DIYE            reduce using rule 73 (cmpdstmt -> .)
    TICHO           reduce using rule 73 (cmpdstmt -> .)
    BAJA            reduce using rule 73 (cmpdstmt -> .)
    MAKA            reduce using rule 73 (cmpdstmt -> .)
    BAISA           reduce using rule 73 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 11
    BAHIRA          shift and go to state 6
    ARKO            shift and go to state 7
    YEDI            shift and go to state 2
    SABEI           shift and go to state 12
    JABA            shift and go to state 10
    KAAM            shift and go to state 8
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    dynamString                    shift and go to state 4
    cmpdstmt                       shift and go to state 154
    stmt                           shift and go to state 113
    exp                            shift and go to state 18

state 137

    (23) stmt -> YEDI condition NEWLINE cmpdstmt optelse . DIYE

    DIYE            shift and go to state 155


state 138

    (74) optelse -> ATHAWA . condition NEWLINE cmpdstmt optelse
    (75) optelse -> ATHAWA . NEWLINE cmpdstmt
    (68) condition -> . condition RA condition
    (69) condition -> . condition WA condition
    (70) condition -> . exp BHAE
    (71) condition -> . exp NABHAE
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    NEWLINE         shift and go to state 156
    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 24
    condition                      shift and go to state 157

state 139

    (64) exp -> LPARA exp RPARA QUESTION exp . COLON exp
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    COLON           shift and go to state 158
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50


state 140

    (29) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA . NEWLINE cmpdstmt MAKA

    NEWLINE         shift and go to state 159


state 141

    (33) variableArgs -> IDENTIFIER COMMA . variableArgs
    (33) variableArgs -> . IDENTIFIER COMMA variableArgs
    (34) variableArgs -> . IDENTIFIER
    (35) variableArgs -> .

    IDENTIFIER      shift and go to state 118
    RPARA           reduce using rule 35 (variableArgs -> .)

    variableArgs                   shift and go to state 160

state 142

    (83) whilecond -> whilecond WA whilecond .
    (82) whilecond -> whilecond . RA whilecond
    (83) whilecond -> whilecond . WA whilecond

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 83 (whilecond -> whilecond WA whilecond .)
    RA              shift and go to state 121
    WA              shift and go to state 119

  ! RA              [ reduce using rule 83 (whilecond -> whilecond WA whilecond .) ]
  ! WA              [ reduce using rule 83 (whilecond -> whilecond WA whilecond .) ]


state 143

    (27) stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt . BAJA

    BAJA            shift and go to state 161


state 144

    (82) whilecond -> whilecond RA whilecond .
    (82) whilecond -> whilecond . RA whilecond
    (83) whilecond -> whilecond . WA whilecond

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 82 (whilecond -> whilecond RA whilecond .)
    RA              shift and go to state 121
    WA              shift and go to state 119

  ! RA              [ reduce using rule 82 (whilecond -> whilecond RA whilecond .) ]
  ! WA              [ reduce using rule 82 (whilecond -> whilecond RA whilecond .) ]


state 145

    (61) exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp . RGPARA

    RGPARA          shift and go to state 162


state 146

    (62) sliceexp -> exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    RGPARA          reduce using rule 62 (sliceexp -> exp .)
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50


state 147

    (32) stmt -> IDENTIFIER LGPARA exp RGPARA ASSIGNMENT . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 163

state 148

    (22) stmt -> IDENTIFIER LGPARA exp RGPARA incrementsign . ASSIGNMENT exp

    ASSIGNMENT      shift and go to state 164


state 149

    (28) stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .
    (58) exp -> LGPARA variableexp RGPARA .

  ! reduce/reduce conflict for NEWLINE resolved using rule 28 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
  ! reduce/reduce conflict for $end resolved using rule 28 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    NEWLINE         reduce using rule 28 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    $end            reduce using rule 28 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    EQ              reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    LE              reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    GE              reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    NE              reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    LT              reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    GT              reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    PLUS            reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    MINUS           reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    TIMES           reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    DIVIDE          reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    POWER           reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    MODULUS         reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    RA              reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)
    WA              reduce using rule 58 (exp -> LGPARA variableexp RGPARA .)

  ! NEWLINE         [ reduce using rule 58 (exp -> LGPARA variableexp RGPARA .) ]
  ! $end            [ reduce using rule 58 (exp -> LGPARA variableexp RGPARA .) ]


state 150

    (11) stmt -> IDENTIFIER MA dynamString LEKHA SEMICOLON .

    NEWLINE         reduce using rule 11 (stmt -> IDENTIFIER MA dynamString LEKHA SEMICOLON .)
    $end            reduce using rule 11 (stmt -> IDENTIFIER MA dynamString LEKHA SEMICOLON .)


state 151

    (19) stmt -> IDENTIFIER MA IDENTIFIER KORA variableexp .

    NEWLINE         reduce using rule 19 (stmt -> IDENTIFIER MA IDENTIFIER KORA variableexp .)
    $end            reduce using rule 19 (stmt -> IDENTIFIER MA IDENTIFIER KORA variableexp .)


state 152

    (24) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI . exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (26) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI . exp NEWLINE cmpdstmt BAISA
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 165

state 153

    (25) stmt -> exp CHOTI NEWLINE cmpdstmt TICHO .

    NEWLINE         reduce using rule 25 (stmt -> exp CHOTI NEWLINE cmpdstmt TICHO .)
    $end            reduce using rule 25 (stmt -> exp CHOTI NEWLINE cmpdstmt TICHO .)


state 154

    (72) cmpdstmt -> stmt NEWLINE cmpdstmt .

    ATHAWA          reduce using rule 72 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    DIYE            reduce using rule 72 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    MAKA            reduce using rule 72 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    BAISA           reduce using rule 72 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    BAJA            reduce using rule 72 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    TICHO           reduce using rule 72 (cmpdstmt -> stmt NEWLINE cmpdstmt .)


state 155

    (23) stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .

    NEWLINE         reduce using rule 23 (stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .)
    $end            reduce using rule 23 (stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .)


state 156

    (75) optelse -> ATHAWA NEWLINE . cmpdstmt
    (72) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (73) cmpdstmt -> .
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER HATAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . IDENTIFIER LGPARA exp RGPARA incrementsign ASSIGNMENT exp
    (23) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . exp CHOTI NEWLINE cmpdstmt TICHO
    (26) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (27) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (28) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (29) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (30) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (31) stmt -> . exp PATHAU
    (32) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (66) dynamString -> . exp COMMA dynamString
    (67) dynamString -> . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    DIYE            reduce using rule 73 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 11
    BAHIRA          shift and go to state 6
    ARKO            shift and go to state 7
    YEDI            shift and go to state 2
    SABEI           shift and go to state 12
    JABA            shift and go to state 10
    KAAM            shift and go to state 8
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    dynamString                    shift and go to state 4
    cmpdstmt                       shift and go to state 166
    stmt                           shift and go to state 113
    exp                            shift and go to state 18

state 157

    (74) optelse -> ATHAWA condition . NEWLINE cmpdstmt optelse
    (68) condition -> condition . RA condition
    (69) condition -> condition . WA condition

    NEWLINE         shift and go to state 167
    RA              shift and go to state 73
    WA              shift and go to state 71


state 158

    (64) exp -> LPARA exp RPARA QUESTION exp COLON . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 168

state 159

    (29) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE . cmpdstmt MAKA
    (72) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (73) cmpdstmt -> .
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER HATAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . IDENTIFIER LGPARA exp RGPARA incrementsign ASSIGNMENT exp
    (23) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . exp CHOTI NEWLINE cmpdstmt TICHO
    (26) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (27) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (28) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (29) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (30) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (31) stmt -> . exp PATHAU
    (32) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (66) dynamString -> . exp COMMA dynamString
    (67) dynamString -> . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    MAKA            reduce using rule 73 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 11
    BAHIRA          shift and go to state 6
    ARKO            shift and go to state 7
    YEDI            shift and go to state 2
    SABEI           shift and go to state 12
    JABA            shift and go to state 10
    KAAM            shift and go to state 8
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    dynamString                    shift and go to state 4
    cmpdstmt                       shift and go to state 169
    stmt                           shift and go to state 113
    exp                            shift and go to state 18

state 160

    (33) variableArgs -> IDENTIFIER COMMA variableArgs .

    RPARA           reduce using rule 33 (variableArgs -> IDENTIFIER COMMA variableArgs .)


state 161

    (27) stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .

    NEWLINE         reduce using rule 27 (stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .)
    $end            reduce using rule 27 (stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .)


state 162

    (61) exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .

    EQ              reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    LE              reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    GE              reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    NE              reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    LT              reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    GT              reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    PLUS            reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    MINUS           reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    TIMES           reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    DIVIDE          reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    POWER           reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    MODULUS         reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    RA              reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    WA              reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    CHOTI           reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    PATHAU          reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    COMMA           reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    LEKHA           reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    RGPARA          reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    BHAE            reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    NABHAE          reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    RPARA           reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    CHHA            reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    CHHAINA         reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    COLON           reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    NEWLINE         reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    $end            reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    DEKHI           reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)
    SEMICOLON       reduce using rule 61 (exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA .)


state 163

    (32) stmt -> IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    NEWLINE         reduce using rule 32 (stmt -> IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp .)
    $end            reduce using rule 32 (stmt -> IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp .)
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50


state 164

    (22) stmt -> IDENTIFIER LGPARA exp RGPARA incrementsign ASSIGNMENT . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 170

state 165

    (24) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp . SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (26) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp . NEWLINE cmpdstmt BAISA
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    SEMICOLON       shift and go to state 171
    NEWLINE         shift and go to state 172
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50


state 166

    (75) optelse -> ATHAWA NEWLINE cmpdstmt .

    DIYE            reduce using rule 75 (optelse -> ATHAWA NEWLINE cmpdstmt .)


state 167

    (74) optelse -> ATHAWA condition NEWLINE . cmpdstmt optelse
    (72) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (73) cmpdstmt -> .
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER HATAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . IDENTIFIER LGPARA exp RGPARA incrementsign ASSIGNMENT exp
    (23) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . exp CHOTI NEWLINE cmpdstmt TICHO
    (26) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (27) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (28) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (29) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (30) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (31) stmt -> . exp PATHAU
    (32) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (66) dynamString -> . exp COMMA dynamString
    (67) dynamString -> . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    ATHAWA          reduce using rule 73 (cmpdstmt -> .)
    DIYE            reduce using rule 73 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 11
    BAHIRA          shift and go to state 6
    ARKO            shift and go to state 7
    YEDI            shift and go to state 2
    SABEI           shift and go to state 12
    JABA            shift and go to state 10
    KAAM            shift and go to state 8
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    stmt                           shift and go to state 113
    dynamString                    shift and go to state 4
    cmpdstmt                       shift and go to state 173
    exp                            shift and go to state 18

state 168

    (64) exp -> LPARA exp RPARA QUESTION exp COLON exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    CHOTI           reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    PATHAU          reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    COMMA           reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    LEKHA           reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    RGPARA          reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    BHAE            reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    NABHAE          reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    RPARA           reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    CHHA            reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    CHHAINA         reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    COLON           reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    NEWLINE         reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    $end            reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    DEKHI           reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    SEMICOLON       reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50

  ! EQ              [ reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! LE              [ reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! GE              [ reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! NE              [ reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! LT              [ reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! GT              [ reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! PLUS            [ reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! MINUS           [ reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! TIMES           [ reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! DIVIDE          [ reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! POWER           [ reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! MODULUS         [ reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! RA              [ reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! WA              [ reduce using rule 64 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]


state 169

    (29) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt . MAKA

    MAKA            shift and go to state 174


state 170

    (22) stmt -> IDENTIFIER LGPARA exp RGPARA incrementsign ASSIGNMENT exp .
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    NEWLINE         reduce using rule 22 (stmt -> IDENTIFIER LGPARA exp RGPARA incrementsign ASSIGNMENT exp .)
    $end            reduce using rule 22 (stmt -> IDENTIFIER LGPARA exp RGPARA incrementsign ASSIGNMENT exp .)
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50


state 171

    (24) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON . sign exp NEWLINE cmpdstmt BAISA
    (77) sign -> . PLUS
    (78) sign -> . MINUS

    PLUS            shift and go to state 41
    MINUS           shift and go to state 38

    sign                           shift and go to state 175

state 172

    (26) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE . cmpdstmt BAISA
    (72) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (73) cmpdstmt -> .
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER HATAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . IDENTIFIER LGPARA exp RGPARA incrementsign ASSIGNMENT exp
    (23) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . exp CHOTI NEWLINE cmpdstmt TICHO
    (26) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (27) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (28) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (29) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (30) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (31) stmt -> . exp PATHAU
    (32) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (66) dynamString -> . exp COMMA dynamString
    (67) dynamString -> . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    BAISA           reduce using rule 73 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 11
    BAHIRA          shift and go to state 6
    ARKO            shift and go to state 7
    YEDI            shift and go to state 2
    SABEI           shift and go to state 12
    JABA            shift and go to state 10
    KAAM            shift and go to state 8
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    dynamString                    shift and go to state 4
    cmpdstmt                       shift and go to state 176
    stmt                           shift and go to state 113
    exp                            shift and go to state 18

state 173

    (74) optelse -> ATHAWA condition NEWLINE cmpdstmt . optelse
    (74) optelse -> . ATHAWA condition NEWLINE cmpdstmt optelse
    (75) optelse -> . ATHAWA NEWLINE cmpdstmt
    (76) optelse -> .

    ATHAWA          shift and go to state 138
    DIYE            reduce using rule 76 (optelse -> .)

    optelse                        shift and go to state 177

state 174

    (29) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA .

    NEWLINE         reduce using rule 29 (stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA .)
    $end            reduce using rule 29 (stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA .)


state 175

    (24) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign . exp NEWLINE cmpdstmt BAISA
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 21
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    exp                            shift and go to state 178

state 176

    (26) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt . BAISA

    BAISA           shift and go to state 179


state 177

    (74) optelse -> ATHAWA condition NEWLINE cmpdstmt optelse .

    DIYE            reduce using rule 74 (optelse -> ATHAWA condition NEWLINE cmpdstmt optelse .)


state 178

    (24) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp . NEWLINE cmpdstmt BAISA
    (39) exp -> exp . EQ exp
    (40) exp -> exp . LE exp
    (41) exp -> exp . GE exp
    (42) exp -> exp . NE exp
    (43) exp -> exp . LT exp
    (44) exp -> exp . GT exp
    (45) exp -> exp . PLUS exp
    (46) exp -> exp . MINUS exp
    (47) exp -> exp . TIMES exp
    (48) exp -> exp . DIVIDE exp
    (49) exp -> exp . POWER exp
    (50) exp -> exp . MODULUS exp
    (51) exp -> exp . RA exp
    (52) exp -> exp . WA exp

    NEWLINE         shift and go to state 180
    EQ              shift and go to state 54
    LE              shift and go to state 52
    GE              shift and go to state 64
    NE              shift and go to state 55
    LT              shift and go to state 56
    GT              shift and go to state 60
    PLUS            shift and go to state 59
    MINUS           shift and go to state 51
    TIMES           shift and go to state 62
    DIVIDE          shift and go to state 61
    POWER           shift and go to state 53
    MODULUS         shift and go to state 66
    RA              shift and go to state 58
    WA              shift and go to state 50


state 179

    (26) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA .

    NEWLINE         reduce using rule 26 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA .)
    $end            reduce using rule 26 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA .)


state 180

    (24) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE . cmpdstmt BAISA
    (72) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (73) cmpdstmt -> .
    (6) stmt -> . IDENTIFIER ASSIGNMENT exp
    (7) stmt -> . dynamString LEKHA
    (8) stmt -> . dynamString LEKHA SEMICOLON
    (9) stmt -> . BAHIRA
    (10) stmt -> . ARKO
    (11) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER MA dynamString LEKHA
    (13) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (14) stmt -> . IDENTIFIER BANDAGARA
    (15) stmt -> . IDENTIFIER DEKHAU
    (16) stmt -> . IDENTIFIER HATAU
    (17) stmt -> . IDENTIFIER BANAU
    (18) stmt -> . IDENTIFIER METAU
    (19) stmt -> . IDENTIFIER MA IDENTIFIER KORA variableexp
    (20) stmt -> . IDENTIFIER LEU
    (21) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (22) stmt -> . IDENTIFIER LGPARA exp RGPARA incrementsign ASSIGNMENT exp
    (23) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (24) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (25) stmt -> . exp CHOTI NEWLINE cmpdstmt TICHO
    (26) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (27) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (28) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (29) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (30) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (31) stmt -> . exp PATHAU
    (32) stmt -> . IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp
    (66) dynamString -> . exp COMMA dynamString
    (67) dynamString -> . exp
    (39) exp -> . exp EQ exp
    (40) exp -> . exp LE exp
    (41) exp -> . exp GE exp
    (42) exp -> . exp NE exp
    (43) exp -> . exp LT exp
    (44) exp -> . exp GT exp
    (45) exp -> . exp PLUS exp
    (46) exp -> . exp MINUS exp
    (47) exp -> . exp TIMES exp
    (48) exp -> . exp DIVIDE exp
    (49) exp -> . exp POWER exp
    (50) exp -> . exp MODULUS exp
    (51) exp -> . exp RA exp
    (52) exp -> . exp WA exp
    (53) exp -> . IDENTIFIER
    (54) exp -> . STRING
    (55) exp -> . NUMBER
    (56) exp -> . MINUS NUMBER
    (57) exp -> . SUNYA
    (58) exp -> . LGPARA variableexp RGPARA
    (59) exp -> . IDENTIFIER LGPARA exp RGPARA
    (60) exp -> . LPARA exp RPARA
    (61) exp -> . IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA
    (64) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (65) exp -> . IDENTIFIER LPARA variableexp RPARA

    BAISA           reduce using rule 73 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 11
    BAHIRA          shift and go to state 6
    ARKO            shift and go to state 7
    YEDI            shift and go to state 2
    SABEI           shift and go to state 12
    JABA            shift and go to state 10
    KAAM            shift and go to state 8
    STRING          shift and go to state 19
    NUMBER          shift and go to state 13
    MINUS           shift and go to state 5
    SUNYA           shift and go to state 16
    LGPARA          shift and go to state 1
    LPARA           shift and go to state 3

    dynamString                    shift and go to state 4
    cmpdstmt                       shift and go to state 181
    stmt                           shift and go to state 113
    exp                            shift and go to state 18

state 181

    (24) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt . BAISA

    BAISA           shift and go to state 182


state 182

    (24) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .

    NEWLINE         reduce using rule 24 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .)
    $end            reduce using rule 24 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQ in state 93 resolved as shift
WARNING: shift/reduce conflict for LE in state 93 resolved as shift
WARNING: shift/reduce conflict for GE in state 93 resolved as shift
WARNING: shift/reduce conflict for NE in state 93 resolved as shift
WARNING: shift/reduce conflict for LT in state 93 resolved as shift
WARNING: shift/reduce conflict for GT in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 93 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 93 resolved as shift
WARNING: shift/reduce conflict for POWER in state 93 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 93 resolved as shift
WARNING: shift/reduce conflict for RA in state 93 resolved as shift
WARNING: shift/reduce conflict for WA in state 93 resolved as shift
WARNING: shift/reduce conflict for EQ in state 98 resolved as shift
WARNING: shift/reduce conflict for LE in state 98 resolved as shift
WARNING: shift/reduce conflict for GE in state 98 resolved as shift
WARNING: shift/reduce conflict for NE in state 98 resolved as shift
WARNING: shift/reduce conflict for LT in state 98 resolved as shift
WARNING: shift/reduce conflict for GT in state 98 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 98 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 98 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 98 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 98 resolved as shift
WARNING: shift/reduce conflict for POWER in state 98 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 98 resolved as shift
WARNING: shift/reduce conflict for RA in state 98 resolved as shift
WARNING: shift/reduce conflict for WA in state 98 resolved as shift
WARNING: shift/reduce conflict for EQ in state 101 resolved as shift
WARNING: shift/reduce conflict for LE in state 101 resolved as shift
WARNING: shift/reduce conflict for GE in state 101 resolved as shift
WARNING: shift/reduce conflict for NE in state 101 resolved as shift
WARNING: shift/reduce conflict for LT in state 101 resolved as shift
WARNING: shift/reduce conflict for GT in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 101 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 101 resolved as shift
WARNING: shift/reduce conflict for POWER in state 101 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 101 resolved as shift
WARNING: shift/reduce conflict for RA in state 101 resolved as shift
WARNING: shift/reduce conflict for WA in state 101 resolved as shift
WARNING: shift/reduce conflict for EQ in state 108 resolved as shift
WARNING: shift/reduce conflict for LE in state 108 resolved as shift
WARNING: shift/reduce conflict for GE in state 108 resolved as shift
WARNING: shift/reduce conflict for NE in state 108 resolved as shift
WARNING: shift/reduce conflict for LT in state 108 resolved as shift
WARNING: shift/reduce conflict for GT in state 108 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 108 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 108 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 108 resolved as shift
WARNING: shift/reduce conflict for POWER in state 108 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 108 resolved as shift
WARNING: shift/reduce conflict for RA in state 108 resolved as shift
WARNING: shift/reduce conflict for WA in state 108 resolved as shift
WARNING: shift/reduce conflict for RA in state 112 resolved as shift
WARNING: shift/reduce conflict for WA in state 112 resolved as shift
WARNING: shift/reduce conflict for RA in state 115 resolved as shift
WARNING: shift/reduce conflict for WA in state 115 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 125 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 125 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 125 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 125 resolved as shift
WARNING: shift/reduce conflict for RA in state 142 resolved as shift
WARNING: shift/reduce conflict for WA in state 142 resolved as shift
WARNING: shift/reduce conflict for RA in state 144 resolved as shift
WARNING: shift/reduce conflict for WA in state 144 resolved as shift
WARNING: shift/reduce conflict for EQ in state 168 resolved as shift
WARNING: shift/reduce conflict for LE in state 168 resolved as shift
WARNING: shift/reduce conflict for GE in state 168 resolved as shift
WARNING: shift/reduce conflict for NE in state 168 resolved as shift
WARNING: shift/reduce conflict for LT in state 168 resolved as shift
WARNING: shift/reduce conflict for GT in state 168 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 168 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 168 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 168 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 168 resolved as shift
WARNING: shift/reduce conflict for POWER in state 168 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 168 resolved as shift
WARNING: shift/reduce conflict for RA in state 168 resolved as shift
WARNING: shift/reduce conflict for WA in state 168 resolved as shift
WARNING: reduce/reduce conflict in state 149 resolved using rule (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA)
WARNING: rejected rule (exp -> LGPARA variableexp RGPARA) in state 149
