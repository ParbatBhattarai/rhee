Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> N
Rule 1     N -> element NEWLINE N
Rule 2     N -> element
Rule 3     N -> <empty>
Rule 4     element -> stmt
Rule 5     stmt -> IDENTIFIER ASSIGNMENT exp
Rule 6     stmt -> dynamString LEKHA
Rule 7     stmt -> dynamString LEKHA SEMICOLON
Rule 8     stmt -> IDENTIFIER LEU
Rule 9     stmt -> IDENTIFIER incrementsign ASSIGNMENT exp
Rule 10    stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE
Rule 11    stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
Rule 12    stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
Rule 13    stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
Rule 14    stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
Rule 15    stmt -> IDENTIFIER LPARA variableexp RPARA
Rule 16    stmt -> exp PATHAU
Rule 17    stmt -> NEWLINE
Rule 18    variableArgs -> IDENTIFIER COMMA variableArgs
Rule 19    variableArgs -> IDENTIFIER
Rule 20    variableArgs -> <empty>
Rule 21    variableexp -> exp COMMA variableexp
Rule 22    variableexp -> exp
Rule 23    variableexp -> <empty>
Rule 24    exp -> exp EQ exp
Rule 25    exp -> exp LE exp
Rule 26    exp -> exp GE exp
Rule 27    exp -> exp NE exp
Rule 28    exp -> exp LT exp
Rule 29    exp -> exp GT exp
Rule 30    exp -> exp PLUS exp
Rule 31    exp -> exp MINUS exp
Rule 32    exp -> exp TIMES exp
Rule 33    exp -> exp DIVIDE exp
Rule 34    exp -> exp POWER exp
Rule 35    exp -> exp RA exp
Rule 36    exp -> exp WA exp
Rule 37    exp -> IDENTIFIER
Rule 38    exp -> STRING
Rule 39    exp -> NUMBER
Rule 40    exp -> LGPARA variableexp RGPARA
Rule 41    exp -> IDENTIFIER LGPARA exp RGPARA
Rule 42    exp -> LPARA exp RPARA
Rule 43    exp -> LPARA exp RPARA QUESTION exp COLON exp
Rule 44    exp -> IDENTIFIER LPARA variableexp RPARA
Rule 45    dynamString -> exp COMMA dynamString
Rule 46    dynamString -> exp
Rule 47    condition -> condition RA condition
Rule 48    condition -> condition WA condition
Rule 49    condition -> exp BHAE
Rule 50    condition -> exp NABHAE
Rule 51    cmpdstmt -> stmt NEWLINE cmpdstmt
Rule 52    cmpdstmt -> <empty>
Rule 53    optelse -> ATHAWA condition NEWLINE cmpdstmt optelse
Rule 54    optelse -> ATHAWA NEWLINE cmpdstmt
Rule 55    optelse -> <empty>
Rule 56    sign -> PLUS
Rule 57    sign -> MINUS
Rule 58    incrementsign -> sign
Rule 59    incrementsign -> TIMES
Rule 60    incrementsign -> DIVIDE
Rule 61    whilecond -> whilecond RA whilecond
Rule 62    whilecond -> whilecond WA whilecond
Rule 63    whilecond -> exp CHHA
Rule 64    whilecond -> exp CHHAINA

Terminals, with rules where they appear

ASSIGNMENT           : 5 9 11 13
ATHAWA               : 53 54
BAISA                : 11
BAJA                 : 12
BHAE                 : 49
CHHA                 : 63
CHHAINA              : 64
COLON                : 43
COMMA                : 18 21 45
DEKHI                : 11
DIVIDE               : 33 60
DIYE                 : 10
EQ                   : 24
GE                   : 26
GT                   : 29
IDENTIFIER           : 5 8 9 11 13 14 15 18 19 37 41 44
JABA                 : 12
KAAM                 : 14
LE                   : 25
LEKHA                : 6 7
LEU                  : 8
LGPARA               : 13 40 41
LPARA                : 14 15 42 43 44
LT                   : 28
MAKA                 : 14
MINUS                : 31 57
NABHAE               : 50
NE                   : 27
NEWLINE              : 1 10 11 12 14 17 51 53 54
NUMBER               : 39
PATHAU               : 16
PLUS                 : 30 56
POWER                : 34
QUESTION             : 43
RA                   : 35 47 61
RGPARA               : 13 40 41
RPARA                : 14 15 42 43 44
SABEI                : 11
SAMMA                : 12
SEMICOLON            : 7 11
STRING               : 38
TIMES                : 32 59
WA                   : 36 48 62
YEDI                 : 10
error                : 

Nonterminals, with rules where they appear

N                    : 1 0
cmpdstmt             : 10 11 12 14 51 53 54
condition            : 10 47 47 48 48 53
dynamString          : 6 7 45
element              : 1 2
exp                  : 5 9 11 11 11 16 21 22 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 41 42 43 43 43 45 46 49 50 63 64
incrementsign        : 9
optelse              : 10 53
sign                 : 11 58
stmt                 : 4 51
variableArgs         : 14 18
variableexp          : 13 15 21 40 44
whilecond            : 12 61 61 62 62

Parsing method: LALR

state 0

    (0) S' -> . N
    (1) N -> . element NEWLINE N
    (2) N -> . element
    (3) N -> .
    (4) element -> . stmt
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (14) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (15) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (16) stmt -> . exp PATHAU
    (17) stmt -> . NEWLINE
    (45) dynamString -> . exp COMMA dynamString
    (46) dynamString -> . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    $end            reduce using rule 3 (N -> .)
    IDENTIFIER      shift and go to state 8
    YEDI            shift and go to state 1
    SABEI           shift and go to state 9
    JABA            shift and go to state 4
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    stmt                           shift and go to state 10
    dynamString                    shift and go to state 13
    N                              shift and go to state 11
    exp                            shift and go to state 15
    element                        shift and go to state 14

state 1

    (10) stmt -> YEDI . condition NEWLINE cmpdstmt optelse DIYE
    (47) condition -> . condition RA condition
    (48) condition -> . condition WA condition
    (49) condition -> . exp BHAE
    (50) condition -> . exp NABHAE
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 18
    condition                      shift and go to state 17

state 2

    (42) exp -> LPARA . exp RPARA
    (43) exp -> LPARA . exp RPARA QUESTION exp COLON exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 19

state 3

    (39) exp -> NUMBER .

    EQ              reduce using rule 39 (exp -> NUMBER .)
    LE              reduce using rule 39 (exp -> NUMBER .)
    GE              reduce using rule 39 (exp -> NUMBER .)
    NE              reduce using rule 39 (exp -> NUMBER .)
    LT              reduce using rule 39 (exp -> NUMBER .)
    GT              reduce using rule 39 (exp -> NUMBER .)
    PLUS            reduce using rule 39 (exp -> NUMBER .)
    MINUS           reduce using rule 39 (exp -> NUMBER .)
    TIMES           reduce using rule 39 (exp -> NUMBER .)
    DIVIDE          reduce using rule 39 (exp -> NUMBER .)
    POWER           reduce using rule 39 (exp -> NUMBER .)
    RA              reduce using rule 39 (exp -> NUMBER .)
    WA              reduce using rule 39 (exp -> NUMBER .)
    PATHAU          reduce using rule 39 (exp -> NUMBER .)
    COMMA           reduce using rule 39 (exp -> NUMBER .)
    LEKHA           reduce using rule 39 (exp -> NUMBER .)
    BHAE            reduce using rule 39 (exp -> NUMBER .)
    NABHAE          reduce using rule 39 (exp -> NUMBER .)
    RPARA           reduce using rule 39 (exp -> NUMBER .)
    RGPARA          reduce using rule 39 (exp -> NUMBER .)
    CHHA            reduce using rule 39 (exp -> NUMBER .)
    CHHAINA         reduce using rule 39 (exp -> NUMBER .)
    NEWLINE         reduce using rule 39 (exp -> NUMBER .)
    $end            reduce using rule 39 (exp -> NUMBER .)
    DEKHI           reduce using rule 39 (exp -> NUMBER .)
    COLON           reduce using rule 39 (exp -> NUMBER .)
    SEMICOLON       reduce using rule 39 (exp -> NUMBER .)


state 4

    (12) stmt -> JABA . SAMMA whilecond NEWLINE cmpdstmt BAJA

    SAMMA           shift and go to state 20


state 5

    (38) exp -> STRING .

    EQ              reduce using rule 38 (exp -> STRING .)
    LE              reduce using rule 38 (exp -> STRING .)
    GE              reduce using rule 38 (exp -> STRING .)
    NE              reduce using rule 38 (exp -> STRING .)
    LT              reduce using rule 38 (exp -> STRING .)
    GT              reduce using rule 38 (exp -> STRING .)
    PLUS            reduce using rule 38 (exp -> STRING .)
    MINUS           reduce using rule 38 (exp -> STRING .)
    TIMES           reduce using rule 38 (exp -> STRING .)
    DIVIDE          reduce using rule 38 (exp -> STRING .)
    POWER           reduce using rule 38 (exp -> STRING .)
    RA              reduce using rule 38 (exp -> STRING .)
    WA              reduce using rule 38 (exp -> STRING .)
    PATHAU          reduce using rule 38 (exp -> STRING .)
    COMMA           reduce using rule 38 (exp -> STRING .)
    LEKHA           reduce using rule 38 (exp -> STRING .)
    BHAE            reduce using rule 38 (exp -> STRING .)
    NABHAE          reduce using rule 38 (exp -> STRING .)
    RPARA           reduce using rule 38 (exp -> STRING .)
    RGPARA          reduce using rule 38 (exp -> STRING .)
    CHHA            reduce using rule 38 (exp -> STRING .)
    CHHAINA         reduce using rule 38 (exp -> STRING .)
    NEWLINE         reduce using rule 38 (exp -> STRING .)
    $end            reduce using rule 38 (exp -> STRING .)
    DEKHI           reduce using rule 38 (exp -> STRING .)
    COLON           reduce using rule 38 (exp -> STRING .)
    SEMICOLON       reduce using rule 38 (exp -> STRING .)


state 6

    (14) stmt -> KAAM . IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA

    IDENTIFIER      shift and go to state 21


state 7

    (17) stmt -> NEWLINE .

    NEWLINE         reduce using rule 17 (stmt -> NEWLINE .)
    $end            reduce using rule 17 (stmt -> NEWLINE .)


state 8

    (5) stmt -> IDENTIFIER . ASSIGNMENT exp
    (8) stmt -> IDENTIFIER . LEU
    (9) stmt -> IDENTIFIER . incrementsign ASSIGNMENT exp
    (13) stmt -> IDENTIFIER . ASSIGNMENT LGPARA variableexp RGPARA
    (15) stmt -> IDENTIFIER . LPARA variableexp RPARA
    (37) exp -> IDENTIFIER .
    (41) exp -> IDENTIFIER . LGPARA exp RGPARA
    (44) exp -> IDENTIFIER . LPARA variableexp RPARA
    (58) incrementsign -> . sign
    (59) incrementsign -> . TIMES
    (60) incrementsign -> . DIVIDE
    (56) sign -> . PLUS
    (57) sign -> . MINUS

    ASSIGNMENT      shift and go to state 24
    LEU             shift and go to state 28
    LPARA           shift and go to state 25
    PATHAU          reduce using rule 37 (exp -> IDENTIFIER .)
    COMMA           reduce using rule 37 (exp -> IDENTIFIER .)
    EQ              reduce using rule 37 (exp -> IDENTIFIER .)
    LE              reduce using rule 37 (exp -> IDENTIFIER .)
    GE              reduce using rule 37 (exp -> IDENTIFIER .)
    NE              reduce using rule 37 (exp -> IDENTIFIER .)
    LT              reduce using rule 37 (exp -> IDENTIFIER .)
    GT              reduce using rule 37 (exp -> IDENTIFIER .)
    POWER           reduce using rule 37 (exp -> IDENTIFIER .)
    RA              reduce using rule 37 (exp -> IDENTIFIER .)
    WA              reduce using rule 37 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 37 (exp -> IDENTIFIER .)
    LGPARA          shift and go to state 22
    TIMES           shift and go to state 23
    DIVIDE          shift and go to state 31
    PLUS            shift and go to state 27
    MINUS           shift and go to state 30

  ! PLUS            [ reduce using rule 37 (exp -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 37 (exp -> IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 37 (exp -> IDENTIFIER .) ]
  ! DIVIDE          [ reduce using rule 37 (exp -> IDENTIFIER .) ]

    incrementsign                  shift and go to state 29
    sign                           shift and go to state 26

state 9

    (11) stmt -> SABEI . IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA

    IDENTIFIER      shift and go to state 32


state 10

    (4) element -> stmt .

    NEWLINE         reduce using rule 4 (element -> stmt .)
    $end            reduce using rule 4 (element -> stmt .)


state 11

    (0) S' -> N .



state 12

    (40) exp -> LGPARA . variableexp RGPARA
    (21) variableexp -> . exp COMMA variableexp
    (22) variableexp -> . exp
    (23) variableexp -> .
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    RGPARA          reduce using rule 23 (variableexp -> .)
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 34
    variableexp                    shift and go to state 33

state 13

    (6) stmt -> dynamString . LEKHA
    (7) stmt -> dynamString . LEKHA SEMICOLON

    LEKHA           shift and go to state 35


state 14

    (1) N -> element . NEWLINE N
    (2) N -> element .

    NEWLINE         shift and go to state 36
    $end            reduce using rule 2 (N -> element .)


state 15

    (16) stmt -> exp . PATHAU
    (45) dynamString -> exp . COMMA dynamString
    (46) dynamString -> exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    PATHAU          shift and go to state 42
    COMMA           shift and go to state 45
    LEKHA           reduce using rule 46 (dynamString -> exp .)
    EQ              shift and go to state 50
    LE              shift and go to state 37
    GE              shift and go to state 43
    NE              shift and go to state 41
    LT              shift and go to state 40
    GT              shift and go to state 44
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39
    RA              shift and go to state 46
    WA              shift and go to state 48


state 16

    (37) exp -> IDENTIFIER .
    (41) exp -> IDENTIFIER . LGPARA exp RGPARA
    (44) exp -> IDENTIFIER . LPARA variableexp RPARA

    EQ              reduce using rule 37 (exp -> IDENTIFIER .)
    LE              reduce using rule 37 (exp -> IDENTIFIER .)
    GE              reduce using rule 37 (exp -> IDENTIFIER .)
    NE              reduce using rule 37 (exp -> IDENTIFIER .)
    LT              reduce using rule 37 (exp -> IDENTIFIER .)
    GT              reduce using rule 37 (exp -> IDENTIFIER .)
    PLUS            reduce using rule 37 (exp -> IDENTIFIER .)
    MINUS           reduce using rule 37 (exp -> IDENTIFIER .)
    TIMES           reduce using rule 37 (exp -> IDENTIFIER .)
    DIVIDE          reduce using rule 37 (exp -> IDENTIFIER .)
    POWER           reduce using rule 37 (exp -> IDENTIFIER .)
    RA              reduce using rule 37 (exp -> IDENTIFIER .)
    WA              reduce using rule 37 (exp -> IDENTIFIER .)
    PATHAU          reduce using rule 37 (exp -> IDENTIFIER .)
    COMMA           reduce using rule 37 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 37 (exp -> IDENTIFIER .)
    BHAE            reduce using rule 37 (exp -> IDENTIFIER .)
    NABHAE          reduce using rule 37 (exp -> IDENTIFIER .)
    RPARA           reduce using rule 37 (exp -> IDENTIFIER .)
    RGPARA          reduce using rule 37 (exp -> IDENTIFIER .)
    CHHA            reduce using rule 37 (exp -> IDENTIFIER .)
    CHHAINA         reduce using rule 37 (exp -> IDENTIFIER .)
    NEWLINE         reduce using rule 37 (exp -> IDENTIFIER .)
    $end            reduce using rule 37 (exp -> IDENTIFIER .)
    DEKHI           reduce using rule 37 (exp -> IDENTIFIER .)
    COLON           reduce using rule 37 (exp -> IDENTIFIER .)
    SEMICOLON       reduce using rule 37 (exp -> IDENTIFIER .)
    LGPARA          shift and go to state 22
    LPARA           shift and go to state 52


state 17

    (10) stmt -> YEDI condition . NEWLINE cmpdstmt optelse DIYE
    (47) condition -> condition . RA condition
    (48) condition -> condition . WA condition

    NEWLINE         shift and go to state 54
    RA              shift and go to state 55
    WA              shift and go to state 53


state 18

    (49) condition -> exp . BHAE
    (50) condition -> exp . NABHAE
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    BHAE            shift and go to state 56
    NABHAE          shift and go to state 57
    EQ              shift and go to state 50
    LE              shift and go to state 37
    GE              shift and go to state 43
    NE              shift and go to state 41
    LT              shift and go to state 40
    GT              shift and go to state 44
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39
    RA              shift and go to state 46
    WA              shift and go to state 48


state 19

    (42) exp -> LPARA exp . RPARA
    (43) exp -> LPARA exp . RPARA QUESTION exp COLON exp
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    RPARA           shift and go to state 58
    EQ              shift and go to state 50
    LE              shift and go to state 37
    GE              shift and go to state 43
    NE              shift and go to state 41
    LT              shift and go to state 40
    GT              shift and go to state 44
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39
    RA              shift and go to state 46
    WA              shift and go to state 48


state 20

    (12) stmt -> JABA SAMMA . whilecond NEWLINE cmpdstmt BAJA
    (61) whilecond -> . whilecond RA whilecond
    (62) whilecond -> . whilecond WA whilecond
    (63) whilecond -> . exp CHHA
    (64) whilecond -> . exp CHHAINA
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 60
    whilecond                      shift and go to state 59

state 21

    (14) stmt -> KAAM IDENTIFIER . LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA

    LPARA           shift and go to state 61


state 22

    (41) exp -> IDENTIFIER LGPARA . exp RGPARA
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 62

state 23

    (59) incrementsign -> TIMES .

    ASSIGNMENT      reduce using rule 59 (incrementsign -> TIMES .)


state 24

    (5) stmt -> IDENTIFIER ASSIGNMENT . exp
    (13) stmt -> IDENTIFIER ASSIGNMENT . LGPARA variableexp RGPARA
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    LGPARA          shift and go to state 63
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 64

state 25

    (15) stmt -> IDENTIFIER LPARA . variableexp RPARA
    (44) exp -> IDENTIFIER LPARA . variableexp RPARA
    (21) variableexp -> . exp COMMA variableexp
    (22) variableexp -> . exp
    (23) variableexp -> .
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    RPARA           reduce using rule 23 (variableexp -> .)
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 34
    variableexp                    shift and go to state 65

state 26

    (58) incrementsign -> sign .

    ASSIGNMENT      reduce using rule 58 (incrementsign -> sign .)


state 27

    (56) sign -> PLUS .

    IDENTIFIER      reduce using rule 56 (sign -> PLUS .)
    STRING          reduce using rule 56 (sign -> PLUS .)
    NUMBER          reduce using rule 56 (sign -> PLUS .)
    LGPARA          reduce using rule 56 (sign -> PLUS .)
    LPARA           reduce using rule 56 (sign -> PLUS .)
    ASSIGNMENT      reduce using rule 56 (sign -> PLUS .)


state 28

    (8) stmt -> IDENTIFIER LEU .

    NEWLINE         reduce using rule 8 (stmt -> IDENTIFIER LEU .)
    $end            reduce using rule 8 (stmt -> IDENTIFIER LEU .)


state 29

    (9) stmt -> IDENTIFIER incrementsign . ASSIGNMENT exp

    ASSIGNMENT      shift and go to state 66


state 30

    (57) sign -> MINUS .

    IDENTIFIER      reduce using rule 57 (sign -> MINUS .)
    STRING          reduce using rule 57 (sign -> MINUS .)
    NUMBER          reduce using rule 57 (sign -> MINUS .)
    LGPARA          reduce using rule 57 (sign -> MINUS .)
    LPARA           reduce using rule 57 (sign -> MINUS .)
    ASSIGNMENT      reduce using rule 57 (sign -> MINUS .)


state 31

    (60) incrementsign -> DIVIDE .

    ASSIGNMENT      reduce using rule 60 (incrementsign -> DIVIDE .)


state 32

    (11) stmt -> SABEI IDENTIFIER . ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA

    ASSIGNMENT      shift and go to state 67


state 33

    (40) exp -> LGPARA variableexp . RGPARA

    RGPARA          shift and go to state 68


state 34

    (21) variableexp -> exp . COMMA variableexp
    (22) variableexp -> exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    COMMA           shift and go to state 69
    RGPARA          reduce using rule 22 (variableexp -> exp .)
    RPARA           reduce using rule 22 (variableexp -> exp .)
    EQ              shift and go to state 50
    LE              shift and go to state 37
    GE              shift and go to state 43
    NE              shift and go to state 41
    LT              shift and go to state 40
    GT              shift and go to state 44
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39
    RA              shift and go to state 46
    WA              shift and go to state 48


state 35

    (6) stmt -> dynamString LEKHA .
    (7) stmt -> dynamString LEKHA . SEMICOLON

    NEWLINE         reduce using rule 6 (stmt -> dynamString LEKHA .)
    $end            reduce using rule 6 (stmt -> dynamString LEKHA .)
    SEMICOLON       shift and go to state 70


state 36

    (1) N -> element NEWLINE . N
    (1) N -> . element NEWLINE N
    (2) N -> . element
    (3) N -> .
    (4) element -> . stmt
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (14) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (15) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (16) stmt -> . exp PATHAU
    (17) stmt -> . NEWLINE
    (45) dynamString -> . exp COMMA dynamString
    (46) dynamString -> . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    $end            reduce using rule 3 (N -> .)
    IDENTIFIER      shift and go to state 8
    YEDI            shift and go to state 1
    SABEI           shift and go to state 9
    JABA            shift and go to state 4
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    stmt                           shift and go to state 10
    dynamString                    shift and go to state 13
    exp                            shift and go to state 15
    element                        shift and go to state 14
    N                              shift and go to state 71

state 37

    (25) exp -> exp LE . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 72

state 38

    (33) exp -> exp DIVIDE . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 73

state 39

    (34) exp -> exp POWER . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 74

state 40

    (28) exp -> exp LT . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 75

state 41

    (27) exp -> exp NE . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 76

state 42

    (16) stmt -> exp PATHAU .

    NEWLINE         reduce using rule 16 (stmt -> exp PATHAU .)
    $end            reduce using rule 16 (stmt -> exp PATHAU .)


state 43

    (26) exp -> exp GE . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 77

state 44

    (29) exp -> exp GT . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 78

state 45

    (45) dynamString -> exp COMMA . dynamString
    (45) dynamString -> . exp COMMA dynamString
    (46) dynamString -> . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 80
    dynamString                    shift and go to state 79

state 46

    (35) exp -> exp RA . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 81

state 47

    (30) exp -> exp PLUS . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 82

state 48

    (36) exp -> exp WA . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 83

state 49

    (32) exp -> exp TIMES . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 84

state 50

    (24) exp -> exp EQ . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 85

state 51

    (31) exp -> exp MINUS . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 86

state 52

    (44) exp -> IDENTIFIER LPARA . variableexp RPARA
    (21) variableexp -> . exp COMMA variableexp
    (22) variableexp -> . exp
    (23) variableexp -> .
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    RPARA           reduce using rule 23 (variableexp -> .)
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 34
    variableexp                    shift and go to state 87

state 53

    (48) condition -> condition WA . condition
    (47) condition -> . condition RA condition
    (48) condition -> . condition WA condition
    (49) condition -> . exp BHAE
    (50) condition -> . exp NABHAE
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 18
    condition                      shift and go to state 88

state 54

    (10) stmt -> YEDI condition NEWLINE . cmpdstmt optelse DIYE
    (51) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (52) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (14) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (15) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (16) stmt -> . exp PATHAU
    (17) stmt -> . NEWLINE
    (45) dynamString -> . exp COMMA dynamString
    (46) dynamString -> . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    ATHAWA          reduce using rule 52 (cmpdstmt -> .)
    DIYE            reduce using rule 52 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 8
    YEDI            shift and go to state 1
    SABEI           shift and go to state 9
    JABA            shift and go to state 4
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    stmt                           shift and go to state 89
    dynamString                    shift and go to state 13
    cmpdstmt                       shift and go to state 90
    exp                            shift and go to state 15

state 55

    (47) condition -> condition RA . condition
    (47) condition -> . condition RA condition
    (48) condition -> . condition WA condition
    (49) condition -> . exp BHAE
    (50) condition -> . exp NABHAE
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 18
    condition                      shift and go to state 91

state 56

    (49) condition -> exp BHAE .

    RA              reduce using rule 49 (condition -> exp BHAE .)
    WA              reduce using rule 49 (condition -> exp BHAE .)
    NEWLINE         reduce using rule 49 (condition -> exp BHAE .)


state 57

    (50) condition -> exp NABHAE .

    RA              reduce using rule 50 (condition -> exp NABHAE .)
    WA              reduce using rule 50 (condition -> exp NABHAE .)
    NEWLINE         reduce using rule 50 (condition -> exp NABHAE .)


state 58

    (42) exp -> LPARA exp RPARA .
    (43) exp -> LPARA exp RPARA . QUESTION exp COLON exp

    EQ              reduce using rule 42 (exp -> LPARA exp RPARA .)
    LE              reduce using rule 42 (exp -> LPARA exp RPARA .)
    GE              reduce using rule 42 (exp -> LPARA exp RPARA .)
    NE              reduce using rule 42 (exp -> LPARA exp RPARA .)
    LT              reduce using rule 42 (exp -> LPARA exp RPARA .)
    GT              reduce using rule 42 (exp -> LPARA exp RPARA .)
    PLUS            reduce using rule 42 (exp -> LPARA exp RPARA .)
    MINUS           reduce using rule 42 (exp -> LPARA exp RPARA .)
    TIMES           reduce using rule 42 (exp -> LPARA exp RPARA .)
    DIVIDE          reduce using rule 42 (exp -> LPARA exp RPARA .)
    POWER           reduce using rule 42 (exp -> LPARA exp RPARA .)
    RA              reduce using rule 42 (exp -> LPARA exp RPARA .)
    WA              reduce using rule 42 (exp -> LPARA exp RPARA .)
    PATHAU          reduce using rule 42 (exp -> LPARA exp RPARA .)
    COMMA           reduce using rule 42 (exp -> LPARA exp RPARA .)
    LEKHA           reduce using rule 42 (exp -> LPARA exp RPARA .)
    BHAE            reduce using rule 42 (exp -> LPARA exp RPARA .)
    NABHAE          reduce using rule 42 (exp -> LPARA exp RPARA .)
    RPARA           reduce using rule 42 (exp -> LPARA exp RPARA .)
    RGPARA          reduce using rule 42 (exp -> LPARA exp RPARA .)
    CHHA            reduce using rule 42 (exp -> LPARA exp RPARA .)
    CHHAINA         reduce using rule 42 (exp -> LPARA exp RPARA .)
    NEWLINE         reduce using rule 42 (exp -> LPARA exp RPARA .)
    $end            reduce using rule 42 (exp -> LPARA exp RPARA .)
    DEKHI           reduce using rule 42 (exp -> LPARA exp RPARA .)
    COLON           reduce using rule 42 (exp -> LPARA exp RPARA .)
    SEMICOLON       reduce using rule 42 (exp -> LPARA exp RPARA .)
    QUESTION        shift and go to state 92


state 59

    (12) stmt -> JABA SAMMA whilecond . NEWLINE cmpdstmt BAJA
    (61) whilecond -> whilecond . RA whilecond
    (62) whilecond -> whilecond . WA whilecond

    NEWLINE         shift and go to state 94
    RA              shift and go to state 95
    WA              shift and go to state 93


state 60

    (63) whilecond -> exp . CHHA
    (64) whilecond -> exp . CHHAINA
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    CHHA            shift and go to state 96
    CHHAINA         shift and go to state 97
    EQ              shift and go to state 50
    LE              shift and go to state 37
    GE              shift and go to state 43
    NE              shift and go to state 41
    LT              shift and go to state 40
    GT              shift and go to state 44
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39
    RA              shift and go to state 46
    WA              shift and go to state 48


state 61

    (14) stmt -> KAAM IDENTIFIER LPARA . variableArgs RPARA NEWLINE cmpdstmt MAKA
    (18) variableArgs -> . IDENTIFIER COMMA variableArgs
    (19) variableArgs -> . IDENTIFIER
    (20) variableArgs -> .

    IDENTIFIER      shift and go to state 99
    RPARA           reduce using rule 20 (variableArgs -> .)

    variableArgs                   shift and go to state 98

state 62

    (41) exp -> IDENTIFIER LGPARA exp . RGPARA
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    RGPARA          shift and go to state 100
    EQ              shift and go to state 50
    LE              shift and go to state 37
    GE              shift and go to state 43
    NE              shift and go to state 41
    LT              shift and go to state 40
    GT              shift and go to state 44
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39
    RA              shift and go to state 46
    WA              shift and go to state 48


state 63

    (13) stmt -> IDENTIFIER ASSIGNMENT LGPARA . variableexp RGPARA
    (40) exp -> LGPARA . variableexp RGPARA
    (21) variableexp -> . exp COMMA variableexp
    (22) variableexp -> . exp
    (23) variableexp -> .
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    RGPARA          reduce using rule 23 (variableexp -> .)
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 34
    variableexp                    shift and go to state 101

state 64

    (5) stmt -> IDENTIFIER ASSIGNMENT exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    NEWLINE         reduce using rule 5 (stmt -> IDENTIFIER ASSIGNMENT exp .)
    $end            reduce using rule 5 (stmt -> IDENTIFIER ASSIGNMENT exp .)
    EQ              shift and go to state 50
    LE              shift and go to state 37
    GE              shift and go to state 43
    NE              shift and go to state 41
    LT              shift and go to state 40
    GT              shift and go to state 44
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39
    RA              shift and go to state 46
    WA              shift and go to state 48


state 65

    (15) stmt -> IDENTIFIER LPARA variableexp . RPARA
    (44) exp -> IDENTIFIER LPARA variableexp . RPARA

    RPARA           shift and go to state 102


state 66

    (9) stmt -> IDENTIFIER incrementsign ASSIGNMENT . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 103

state 67

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT . exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 104

state 68

    (40) exp -> LGPARA variableexp RGPARA .

    EQ              reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    LE              reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    GE              reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    NE              reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    LT              reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    GT              reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    PLUS            reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    MINUS           reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    TIMES           reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    DIVIDE          reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    POWER           reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    RA              reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    WA              reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    PATHAU          reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    COMMA           reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    LEKHA           reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    BHAE            reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    NABHAE          reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    RPARA           reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    RGPARA          reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    CHHA            reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    CHHAINA         reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    NEWLINE         reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    $end            reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    DEKHI           reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    COLON           reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    SEMICOLON       reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)


state 69

    (21) variableexp -> exp COMMA . variableexp
    (21) variableexp -> . exp COMMA variableexp
    (22) variableexp -> . exp
    (23) variableexp -> .
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    RGPARA          reduce using rule 23 (variableexp -> .)
    RPARA           reduce using rule 23 (variableexp -> .)
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    variableexp                    shift and go to state 105
    exp                            shift and go to state 34

state 70

    (7) stmt -> dynamString LEKHA SEMICOLON .

    NEWLINE         reduce using rule 7 (stmt -> dynamString LEKHA SEMICOLON .)
    $end            reduce using rule 7 (stmt -> dynamString LEKHA SEMICOLON .)


state 71

    (1) N -> element NEWLINE N .

    $end            reduce using rule 1 (N -> element NEWLINE N .)


state 72

    (25) exp -> exp LE exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    EQ              reduce using rule 25 (exp -> exp LE exp .)
    LE              reduce using rule 25 (exp -> exp LE exp .)
    GE              reduce using rule 25 (exp -> exp LE exp .)
    NE              reduce using rule 25 (exp -> exp LE exp .)
    LT              reduce using rule 25 (exp -> exp LE exp .)
    GT              reduce using rule 25 (exp -> exp LE exp .)
    RA              reduce using rule 25 (exp -> exp LE exp .)
    WA              reduce using rule 25 (exp -> exp LE exp .)
    PATHAU          reduce using rule 25 (exp -> exp LE exp .)
    COMMA           reduce using rule 25 (exp -> exp LE exp .)
    LEKHA           reduce using rule 25 (exp -> exp LE exp .)
    BHAE            reduce using rule 25 (exp -> exp LE exp .)
    NABHAE          reduce using rule 25 (exp -> exp LE exp .)
    RPARA           reduce using rule 25 (exp -> exp LE exp .)
    RGPARA          reduce using rule 25 (exp -> exp LE exp .)
    CHHA            reduce using rule 25 (exp -> exp LE exp .)
    CHHAINA         reduce using rule 25 (exp -> exp LE exp .)
    NEWLINE         reduce using rule 25 (exp -> exp LE exp .)
    $end            reduce using rule 25 (exp -> exp LE exp .)
    DEKHI           reduce using rule 25 (exp -> exp LE exp .)
    COLON           reduce using rule 25 (exp -> exp LE exp .)
    SEMICOLON       reduce using rule 25 (exp -> exp LE exp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39

  ! PLUS            [ reduce using rule 25 (exp -> exp LE exp .) ]
  ! MINUS           [ reduce using rule 25 (exp -> exp LE exp .) ]
  ! TIMES           [ reduce using rule 25 (exp -> exp LE exp .) ]
  ! DIVIDE          [ reduce using rule 25 (exp -> exp LE exp .) ]
  ! POWER           [ reduce using rule 25 (exp -> exp LE exp .) ]
  ! EQ              [ shift and go to state 50 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 43 ]
  ! NE              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 44 ]
  ! RA              [ shift and go to state 46 ]
  ! WA              [ shift and go to state 48 ]


state 73

    (33) exp -> exp DIVIDE exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    EQ              reduce using rule 33 (exp -> exp DIVIDE exp .)
    LE              reduce using rule 33 (exp -> exp DIVIDE exp .)
    GE              reduce using rule 33 (exp -> exp DIVIDE exp .)
    NE              reduce using rule 33 (exp -> exp DIVIDE exp .)
    LT              reduce using rule 33 (exp -> exp DIVIDE exp .)
    GT              reduce using rule 33 (exp -> exp DIVIDE exp .)
    PLUS            reduce using rule 33 (exp -> exp DIVIDE exp .)
    MINUS           reduce using rule 33 (exp -> exp DIVIDE exp .)
    TIMES           reduce using rule 33 (exp -> exp DIVIDE exp .)
    DIVIDE          reduce using rule 33 (exp -> exp DIVIDE exp .)
    POWER           reduce using rule 33 (exp -> exp DIVIDE exp .)
    RA              reduce using rule 33 (exp -> exp DIVIDE exp .)
    WA              reduce using rule 33 (exp -> exp DIVIDE exp .)
    PATHAU          reduce using rule 33 (exp -> exp DIVIDE exp .)
    COMMA           reduce using rule 33 (exp -> exp DIVIDE exp .)
    LEKHA           reduce using rule 33 (exp -> exp DIVIDE exp .)
    BHAE            reduce using rule 33 (exp -> exp DIVIDE exp .)
    NABHAE          reduce using rule 33 (exp -> exp DIVIDE exp .)
    RPARA           reduce using rule 33 (exp -> exp DIVIDE exp .)
    RGPARA          reduce using rule 33 (exp -> exp DIVIDE exp .)
    CHHA            reduce using rule 33 (exp -> exp DIVIDE exp .)
    CHHAINA         reduce using rule 33 (exp -> exp DIVIDE exp .)
    NEWLINE         reduce using rule 33 (exp -> exp DIVIDE exp .)
    $end            reduce using rule 33 (exp -> exp DIVIDE exp .)
    DEKHI           reduce using rule 33 (exp -> exp DIVIDE exp .)
    COLON           reduce using rule 33 (exp -> exp DIVIDE exp .)
    SEMICOLON       reduce using rule 33 (exp -> exp DIVIDE exp .)

  ! EQ              [ shift and go to state 50 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 43 ]
  ! NE              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 44 ]
  ! PLUS            [ shift and go to state 47 ]
  ! MINUS           [ shift and go to state 51 ]
  ! TIMES           [ shift and go to state 49 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! POWER           [ shift and go to state 39 ]
  ! RA              [ shift and go to state 46 ]
  ! WA              [ shift and go to state 48 ]


state 74

    (34) exp -> exp POWER exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    EQ              reduce using rule 34 (exp -> exp POWER exp .)
    LE              reduce using rule 34 (exp -> exp POWER exp .)
    GE              reduce using rule 34 (exp -> exp POWER exp .)
    NE              reduce using rule 34 (exp -> exp POWER exp .)
    LT              reduce using rule 34 (exp -> exp POWER exp .)
    GT              reduce using rule 34 (exp -> exp POWER exp .)
    PLUS            reduce using rule 34 (exp -> exp POWER exp .)
    MINUS           reduce using rule 34 (exp -> exp POWER exp .)
    TIMES           reduce using rule 34 (exp -> exp POWER exp .)
    DIVIDE          reduce using rule 34 (exp -> exp POWER exp .)
    POWER           reduce using rule 34 (exp -> exp POWER exp .)
    RA              reduce using rule 34 (exp -> exp POWER exp .)
    WA              reduce using rule 34 (exp -> exp POWER exp .)
    PATHAU          reduce using rule 34 (exp -> exp POWER exp .)
    COMMA           reduce using rule 34 (exp -> exp POWER exp .)
    LEKHA           reduce using rule 34 (exp -> exp POWER exp .)
    BHAE            reduce using rule 34 (exp -> exp POWER exp .)
    NABHAE          reduce using rule 34 (exp -> exp POWER exp .)
    RPARA           reduce using rule 34 (exp -> exp POWER exp .)
    RGPARA          reduce using rule 34 (exp -> exp POWER exp .)
    CHHA            reduce using rule 34 (exp -> exp POWER exp .)
    CHHAINA         reduce using rule 34 (exp -> exp POWER exp .)
    NEWLINE         reduce using rule 34 (exp -> exp POWER exp .)
    $end            reduce using rule 34 (exp -> exp POWER exp .)
    DEKHI           reduce using rule 34 (exp -> exp POWER exp .)
    COLON           reduce using rule 34 (exp -> exp POWER exp .)
    SEMICOLON       reduce using rule 34 (exp -> exp POWER exp .)

  ! EQ              [ shift and go to state 50 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 43 ]
  ! NE              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 44 ]
  ! PLUS            [ shift and go to state 47 ]
  ! MINUS           [ shift and go to state 51 ]
  ! TIMES           [ shift and go to state 49 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! POWER           [ shift and go to state 39 ]
  ! RA              [ shift and go to state 46 ]
  ! WA              [ shift and go to state 48 ]


state 75

    (28) exp -> exp LT exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    EQ              reduce using rule 28 (exp -> exp LT exp .)
    LE              reduce using rule 28 (exp -> exp LT exp .)
    GE              reduce using rule 28 (exp -> exp LT exp .)
    NE              reduce using rule 28 (exp -> exp LT exp .)
    LT              reduce using rule 28 (exp -> exp LT exp .)
    GT              reduce using rule 28 (exp -> exp LT exp .)
    RA              reduce using rule 28 (exp -> exp LT exp .)
    WA              reduce using rule 28 (exp -> exp LT exp .)
    PATHAU          reduce using rule 28 (exp -> exp LT exp .)
    COMMA           reduce using rule 28 (exp -> exp LT exp .)
    LEKHA           reduce using rule 28 (exp -> exp LT exp .)
    BHAE            reduce using rule 28 (exp -> exp LT exp .)
    NABHAE          reduce using rule 28 (exp -> exp LT exp .)
    RPARA           reduce using rule 28 (exp -> exp LT exp .)
    RGPARA          reduce using rule 28 (exp -> exp LT exp .)
    CHHA            reduce using rule 28 (exp -> exp LT exp .)
    CHHAINA         reduce using rule 28 (exp -> exp LT exp .)
    NEWLINE         reduce using rule 28 (exp -> exp LT exp .)
    $end            reduce using rule 28 (exp -> exp LT exp .)
    DEKHI           reduce using rule 28 (exp -> exp LT exp .)
    COLON           reduce using rule 28 (exp -> exp LT exp .)
    SEMICOLON       reduce using rule 28 (exp -> exp LT exp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39

  ! PLUS            [ reduce using rule 28 (exp -> exp LT exp .) ]
  ! MINUS           [ reduce using rule 28 (exp -> exp LT exp .) ]
  ! TIMES           [ reduce using rule 28 (exp -> exp LT exp .) ]
  ! DIVIDE          [ reduce using rule 28 (exp -> exp LT exp .) ]
  ! POWER           [ reduce using rule 28 (exp -> exp LT exp .) ]
  ! EQ              [ shift and go to state 50 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 43 ]
  ! NE              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 44 ]
  ! RA              [ shift and go to state 46 ]
  ! WA              [ shift and go to state 48 ]


state 76

    (27) exp -> exp NE exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 27 (exp -> exp NE exp .)
    COMMA           reduce using rule 27 (exp -> exp NE exp .)
    LEKHA           reduce using rule 27 (exp -> exp NE exp .)
    BHAE            reduce using rule 27 (exp -> exp NE exp .)
    NABHAE          reduce using rule 27 (exp -> exp NE exp .)
    RPARA           reduce using rule 27 (exp -> exp NE exp .)
    RGPARA          reduce using rule 27 (exp -> exp NE exp .)
    CHHA            reduce using rule 27 (exp -> exp NE exp .)
    CHHAINA         reduce using rule 27 (exp -> exp NE exp .)
    NEWLINE         reduce using rule 27 (exp -> exp NE exp .)
    $end            reduce using rule 27 (exp -> exp NE exp .)
    DEKHI           reduce using rule 27 (exp -> exp NE exp .)
    COLON           reduce using rule 27 (exp -> exp NE exp .)
    SEMICOLON       reduce using rule 27 (exp -> exp NE exp .)
    EQ              shift and go to state 50
    LE              shift and go to state 37
    GE              shift and go to state 43
    NE              shift and go to state 41
    LT              shift and go to state 40
    GT              shift and go to state 44
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39
    RA              shift and go to state 46
    WA              shift and go to state 48

  ! EQ              [ reduce using rule 27 (exp -> exp NE exp .) ]
  ! LE              [ reduce using rule 27 (exp -> exp NE exp .) ]
  ! GE              [ reduce using rule 27 (exp -> exp NE exp .) ]
  ! NE              [ reduce using rule 27 (exp -> exp NE exp .) ]
  ! LT              [ reduce using rule 27 (exp -> exp NE exp .) ]
  ! GT              [ reduce using rule 27 (exp -> exp NE exp .) ]
  ! PLUS            [ reduce using rule 27 (exp -> exp NE exp .) ]
  ! MINUS           [ reduce using rule 27 (exp -> exp NE exp .) ]
  ! TIMES           [ reduce using rule 27 (exp -> exp NE exp .) ]
  ! DIVIDE          [ reduce using rule 27 (exp -> exp NE exp .) ]
  ! POWER           [ reduce using rule 27 (exp -> exp NE exp .) ]
  ! RA              [ reduce using rule 27 (exp -> exp NE exp .) ]
  ! WA              [ reduce using rule 27 (exp -> exp NE exp .) ]


state 77

    (26) exp -> exp GE exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    EQ              reduce using rule 26 (exp -> exp GE exp .)
    LE              reduce using rule 26 (exp -> exp GE exp .)
    GE              reduce using rule 26 (exp -> exp GE exp .)
    NE              reduce using rule 26 (exp -> exp GE exp .)
    LT              reduce using rule 26 (exp -> exp GE exp .)
    GT              reduce using rule 26 (exp -> exp GE exp .)
    RA              reduce using rule 26 (exp -> exp GE exp .)
    WA              reduce using rule 26 (exp -> exp GE exp .)
    PATHAU          reduce using rule 26 (exp -> exp GE exp .)
    COMMA           reduce using rule 26 (exp -> exp GE exp .)
    LEKHA           reduce using rule 26 (exp -> exp GE exp .)
    BHAE            reduce using rule 26 (exp -> exp GE exp .)
    NABHAE          reduce using rule 26 (exp -> exp GE exp .)
    RPARA           reduce using rule 26 (exp -> exp GE exp .)
    RGPARA          reduce using rule 26 (exp -> exp GE exp .)
    CHHA            reduce using rule 26 (exp -> exp GE exp .)
    CHHAINA         reduce using rule 26 (exp -> exp GE exp .)
    NEWLINE         reduce using rule 26 (exp -> exp GE exp .)
    $end            reduce using rule 26 (exp -> exp GE exp .)
    DEKHI           reduce using rule 26 (exp -> exp GE exp .)
    COLON           reduce using rule 26 (exp -> exp GE exp .)
    SEMICOLON       reduce using rule 26 (exp -> exp GE exp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39

  ! PLUS            [ reduce using rule 26 (exp -> exp GE exp .) ]
  ! MINUS           [ reduce using rule 26 (exp -> exp GE exp .) ]
  ! TIMES           [ reduce using rule 26 (exp -> exp GE exp .) ]
  ! DIVIDE          [ reduce using rule 26 (exp -> exp GE exp .) ]
  ! POWER           [ reduce using rule 26 (exp -> exp GE exp .) ]
  ! EQ              [ shift and go to state 50 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 43 ]
  ! NE              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 44 ]
  ! RA              [ shift and go to state 46 ]
  ! WA              [ shift and go to state 48 ]


state 78

    (29) exp -> exp GT exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    EQ              reduce using rule 29 (exp -> exp GT exp .)
    LE              reduce using rule 29 (exp -> exp GT exp .)
    GE              reduce using rule 29 (exp -> exp GT exp .)
    NE              reduce using rule 29 (exp -> exp GT exp .)
    LT              reduce using rule 29 (exp -> exp GT exp .)
    GT              reduce using rule 29 (exp -> exp GT exp .)
    RA              reduce using rule 29 (exp -> exp GT exp .)
    WA              reduce using rule 29 (exp -> exp GT exp .)
    PATHAU          reduce using rule 29 (exp -> exp GT exp .)
    COMMA           reduce using rule 29 (exp -> exp GT exp .)
    LEKHA           reduce using rule 29 (exp -> exp GT exp .)
    BHAE            reduce using rule 29 (exp -> exp GT exp .)
    NABHAE          reduce using rule 29 (exp -> exp GT exp .)
    RPARA           reduce using rule 29 (exp -> exp GT exp .)
    RGPARA          reduce using rule 29 (exp -> exp GT exp .)
    CHHA            reduce using rule 29 (exp -> exp GT exp .)
    CHHAINA         reduce using rule 29 (exp -> exp GT exp .)
    NEWLINE         reduce using rule 29 (exp -> exp GT exp .)
    $end            reduce using rule 29 (exp -> exp GT exp .)
    DEKHI           reduce using rule 29 (exp -> exp GT exp .)
    COLON           reduce using rule 29 (exp -> exp GT exp .)
    SEMICOLON       reduce using rule 29 (exp -> exp GT exp .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39

  ! PLUS            [ reduce using rule 29 (exp -> exp GT exp .) ]
  ! MINUS           [ reduce using rule 29 (exp -> exp GT exp .) ]
  ! TIMES           [ reduce using rule 29 (exp -> exp GT exp .) ]
  ! DIVIDE          [ reduce using rule 29 (exp -> exp GT exp .) ]
  ! POWER           [ reduce using rule 29 (exp -> exp GT exp .) ]
  ! EQ              [ shift and go to state 50 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 43 ]
  ! NE              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 44 ]
  ! RA              [ shift and go to state 46 ]
  ! WA              [ shift and go to state 48 ]


state 79

    (45) dynamString -> exp COMMA dynamString .

    LEKHA           reduce using rule 45 (dynamString -> exp COMMA dynamString .)


state 80

    (45) dynamString -> exp . COMMA dynamString
    (46) dynamString -> exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    COMMA           shift and go to state 45
    LEKHA           reduce using rule 46 (dynamString -> exp .)
    EQ              shift and go to state 50
    LE              shift and go to state 37
    GE              shift and go to state 43
    NE              shift and go to state 41
    LT              shift and go to state 40
    GT              shift and go to state 44
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39
    RA              shift and go to state 46
    WA              shift and go to state 48


state 81

    (35) exp -> exp RA exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 35 (exp -> exp RA exp .)
    COMMA           reduce using rule 35 (exp -> exp RA exp .)
    LEKHA           reduce using rule 35 (exp -> exp RA exp .)
    BHAE            reduce using rule 35 (exp -> exp RA exp .)
    NABHAE          reduce using rule 35 (exp -> exp RA exp .)
    RPARA           reduce using rule 35 (exp -> exp RA exp .)
    RGPARA          reduce using rule 35 (exp -> exp RA exp .)
    CHHA            reduce using rule 35 (exp -> exp RA exp .)
    CHHAINA         reduce using rule 35 (exp -> exp RA exp .)
    NEWLINE         reduce using rule 35 (exp -> exp RA exp .)
    $end            reduce using rule 35 (exp -> exp RA exp .)
    DEKHI           reduce using rule 35 (exp -> exp RA exp .)
    COLON           reduce using rule 35 (exp -> exp RA exp .)
    SEMICOLON       reduce using rule 35 (exp -> exp RA exp .)
    EQ              shift and go to state 50
    LE              shift and go to state 37
    GE              shift and go to state 43
    NE              shift and go to state 41
    LT              shift and go to state 40
    GT              shift and go to state 44
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39
    RA              shift and go to state 46
    WA              shift and go to state 48

  ! EQ              [ reduce using rule 35 (exp -> exp RA exp .) ]
  ! LE              [ reduce using rule 35 (exp -> exp RA exp .) ]
  ! GE              [ reduce using rule 35 (exp -> exp RA exp .) ]
  ! NE              [ reduce using rule 35 (exp -> exp RA exp .) ]
  ! LT              [ reduce using rule 35 (exp -> exp RA exp .) ]
  ! GT              [ reduce using rule 35 (exp -> exp RA exp .) ]
  ! PLUS            [ reduce using rule 35 (exp -> exp RA exp .) ]
  ! MINUS           [ reduce using rule 35 (exp -> exp RA exp .) ]
  ! TIMES           [ reduce using rule 35 (exp -> exp RA exp .) ]
  ! DIVIDE          [ reduce using rule 35 (exp -> exp RA exp .) ]
  ! POWER           [ reduce using rule 35 (exp -> exp RA exp .) ]
  ! RA              [ reduce using rule 35 (exp -> exp RA exp .) ]
  ! WA              [ reduce using rule 35 (exp -> exp RA exp .) ]


state 82

    (30) exp -> exp PLUS exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    EQ              reduce using rule 30 (exp -> exp PLUS exp .)
    LE              reduce using rule 30 (exp -> exp PLUS exp .)
    GE              reduce using rule 30 (exp -> exp PLUS exp .)
    NE              reduce using rule 30 (exp -> exp PLUS exp .)
    LT              reduce using rule 30 (exp -> exp PLUS exp .)
    GT              reduce using rule 30 (exp -> exp PLUS exp .)
    PLUS            reduce using rule 30 (exp -> exp PLUS exp .)
    MINUS           reduce using rule 30 (exp -> exp PLUS exp .)
    RA              reduce using rule 30 (exp -> exp PLUS exp .)
    WA              reduce using rule 30 (exp -> exp PLUS exp .)
    PATHAU          reduce using rule 30 (exp -> exp PLUS exp .)
    COMMA           reduce using rule 30 (exp -> exp PLUS exp .)
    LEKHA           reduce using rule 30 (exp -> exp PLUS exp .)
    BHAE            reduce using rule 30 (exp -> exp PLUS exp .)
    NABHAE          reduce using rule 30 (exp -> exp PLUS exp .)
    RPARA           reduce using rule 30 (exp -> exp PLUS exp .)
    RGPARA          reduce using rule 30 (exp -> exp PLUS exp .)
    CHHA            reduce using rule 30 (exp -> exp PLUS exp .)
    CHHAINA         reduce using rule 30 (exp -> exp PLUS exp .)
    NEWLINE         reduce using rule 30 (exp -> exp PLUS exp .)
    $end            reduce using rule 30 (exp -> exp PLUS exp .)
    DEKHI           reduce using rule 30 (exp -> exp PLUS exp .)
    COLON           reduce using rule 30 (exp -> exp PLUS exp .)
    SEMICOLON       reduce using rule 30 (exp -> exp PLUS exp .)
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39

  ! TIMES           [ reduce using rule 30 (exp -> exp PLUS exp .) ]
  ! DIVIDE          [ reduce using rule 30 (exp -> exp PLUS exp .) ]
  ! POWER           [ reduce using rule 30 (exp -> exp PLUS exp .) ]
  ! EQ              [ shift and go to state 50 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 43 ]
  ! NE              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 44 ]
  ! PLUS            [ shift and go to state 47 ]
  ! MINUS           [ shift and go to state 51 ]
  ! RA              [ shift and go to state 46 ]
  ! WA              [ shift and go to state 48 ]


state 83

    (36) exp -> exp WA exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 36 (exp -> exp WA exp .)
    COMMA           reduce using rule 36 (exp -> exp WA exp .)
    LEKHA           reduce using rule 36 (exp -> exp WA exp .)
    BHAE            reduce using rule 36 (exp -> exp WA exp .)
    NABHAE          reduce using rule 36 (exp -> exp WA exp .)
    RPARA           reduce using rule 36 (exp -> exp WA exp .)
    RGPARA          reduce using rule 36 (exp -> exp WA exp .)
    CHHA            reduce using rule 36 (exp -> exp WA exp .)
    CHHAINA         reduce using rule 36 (exp -> exp WA exp .)
    NEWLINE         reduce using rule 36 (exp -> exp WA exp .)
    $end            reduce using rule 36 (exp -> exp WA exp .)
    DEKHI           reduce using rule 36 (exp -> exp WA exp .)
    COLON           reduce using rule 36 (exp -> exp WA exp .)
    SEMICOLON       reduce using rule 36 (exp -> exp WA exp .)
    EQ              shift and go to state 50
    LE              shift and go to state 37
    GE              shift and go to state 43
    NE              shift and go to state 41
    LT              shift and go to state 40
    GT              shift and go to state 44
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39
    RA              shift and go to state 46
    WA              shift and go to state 48

  ! EQ              [ reduce using rule 36 (exp -> exp WA exp .) ]
  ! LE              [ reduce using rule 36 (exp -> exp WA exp .) ]
  ! GE              [ reduce using rule 36 (exp -> exp WA exp .) ]
  ! NE              [ reduce using rule 36 (exp -> exp WA exp .) ]
  ! LT              [ reduce using rule 36 (exp -> exp WA exp .) ]
  ! GT              [ reduce using rule 36 (exp -> exp WA exp .) ]
  ! PLUS            [ reduce using rule 36 (exp -> exp WA exp .) ]
  ! MINUS           [ reduce using rule 36 (exp -> exp WA exp .) ]
  ! TIMES           [ reduce using rule 36 (exp -> exp WA exp .) ]
  ! DIVIDE          [ reduce using rule 36 (exp -> exp WA exp .) ]
  ! POWER           [ reduce using rule 36 (exp -> exp WA exp .) ]
  ! RA              [ reduce using rule 36 (exp -> exp WA exp .) ]
  ! WA              [ reduce using rule 36 (exp -> exp WA exp .) ]


state 84

    (32) exp -> exp TIMES exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    EQ              reduce using rule 32 (exp -> exp TIMES exp .)
    LE              reduce using rule 32 (exp -> exp TIMES exp .)
    GE              reduce using rule 32 (exp -> exp TIMES exp .)
    NE              reduce using rule 32 (exp -> exp TIMES exp .)
    LT              reduce using rule 32 (exp -> exp TIMES exp .)
    GT              reduce using rule 32 (exp -> exp TIMES exp .)
    PLUS            reduce using rule 32 (exp -> exp TIMES exp .)
    MINUS           reduce using rule 32 (exp -> exp TIMES exp .)
    TIMES           reduce using rule 32 (exp -> exp TIMES exp .)
    DIVIDE          reduce using rule 32 (exp -> exp TIMES exp .)
    POWER           reduce using rule 32 (exp -> exp TIMES exp .)
    RA              reduce using rule 32 (exp -> exp TIMES exp .)
    WA              reduce using rule 32 (exp -> exp TIMES exp .)
    PATHAU          reduce using rule 32 (exp -> exp TIMES exp .)
    COMMA           reduce using rule 32 (exp -> exp TIMES exp .)
    LEKHA           reduce using rule 32 (exp -> exp TIMES exp .)
    BHAE            reduce using rule 32 (exp -> exp TIMES exp .)
    NABHAE          reduce using rule 32 (exp -> exp TIMES exp .)
    RPARA           reduce using rule 32 (exp -> exp TIMES exp .)
    RGPARA          reduce using rule 32 (exp -> exp TIMES exp .)
    CHHA            reduce using rule 32 (exp -> exp TIMES exp .)
    CHHAINA         reduce using rule 32 (exp -> exp TIMES exp .)
    NEWLINE         reduce using rule 32 (exp -> exp TIMES exp .)
    $end            reduce using rule 32 (exp -> exp TIMES exp .)
    DEKHI           reduce using rule 32 (exp -> exp TIMES exp .)
    COLON           reduce using rule 32 (exp -> exp TIMES exp .)
    SEMICOLON       reduce using rule 32 (exp -> exp TIMES exp .)

  ! EQ              [ shift and go to state 50 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 43 ]
  ! NE              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 44 ]
  ! PLUS            [ shift and go to state 47 ]
  ! MINUS           [ shift and go to state 51 ]
  ! TIMES           [ shift and go to state 49 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! POWER           [ shift and go to state 39 ]
  ! RA              [ shift and go to state 46 ]
  ! WA              [ shift and go to state 48 ]


state 85

    (24) exp -> exp EQ exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    EQ              reduce using rule 24 (exp -> exp EQ exp .)
    NE              reduce using rule 24 (exp -> exp EQ exp .)
    RA              reduce using rule 24 (exp -> exp EQ exp .)
    WA              reduce using rule 24 (exp -> exp EQ exp .)
    PATHAU          reduce using rule 24 (exp -> exp EQ exp .)
    COMMA           reduce using rule 24 (exp -> exp EQ exp .)
    LEKHA           reduce using rule 24 (exp -> exp EQ exp .)
    BHAE            reduce using rule 24 (exp -> exp EQ exp .)
    NABHAE          reduce using rule 24 (exp -> exp EQ exp .)
    RPARA           reduce using rule 24 (exp -> exp EQ exp .)
    RGPARA          reduce using rule 24 (exp -> exp EQ exp .)
    CHHA            reduce using rule 24 (exp -> exp EQ exp .)
    CHHAINA         reduce using rule 24 (exp -> exp EQ exp .)
    NEWLINE         reduce using rule 24 (exp -> exp EQ exp .)
    $end            reduce using rule 24 (exp -> exp EQ exp .)
    DEKHI           reduce using rule 24 (exp -> exp EQ exp .)
    COLON           reduce using rule 24 (exp -> exp EQ exp .)
    SEMICOLON       reduce using rule 24 (exp -> exp EQ exp .)
    LE              shift and go to state 37
    GE              shift and go to state 43
    LT              shift and go to state 40
    GT              shift and go to state 44
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39

  ! LE              [ reduce using rule 24 (exp -> exp EQ exp .) ]
  ! GE              [ reduce using rule 24 (exp -> exp EQ exp .) ]
  ! LT              [ reduce using rule 24 (exp -> exp EQ exp .) ]
  ! GT              [ reduce using rule 24 (exp -> exp EQ exp .) ]
  ! PLUS            [ reduce using rule 24 (exp -> exp EQ exp .) ]
  ! MINUS           [ reduce using rule 24 (exp -> exp EQ exp .) ]
  ! TIMES           [ reduce using rule 24 (exp -> exp EQ exp .) ]
  ! DIVIDE          [ reduce using rule 24 (exp -> exp EQ exp .) ]
  ! POWER           [ reduce using rule 24 (exp -> exp EQ exp .) ]
  ! EQ              [ shift and go to state 50 ]
  ! NE              [ shift and go to state 41 ]
  ! RA              [ shift and go to state 46 ]
  ! WA              [ shift and go to state 48 ]


state 86

    (31) exp -> exp MINUS exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    EQ              reduce using rule 31 (exp -> exp MINUS exp .)
    LE              reduce using rule 31 (exp -> exp MINUS exp .)
    GE              reduce using rule 31 (exp -> exp MINUS exp .)
    NE              reduce using rule 31 (exp -> exp MINUS exp .)
    LT              reduce using rule 31 (exp -> exp MINUS exp .)
    GT              reduce using rule 31 (exp -> exp MINUS exp .)
    PLUS            reduce using rule 31 (exp -> exp MINUS exp .)
    MINUS           reduce using rule 31 (exp -> exp MINUS exp .)
    RA              reduce using rule 31 (exp -> exp MINUS exp .)
    WA              reduce using rule 31 (exp -> exp MINUS exp .)
    PATHAU          reduce using rule 31 (exp -> exp MINUS exp .)
    COMMA           reduce using rule 31 (exp -> exp MINUS exp .)
    LEKHA           reduce using rule 31 (exp -> exp MINUS exp .)
    BHAE            reduce using rule 31 (exp -> exp MINUS exp .)
    NABHAE          reduce using rule 31 (exp -> exp MINUS exp .)
    RPARA           reduce using rule 31 (exp -> exp MINUS exp .)
    RGPARA          reduce using rule 31 (exp -> exp MINUS exp .)
    CHHA            reduce using rule 31 (exp -> exp MINUS exp .)
    CHHAINA         reduce using rule 31 (exp -> exp MINUS exp .)
    NEWLINE         reduce using rule 31 (exp -> exp MINUS exp .)
    $end            reduce using rule 31 (exp -> exp MINUS exp .)
    DEKHI           reduce using rule 31 (exp -> exp MINUS exp .)
    COLON           reduce using rule 31 (exp -> exp MINUS exp .)
    SEMICOLON       reduce using rule 31 (exp -> exp MINUS exp .)
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39

  ! TIMES           [ reduce using rule 31 (exp -> exp MINUS exp .) ]
  ! DIVIDE          [ reduce using rule 31 (exp -> exp MINUS exp .) ]
  ! POWER           [ reduce using rule 31 (exp -> exp MINUS exp .) ]
  ! EQ              [ shift and go to state 50 ]
  ! LE              [ shift and go to state 37 ]
  ! GE              [ shift and go to state 43 ]
  ! NE              [ shift and go to state 41 ]
  ! LT              [ shift and go to state 40 ]
  ! GT              [ shift and go to state 44 ]
  ! PLUS            [ shift and go to state 47 ]
  ! MINUS           [ shift and go to state 51 ]
  ! RA              [ shift and go to state 46 ]
  ! WA              [ shift and go to state 48 ]


state 87

    (44) exp -> IDENTIFIER LPARA variableexp . RPARA

    RPARA           shift and go to state 106


state 88

    (48) condition -> condition WA condition .
    (47) condition -> condition . RA condition
    (48) condition -> condition . WA condition

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 48 (condition -> condition WA condition .)
    RA              shift and go to state 55
    WA              shift and go to state 53

  ! RA              [ reduce using rule 48 (condition -> condition WA condition .) ]
  ! WA              [ reduce using rule 48 (condition -> condition WA condition .) ]


state 89

    (51) cmpdstmt -> stmt . NEWLINE cmpdstmt

    NEWLINE         shift and go to state 107


state 90

    (10) stmt -> YEDI condition NEWLINE cmpdstmt . optelse DIYE
    (53) optelse -> . ATHAWA condition NEWLINE cmpdstmt optelse
    (54) optelse -> . ATHAWA NEWLINE cmpdstmt
    (55) optelse -> .

    ATHAWA          shift and go to state 109
    DIYE            reduce using rule 55 (optelse -> .)

    optelse                        shift and go to state 108

state 91

    (47) condition -> condition RA condition .
    (47) condition -> condition . RA condition
    (48) condition -> condition . WA condition

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 47 (condition -> condition RA condition .)
    RA              shift and go to state 55
    WA              shift and go to state 53

  ! RA              [ reduce using rule 47 (condition -> condition RA condition .) ]
  ! WA              [ reduce using rule 47 (condition -> condition RA condition .) ]


state 92

    (43) exp -> LPARA exp RPARA QUESTION . exp COLON exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 110

state 93

    (62) whilecond -> whilecond WA . whilecond
    (61) whilecond -> . whilecond RA whilecond
    (62) whilecond -> . whilecond WA whilecond
    (63) whilecond -> . exp CHHA
    (64) whilecond -> . exp CHHAINA
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 60
    whilecond                      shift and go to state 111

state 94

    (12) stmt -> JABA SAMMA whilecond NEWLINE . cmpdstmt BAJA
    (51) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (52) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (14) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (15) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (16) stmt -> . exp PATHAU
    (17) stmt -> . NEWLINE
    (45) dynamString -> . exp COMMA dynamString
    (46) dynamString -> . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    BAJA            reduce using rule 52 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 8
    YEDI            shift and go to state 1
    SABEI           shift and go to state 9
    JABA            shift and go to state 4
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    stmt                           shift and go to state 89
    dynamString                    shift and go to state 13
    cmpdstmt                       shift and go to state 112
    exp                            shift and go to state 15

state 95

    (61) whilecond -> whilecond RA . whilecond
    (61) whilecond -> . whilecond RA whilecond
    (62) whilecond -> . whilecond WA whilecond
    (63) whilecond -> . exp CHHA
    (64) whilecond -> . exp CHHAINA
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 60
    whilecond                      shift and go to state 113

state 96

    (63) whilecond -> exp CHHA .

    RA              reduce using rule 63 (whilecond -> exp CHHA .)
    WA              reduce using rule 63 (whilecond -> exp CHHA .)
    NEWLINE         reduce using rule 63 (whilecond -> exp CHHA .)


state 97

    (64) whilecond -> exp CHHAINA .

    RA              reduce using rule 64 (whilecond -> exp CHHAINA .)
    WA              reduce using rule 64 (whilecond -> exp CHHAINA .)
    NEWLINE         reduce using rule 64 (whilecond -> exp CHHAINA .)


state 98

    (14) stmt -> KAAM IDENTIFIER LPARA variableArgs . RPARA NEWLINE cmpdstmt MAKA

    RPARA           shift and go to state 114


state 99

    (18) variableArgs -> IDENTIFIER . COMMA variableArgs
    (19) variableArgs -> IDENTIFIER .

    COMMA           shift and go to state 115
    RPARA           reduce using rule 19 (variableArgs -> IDENTIFIER .)


state 100

    (41) exp -> IDENTIFIER LGPARA exp RGPARA .

    EQ              reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LE              reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    GE              reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NE              reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LT              reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    GT              reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    PLUS            reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    MINUS           reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    TIMES           reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    DIVIDE          reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    POWER           reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RA              reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    WA              reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    PATHAU          reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    COMMA           reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LEKHA           reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    BHAE            reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NABHAE          reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RPARA           reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RGPARA          reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    CHHA            reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    CHHAINA         reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NEWLINE         reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    $end            reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    DEKHI           reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    COLON           reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    SEMICOLON       reduce using rule 41 (exp -> IDENTIFIER LGPARA exp RGPARA .)


state 101

    (13) stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp . RGPARA
    (40) exp -> LGPARA variableexp . RGPARA

    RGPARA          shift and go to state 116


state 102

    (15) stmt -> IDENTIFIER LPARA variableexp RPARA .
    (44) exp -> IDENTIFIER LPARA variableexp RPARA .

    NEWLINE         reduce using rule 15 (stmt -> IDENTIFIER LPARA variableexp RPARA .)
    $end            reduce using rule 15 (stmt -> IDENTIFIER LPARA variableexp RPARA .)
    PATHAU          reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    COMMA           reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    EQ              reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LE              reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GE              reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NE              reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LT              reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GT              reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    PLUS            reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    MINUS           reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    TIMES           reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    DIVIDE          reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    POWER           reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RA              reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    WA              reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LEKHA           reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)


state 103

    (9) stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    NEWLINE         reduce using rule 9 (stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .)
    $end            reduce using rule 9 (stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .)
    EQ              shift and go to state 50
    LE              shift and go to state 37
    GE              shift and go to state 43
    NE              shift and go to state 41
    LT              shift and go to state 40
    GT              shift and go to state 44
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39
    RA              shift and go to state 46
    WA              shift and go to state 48


state 104

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp . DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    DEKHI           shift and go to state 117
    EQ              shift and go to state 50
    LE              shift and go to state 37
    GE              shift and go to state 43
    NE              shift and go to state 41
    LT              shift and go to state 40
    GT              shift and go to state 44
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39
    RA              shift and go to state 46
    WA              shift and go to state 48


state 105

    (21) variableexp -> exp COMMA variableexp .

    RGPARA          reduce using rule 21 (variableexp -> exp COMMA variableexp .)
    RPARA           reduce using rule 21 (variableexp -> exp COMMA variableexp .)


state 106

    (44) exp -> IDENTIFIER LPARA variableexp RPARA .

    EQ              reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LE              reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GE              reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NE              reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LT              reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GT              reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    PLUS            reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    MINUS           reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    TIMES           reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    DIVIDE          reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    POWER           reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RA              reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    WA              reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    PATHAU          reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    COMMA           reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LEKHA           reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    BHAE            reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NABHAE          reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RPARA           reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RGPARA          reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    CHHA            reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    CHHAINA         reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NEWLINE         reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    $end            reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    DEKHI           reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    COLON           reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    SEMICOLON       reduce using rule 44 (exp -> IDENTIFIER LPARA variableexp RPARA .)


state 107

    (51) cmpdstmt -> stmt NEWLINE . cmpdstmt
    (51) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (52) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (14) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (15) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (16) stmt -> . exp PATHAU
    (17) stmt -> . NEWLINE
    (45) dynamString -> . exp COMMA dynamString
    (46) dynamString -> . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    ATHAWA          reduce using rule 52 (cmpdstmt -> .)
    DIYE            reduce using rule 52 (cmpdstmt -> .)
    BAJA            reduce using rule 52 (cmpdstmt -> .)
    MAKA            reduce using rule 52 (cmpdstmt -> .)
    BAISA           reduce using rule 52 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 8
    YEDI            shift and go to state 1
    SABEI           shift and go to state 9
    JABA            shift and go to state 4
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    stmt                           shift and go to state 89
    dynamString                    shift and go to state 13
    cmpdstmt                       shift and go to state 118
    exp                            shift and go to state 15

state 108

    (10) stmt -> YEDI condition NEWLINE cmpdstmt optelse . DIYE

    DIYE            shift and go to state 119


state 109

    (53) optelse -> ATHAWA . condition NEWLINE cmpdstmt optelse
    (54) optelse -> ATHAWA . NEWLINE cmpdstmt
    (47) condition -> . condition RA condition
    (48) condition -> . condition WA condition
    (49) condition -> . exp BHAE
    (50) condition -> . exp NABHAE
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    NEWLINE         shift and go to state 120
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 18
    condition                      shift and go to state 121

state 110

    (43) exp -> LPARA exp RPARA QUESTION exp . COLON exp
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    COLON           shift and go to state 122
    EQ              shift and go to state 50
    LE              shift and go to state 37
    GE              shift and go to state 43
    NE              shift and go to state 41
    LT              shift and go to state 40
    GT              shift and go to state 44
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39
    RA              shift and go to state 46
    WA              shift and go to state 48


state 111

    (62) whilecond -> whilecond WA whilecond .
    (61) whilecond -> whilecond . RA whilecond
    (62) whilecond -> whilecond . WA whilecond

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 62 (whilecond -> whilecond WA whilecond .)
    RA              shift and go to state 95
    WA              shift and go to state 93

  ! RA              [ reduce using rule 62 (whilecond -> whilecond WA whilecond .) ]
  ! WA              [ reduce using rule 62 (whilecond -> whilecond WA whilecond .) ]


state 112

    (12) stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt . BAJA

    BAJA            shift and go to state 123


state 113

    (61) whilecond -> whilecond RA whilecond .
    (61) whilecond -> whilecond . RA whilecond
    (62) whilecond -> whilecond . WA whilecond

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 61 (whilecond -> whilecond RA whilecond .)
    RA              shift and go to state 95
    WA              shift and go to state 93

  ! RA              [ reduce using rule 61 (whilecond -> whilecond RA whilecond .) ]
  ! WA              [ reduce using rule 61 (whilecond -> whilecond RA whilecond .) ]


state 114

    (14) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA . NEWLINE cmpdstmt MAKA

    NEWLINE         shift and go to state 124


state 115

    (18) variableArgs -> IDENTIFIER COMMA . variableArgs
    (18) variableArgs -> . IDENTIFIER COMMA variableArgs
    (19) variableArgs -> . IDENTIFIER
    (20) variableArgs -> .

    IDENTIFIER      shift and go to state 99
    RPARA           reduce using rule 20 (variableArgs -> .)

    variableArgs                   shift and go to state 125

state 116

    (13) stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .
    (40) exp -> LGPARA variableexp RGPARA .

  ! reduce/reduce conflict for NEWLINE resolved using rule 13 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
  ! reduce/reduce conflict for $end resolved using rule 13 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    NEWLINE         reduce using rule 13 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    $end            reduce using rule 13 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    EQ              reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    LE              reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    GE              reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    NE              reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    LT              reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    GT              reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    PLUS            reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    MINUS           reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    TIMES           reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    DIVIDE          reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    POWER           reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    RA              reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)
    WA              reduce using rule 40 (exp -> LGPARA variableexp RGPARA .)

  ! NEWLINE         [ reduce using rule 40 (exp -> LGPARA variableexp RGPARA .) ]
  ! $end            [ reduce using rule 40 (exp -> LGPARA variableexp RGPARA .) ]


state 117

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI . exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 126

state 118

    (51) cmpdstmt -> stmt NEWLINE cmpdstmt .

    ATHAWA          reduce using rule 51 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    DIYE            reduce using rule 51 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    BAJA            reduce using rule 51 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    MAKA            reduce using rule 51 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    BAISA           reduce using rule 51 (cmpdstmt -> stmt NEWLINE cmpdstmt .)


state 119

    (10) stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .

    NEWLINE         reduce using rule 10 (stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .)
    $end            reduce using rule 10 (stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .)


state 120

    (54) optelse -> ATHAWA NEWLINE . cmpdstmt
    (51) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (52) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (14) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (15) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (16) stmt -> . exp PATHAU
    (17) stmt -> . NEWLINE
    (45) dynamString -> . exp COMMA dynamString
    (46) dynamString -> . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    DIYE            reduce using rule 52 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 8
    YEDI            shift and go to state 1
    SABEI           shift and go to state 9
    JABA            shift and go to state 4
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    stmt                           shift and go to state 89
    dynamString                    shift and go to state 13
    cmpdstmt                       shift and go to state 127
    exp                            shift and go to state 15

state 121

    (53) optelse -> ATHAWA condition . NEWLINE cmpdstmt optelse
    (47) condition -> condition . RA condition
    (48) condition -> condition . WA condition

    NEWLINE         shift and go to state 128
    RA              shift and go to state 55
    WA              shift and go to state 53


state 122

    (43) exp -> LPARA exp RPARA QUESTION exp COLON . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 129

state 123

    (12) stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .

    NEWLINE         reduce using rule 12 (stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .)
    $end            reduce using rule 12 (stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .)


state 124

    (14) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE . cmpdstmt MAKA
    (51) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (52) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (14) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (15) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (16) stmt -> . exp PATHAU
    (17) stmt -> . NEWLINE
    (45) dynamString -> . exp COMMA dynamString
    (46) dynamString -> . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    MAKA            reduce using rule 52 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 8
    YEDI            shift and go to state 1
    SABEI           shift and go to state 9
    JABA            shift and go to state 4
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    stmt                           shift and go to state 89
    dynamString                    shift and go to state 13
    cmpdstmt                       shift and go to state 130
    exp                            shift and go to state 15

state 125

    (18) variableArgs -> IDENTIFIER COMMA variableArgs .

    RPARA           reduce using rule 18 (variableArgs -> IDENTIFIER COMMA variableArgs .)


state 126

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp . SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    SEMICOLON       shift and go to state 131
    EQ              shift and go to state 50
    LE              shift and go to state 37
    GE              shift and go to state 43
    NE              shift and go to state 41
    LT              shift and go to state 40
    GT              shift and go to state 44
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39
    RA              shift and go to state 46
    WA              shift and go to state 48


state 127

    (54) optelse -> ATHAWA NEWLINE cmpdstmt .

    DIYE            reduce using rule 54 (optelse -> ATHAWA NEWLINE cmpdstmt .)


state 128

    (53) optelse -> ATHAWA condition NEWLINE . cmpdstmt optelse
    (51) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (52) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (14) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (15) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (16) stmt -> . exp PATHAU
    (17) stmt -> . NEWLINE
    (45) dynamString -> . exp COMMA dynamString
    (46) dynamString -> . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    ATHAWA          reduce using rule 52 (cmpdstmt -> .)
    DIYE            reduce using rule 52 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 8
    YEDI            shift and go to state 1
    SABEI           shift and go to state 9
    JABA            shift and go to state 4
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    stmt                           shift and go to state 89
    dynamString                    shift and go to state 13
    cmpdstmt                       shift and go to state 132
    exp                            shift and go to state 15

state 129

    (43) exp -> LPARA exp RPARA QUESTION exp COLON exp .
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    COMMA           reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    LEKHA           reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    BHAE            reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    NABHAE          reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    RPARA           reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    RGPARA          reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    CHHA            reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    CHHAINA         reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    NEWLINE         reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    $end            reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    DEKHI           reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    COLON           reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    SEMICOLON       reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    EQ              shift and go to state 50
    LE              shift and go to state 37
    GE              shift and go to state 43
    NE              shift and go to state 41
    LT              shift and go to state 40
    GT              shift and go to state 44
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39
    RA              shift and go to state 46
    WA              shift and go to state 48

  ! EQ              [ reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! LE              [ reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! GE              [ reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! NE              [ reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! LT              [ reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! GT              [ reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! PLUS            [ reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! MINUS           [ reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! TIMES           [ reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! DIVIDE          [ reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! POWER           [ reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! RA              [ reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! WA              [ reduce using rule 43 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]


state 130

    (14) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt . MAKA

    MAKA            shift and go to state 133


state 131

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON . sign exp NEWLINE cmpdstmt BAISA
    (56) sign -> . PLUS
    (57) sign -> . MINUS

    PLUS            shift and go to state 27
    MINUS           shift and go to state 30

    sign                           shift and go to state 134

state 132

    (53) optelse -> ATHAWA condition NEWLINE cmpdstmt . optelse
    (53) optelse -> . ATHAWA condition NEWLINE cmpdstmt optelse
    (54) optelse -> . ATHAWA NEWLINE cmpdstmt
    (55) optelse -> .

    ATHAWA          shift and go to state 109
    DIYE            reduce using rule 55 (optelse -> .)

    optelse                        shift and go to state 135

state 133

    (14) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA .

    NEWLINE         reduce using rule 14 (stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA .)
    $end            reduce using rule 14 (stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA .)


state 134

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign . exp NEWLINE cmpdstmt BAISA
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    exp                            shift and go to state 136

state 135

    (53) optelse -> ATHAWA condition NEWLINE cmpdstmt optelse .

    DIYE            reduce using rule 53 (optelse -> ATHAWA condition NEWLINE cmpdstmt optelse .)


state 136

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp . NEWLINE cmpdstmt BAISA
    (24) exp -> exp . EQ exp
    (25) exp -> exp . LE exp
    (26) exp -> exp . GE exp
    (27) exp -> exp . NE exp
    (28) exp -> exp . LT exp
    (29) exp -> exp . GT exp
    (30) exp -> exp . PLUS exp
    (31) exp -> exp . MINUS exp
    (32) exp -> exp . TIMES exp
    (33) exp -> exp . DIVIDE exp
    (34) exp -> exp . POWER exp
    (35) exp -> exp . RA exp
    (36) exp -> exp . WA exp

    NEWLINE         shift and go to state 137
    EQ              shift and go to state 50
    LE              shift and go to state 37
    GE              shift and go to state 43
    NE              shift and go to state 41
    LT              shift and go to state 40
    GT              shift and go to state 44
    PLUS            shift and go to state 47
    MINUS           shift and go to state 51
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 38
    POWER           shift and go to state 39
    RA              shift and go to state 46
    WA              shift and go to state 48


state 137

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE . cmpdstmt BAISA
    (51) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (52) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (14) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (15) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (16) stmt -> . exp PATHAU
    (17) stmt -> . NEWLINE
    (45) dynamString -> . exp COMMA dynamString
    (46) dynamString -> . exp
    (24) exp -> . exp EQ exp
    (25) exp -> . exp LE exp
    (26) exp -> . exp GE exp
    (27) exp -> . exp NE exp
    (28) exp -> . exp LT exp
    (29) exp -> . exp GT exp
    (30) exp -> . exp PLUS exp
    (31) exp -> . exp MINUS exp
    (32) exp -> . exp TIMES exp
    (33) exp -> . exp DIVIDE exp
    (34) exp -> . exp POWER exp
    (35) exp -> . exp RA exp
    (36) exp -> . exp WA exp
    (37) exp -> . IDENTIFIER
    (38) exp -> . STRING
    (39) exp -> . NUMBER
    (40) exp -> . LGPARA variableexp RGPARA
    (41) exp -> . IDENTIFIER LGPARA exp RGPARA
    (42) exp -> . LPARA exp RPARA
    (43) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (44) exp -> . IDENTIFIER LPARA variableexp RPARA

    BAISA           reduce using rule 52 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 8
    YEDI            shift and go to state 1
    SABEI           shift and go to state 9
    JABA            shift and go to state 4
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 12
    LPARA           shift and go to state 2

    stmt                           shift and go to state 89
    dynamString                    shift and go to state 13
    cmpdstmt                       shift and go to state 138
    exp                            shift and go to state 15

state 138

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt . BAISA

    BAISA           shift and go to state 139


state 139

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .

    NEWLINE         reduce using rule 11 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .)
    $end            reduce using rule 11 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQ in state 76 resolved as shift
WARNING: shift/reduce conflict for LE in state 76 resolved as shift
WARNING: shift/reduce conflict for GE in state 76 resolved as shift
WARNING: shift/reduce conflict for NE in state 76 resolved as shift
WARNING: shift/reduce conflict for LT in state 76 resolved as shift
WARNING: shift/reduce conflict for GT in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for POWER in state 76 resolved as shift
WARNING: shift/reduce conflict for RA in state 76 resolved as shift
WARNING: shift/reduce conflict for WA in state 76 resolved as shift
WARNING: shift/reduce conflict for EQ in state 81 resolved as shift
WARNING: shift/reduce conflict for LE in state 81 resolved as shift
WARNING: shift/reduce conflict for GE in state 81 resolved as shift
WARNING: shift/reduce conflict for NE in state 81 resolved as shift
WARNING: shift/reduce conflict for LT in state 81 resolved as shift
WARNING: shift/reduce conflict for GT in state 81 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 81 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 81 resolved as shift
WARNING: shift/reduce conflict for POWER in state 81 resolved as shift
WARNING: shift/reduce conflict for RA in state 81 resolved as shift
WARNING: shift/reduce conflict for WA in state 81 resolved as shift
WARNING: shift/reduce conflict for EQ in state 83 resolved as shift
WARNING: shift/reduce conflict for LE in state 83 resolved as shift
WARNING: shift/reduce conflict for GE in state 83 resolved as shift
WARNING: shift/reduce conflict for NE in state 83 resolved as shift
WARNING: shift/reduce conflict for LT in state 83 resolved as shift
WARNING: shift/reduce conflict for GT in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 83 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 83 resolved as shift
WARNING: shift/reduce conflict for POWER in state 83 resolved as shift
WARNING: shift/reduce conflict for RA in state 83 resolved as shift
WARNING: shift/reduce conflict for WA in state 83 resolved as shift
WARNING: shift/reduce conflict for RA in state 88 resolved as shift
WARNING: shift/reduce conflict for WA in state 88 resolved as shift
WARNING: shift/reduce conflict for RA in state 91 resolved as shift
WARNING: shift/reduce conflict for WA in state 91 resolved as shift
WARNING: shift/reduce conflict for RA in state 111 resolved as shift
WARNING: shift/reduce conflict for WA in state 111 resolved as shift
WARNING: shift/reduce conflict for RA in state 113 resolved as shift
WARNING: shift/reduce conflict for WA in state 113 resolved as shift
WARNING: shift/reduce conflict for EQ in state 129 resolved as shift
WARNING: shift/reduce conflict for LE in state 129 resolved as shift
WARNING: shift/reduce conflict for GE in state 129 resolved as shift
WARNING: shift/reduce conflict for NE in state 129 resolved as shift
WARNING: shift/reduce conflict for LT in state 129 resolved as shift
WARNING: shift/reduce conflict for GT in state 129 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 129 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 129 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 129 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 129 resolved as shift
WARNING: shift/reduce conflict for POWER in state 129 resolved as shift
WARNING: shift/reduce conflict for RA in state 129 resolved as shift
WARNING: shift/reduce conflict for WA in state 129 resolved as shift
WARNING: reduce/reduce conflict in state 116 resolved using rule (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA)
WARNING: rejected rule (exp -> LGPARA variableexp RGPARA) in state 116
