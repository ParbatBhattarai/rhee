Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> N
Rule 1     N -> element NEWLINE N
Rule 2     N -> element
Rule 3     N -> <empty>
Rule 4     element -> stmt
Rule 5     stmt -> IDENTIFIER ASSIGNMENT exp
Rule 6     stmt -> dynamString LEKHA
Rule 7     stmt -> dynamString LEKHA SEMICOLON
Rule 8     stmt -> IDENTIFIER LEU
Rule 9     stmt -> IDENTIFIER incrementsign ASSIGNMENT exp
Rule 10    stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE
Rule 11    stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
Rule 12    stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
Rule 13    stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
Rule 14    stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
Rule 15    stmt -> IDENTIFIER LPARA variableexp RPARA
Rule 16    stmt -> exp PATHAU
Rule 17    variableArgs -> IDENTIFIER COMMA variableArgs
Rule 18    variableArgs -> IDENTIFIER
Rule 19    variableArgs -> <empty>
Rule 20    variableexp -> exp COMMA variableexp
Rule 21    variableexp -> exp
Rule 22    variableexp -> <empty>
Rule 23    exp -> exp EQ exp
Rule 24    exp -> exp LE exp
Rule 25    exp -> exp GE exp
Rule 26    exp -> exp NE exp
Rule 27    exp -> exp LT exp
Rule 28    exp -> exp GT exp
Rule 29    exp -> exp PLUS exp
Rule 30    exp -> exp MINUS exp
Rule 31    exp -> exp TIMES exp
Rule 32    exp -> exp DIVIDE exp
Rule 33    exp -> exp POWER exp
Rule 34    exp -> exp RA exp
Rule 35    exp -> exp WA exp
Rule 36    exp -> IDENTIFIER
Rule 37    exp -> STRING
Rule 38    exp -> NUMBER
Rule 39    exp -> LGPARA variableexp RGPARA
Rule 40    exp -> IDENTIFIER LGPARA exp RGPARA
Rule 41    exp -> LPARA exp RPARA
Rule 42    exp -> LPARA exp RPARA QUESTION exp COLON exp
Rule 43    dynamString -> exp COMMA dynamString
Rule 44    dynamString -> exp
Rule 45    condition -> condition RA condition
Rule 46    condition -> condition WA condition
Rule 47    condition -> exp BHAE
Rule 48    condition -> exp NABHAE
Rule 49    cmpdstmt -> stmt NEWLINE cmpdstmt
Rule 50    cmpdstmt -> <empty>
Rule 51    optelse -> ATHAWA condition NEWLINE cmpdstmt optelse
Rule 52    optelse -> ATHAWA NEWLINE cmpdstmt
Rule 53    optelse -> <empty>
Rule 54    sign -> PLUS
Rule 55    sign -> MINUS
Rule 56    incrementsign -> sign
Rule 57    incrementsign -> TIMES
Rule 58    incrementsign -> DIVIDE
Rule 59    whilecond -> whilecond RA whilecond
Rule 60    whilecond -> whilecond WA whilecond
Rule 61    whilecond -> exp CHHA
Rule 62    whilecond -> exp CHHAINA

Terminals, with rules where they appear

ASSIGNMENT           : 5 9 11 13
ATHAWA               : 51 52
BAISA                : 11
BAJA                 : 12
BHAE                 : 47
CHHA                 : 61
CHHAINA              : 62
COLON                : 42
COMMA                : 17 20 43
DEKHI                : 11
DIVIDE               : 32 58
DIYE                 : 10
EQ                   : 23
GE                   : 25
GT                   : 28
IDENTIFIER           : 5 8 9 11 13 14 15 17 18 36 40
JABA                 : 12
KAAM                 : 14
LE                   : 24
LEKHA                : 6 7
LEU                  : 8
LGPARA               : 13 39 40
LPARA                : 14 15 41 42
LT                   : 27
MAKA                 : 14
MINUS                : 30 55
NABHAE               : 48
NE                   : 26
NEWLINE              : 1 10 11 12 14 49 51 52
NUMBER               : 38
PATHAU               : 16
PLUS                 : 29 54
POWER                : 33
QUESTION             : 42
RA                   : 34 45 59
RGPARA               : 13 39 40
RPARA                : 14 15 41 42
SABEI                : 11
SAMMA                : 12
SEMICOLON            : 7 11
STRING               : 37
TIMES                : 31 57
WA                   : 35 46 60
YEDI                 : 10
error                : 

Nonterminals, with rules where they appear

N                    : 1 0
cmpdstmt             : 10 11 12 14 49 51 52
condition            : 10 45 45 46 46 51
dynamString          : 6 7 43
element              : 1 2
exp                  : 5 9 11 11 11 16 20 21 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 40 41 42 42 42 43 44 47 48 61 62
incrementsign        : 9
optelse              : 10 51
sign                 : 11 56
stmt                 : 4 49
variableArgs         : 14 17
variableexp          : 13 15 20 39
whilecond            : 12 59 59 60 60

Parsing method: LALR

state 0

    (0) S' -> . N
    (1) N -> . element NEWLINE N
    (2) N -> . element
    (3) N -> .
    (4) element -> . stmt
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (14) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (15) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (16) stmt -> . exp PATHAU
    (43) dynamString -> . exp COMMA dynamString
    (44) dynamString -> . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    $end            reduce using rule 3 (N -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 4
    KAAM            shift and go to state 6
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    stmt                           shift and go to state 9
    dynamString                    shift and go to state 12
    N                              shift and go to state 10
    exp                            shift and go to state 14
    element                        shift and go to state 13

state 1

    (10) stmt -> YEDI . condition NEWLINE cmpdstmt optelse DIYE
    (45) condition -> . condition RA condition
    (46) condition -> . condition WA condition
    (47) condition -> . exp BHAE
    (48) condition -> . exp NABHAE
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 17
    condition                      shift and go to state 16

state 2

    (41) exp -> LPARA . exp RPARA
    (42) exp -> LPARA . exp RPARA QUESTION exp COLON exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 18

state 3

    (38) exp -> NUMBER .

    EQ              reduce using rule 38 (exp -> NUMBER .)
    LE              reduce using rule 38 (exp -> NUMBER .)
    GE              reduce using rule 38 (exp -> NUMBER .)
    NE              reduce using rule 38 (exp -> NUMBER .)
    LT              reduce using rule 38 (exp -> NUMBER .)
    GT              reduce using rule 38 (exp -> NUMBER .)
    PLUS            reduce using rule 38 (exp -> NUMBER .)
    MINUS           reduce using rule 38 (exp -> NUMBER .)
    TIMES           reduce using rule 38 (exp -> NUMBER .)
    DIVIDE          reduce using rule 38 (exp -> NUMBER .)
    POWER           reduce using rule 38 (exp -> NUMBER .)
    RA              reduce using rule 38 (exp -> NUMBER .)
    WA              reduce using rule 38 (exp -> NUMBER .)
    PATHAU          reduce using rule 38 (exp -> NUMBER .)
    COMMA           reduce using rule 38 (exp -> NUMBER .)
    LEKHA           reduce using rule 38 (exp -> NUMBER .)
    BHAE            reduce using rule 38 (exp -> NUMBER .)
    NABHAE          reduce using rule 38 (exp -> NUMBER .)
    RPARA           reduce using rule 38 (exp -> NUMBER .)
    RGPARA          reduce using rule 38 (exp -> NUMBER .)
    CHHA            reduce using rule 38 (exp -> NUMBER .)
    CHHAINA         reduce using rule 38 (exp -> NUMBER .)
    NEWLINE         reduce using rule 38 (exp -> NUMBER .)
    $end            reduce using rule 38 (exp -> NUMBER .)
    DEKHI           reduce using rule 38 (exp -> NUMBER .)
    COLON           reduce using rule 38 (exp -> NUMBER .)
    SEMICOLON       reduce using rule 38 (exp -> NUMBER .)


state 4

    (12) stmt -> JABA . SAMMA whilecond NEWLINE cmpdstmt BAJA

    SAMMA           shift and go to state 19


state 5

    (37) exp -> STRING .

    EQ              reduce using rule 37 (exp -> STRING .)
    LE              reduce using rule 37 (exp -> STRING .)
    GE              reduce using rule 37 (exp -> STRING .)
    NE              reduce using rule 37 (exp -> STRING .)
    LT              reduce using rule 37 (exp -> STRING .)
    GT              reduce using rule 37 (exp -> STRING .)
    PLUS            reduce using rule 37 (exp -> STRING .)
    MINUS           reduce using rule 37 (exp -> STRING .)
    TIMES           reduce using rule 37 (exp -> STRING .)
    DIVIDE          reduce using rule 37 (exp -> STRING .)
    POWER           reduce using rule 37 (exp -> STRING .)
    RA              reduce using rule 37 (exp -> STRING .)
    WA              reduce using rule 37 (exp -> STRING .)
    PATHAU          reduce using rule 37 (exp -> STRING .)
    COMMA           reduce using rule 37 (exp -> STRING .)
    LEKHA           reduce using rule 37 (exp -> STRING .)
    BHAE            reduce using rule 37 (exp -> STRING .)
    NABHAE          reduce using rule 37 (exp -> STRING .)
    RPARA           reduce using rule 37 (exp -> STRING .)
    RGPARA          reduce using rule 37 (exp -> STRING .)
    CHHA            reduce using rule 37 (exp -> STRING .)
    CHHAINA         reduce using rule 37 (exp -> STRING .)
    NEWLINE         reduce using rule 37 (exp -> STRING .)
    $end            reduce using rule 37 (exp -> STRING .)
    DEKHI           reduce using rule 37 (exp -> STRING .)
    COLON           reduce using rule 37 (exp -> STRING .)
    SEMICOLON       reduce using rule 37 (exp -> STRING .)


state 6

    (14) stmt -> KAAM . IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA

    IDENTIFIER      shift and go to state 20


state 7

    (5) stmt -> IDENTIFIER . ASSIGNMENT exp
    (8) stmt -> IDENTIFIER . LEU
    (9) stmt -> IDENTIFIER . incrementsign ASSIGNMENT exp
    (13) stmt -> IDENTIFIER . ASSIGNMENT LGPARA variableexp RGPARA
    (15) stmt -> IDENTIFIER . LPARA variableexp RPARA
    (36) exp -> IDENTIFIER .
    (40) exp -> IDENTIFIER . LGPARA exp RGPARA
    (56) incrementsign -> . sign
    (57) incrementsign -> . TIMES
    (58) incrementsign -> . DIVIDE
    (54) sign -> . PLUS
    (55) sign -> . MINUS

    ASSIGNMENT      shift and go to state 23
    LEU             shift and go to state 27
    LPARA           shift and go to state 24
    PATHAU          reduce using rule 36 (exp -> IDENTIFIER .)
    COMMA           reduce using rule 36 (exp -> IDENTIFIER .)
    EQ              reduce using rule 36 (exp -> IDENTIFIER .)
    LE              reduce using rule 36 (exp -> IDENTIFIER .)
    GE              reduce using rule 36 (exp -> IDENTIFIER .)
    NE              reduce using rule 36 (exp -> IDENTIFIER .)
    LT              reduce using rule 36 (exp -> IDENTIFIER .)
    GT              reduce using rule 36 (exp -> IDENTIFIER .)
    POWER           reduce using rule 36 (exp -> IDENTIFIER .)
    RA              reduce using rule 36 (exp -> IDENTIFIER .)
    WA              reduce using rule 36 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 36 (exp -> IDENTIFIER .)
    LGPARA          shift and go to state 21
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 30
    PLUS            shift and go to state 26
    MINUS           shift and go to state 29

  ! PLUS            [ reduce using rule 36 (exp -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 36 (exp -> IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 36 (exp -> IDENTIFIER .) ]
  ! DIVIDE          [ reduce using rule 36 (exp -> IDENTIFIER .) ]

    incrementsign                  shift and go to state 28
    sign                           shift and go to state 25

state 8

    (11) stmt -> SABEI . IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA

    IDENTIFIER      shift and go to state 31


state 9

    (4) element -> stmt .

    NEWLINE         reduce using rule 4 (element -> stmt .)
    $end            reduce using rule 4 (element -> stmt .)


state 10

    (0) S' -> N .



state 11

    (39) exp -> LGPARA . variableexp RGPARA
    (20) variableexp -> . exp COMMA variableexp
    (21) variableexp -> . exp
    (22) variableexp -> .
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    RGPARA          reduce using rule 22 (variableexp -> .)
    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 33
    variableexp                    shift and go to state 32

state 12

    (6) stmt -> dynamString . LEKHA
    (7) stmt -> dynamString . LEKHA SEMICOLON

    LEKHA           shift and go to state 34


state 13

    (1) N -> element . NEWLINE N
    (2) N -> element .

    NEWLINE         shift and go to state 35
    $end            reduce using rule 2 (N -> element .)


state 14

    (16) stmt -> exp . PATHAU
    (43) dynamString -> exp . COMMA dynamString
    (44) dynamString -> exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    PATHAU          shift and go to state 41
    COMMA           shift and go to state 44
    LEKHA           reduce using rule 44 (dynamString -> exp .)
    EQ              shift and go to state 49
    LE              shift and go to state 36
    GE              shift and go to state 42
    NE              shift and go to state 40
    LT              shift and go to state 39
    GT              shift and go to state 43
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38
    RA              shift and go to state 45
    WA              shift and go to state 47


state 15

    (36) exp -> IDENTIFIER .
    (40) exp -> IDENTIFIER . LGPARA exp RGPARA

    EQ              reduce using rule 36 (exp -> IDENTIFIER .)
    LE              reduce using rule 36 (exp -> IDENTIFIER .)
    GE              reduce using rule 36 (exp -> IDENTIFIER .)
    NE              reduce using rule 36 (exp -> IDENTIFIER .)
    LT              reduce using rule 36 (exp -> IDENTIFIER .)
    GT              reduce using rule 36 (exp -> IDENTIFIER .)
    PLUS            reduce using rule 36 (exp -> IDENTIFIER .)
    MINUS           reduce using rule 36 (exp -> IDENTIFIER .)
    TIMES           reduce using rule 36 (exp -> IDENTIFIER .)
    DIVIDE          reduce using rule 36 (exp -> IDENTIFIER .)
    POWER           reduce using rule 36 (exp -> IDENTIFIER .)
    RA              reduce using rule 36 (exp -> IDENTIFIER .)
    WA              reduce using rule 36 (exp -> IDENTIFIER .)
    PATHAU          reduce using rule 36 (exp -> IDENTIFIER .)
    COMMA           reduce using rule 36 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 36 (exp -> IDENTIFIER .)
    BHAE            reduce using rule 36 (exp -> IDENTIFIER .)
    NABHAE          reduce using rule 36 (exp -> IDENTIFIER .)
    RPARA           reduce using rule 36 (exp -> IDENTIFIER .)
    RGPARA          reduce using rule 36 (exp -> IDENTIFIER .)
    CHHA            reduce using rule 36 (exp -> IDENTIFIER .)
    CHHAINA         reduce using rule 36 (exp -> IDENTIFIER .)
    NEWLINE         reduce using rule 36 (exp -> IDENTIFIER .)
    $end            reduce using rule 36 (exp -> IDENTIFIER .)
    DEKHI           reduce using rule 36 (exp -> IDENTIFIER .)
    COLON           reduce using rule 36 (exp -> IDENTIFIER .)
    SEMICOLON       reduce using rule 36 (exp -> IDENTIFIER .)
    LGPARA          shift and go to state 21


state 16

    (10) stmt -> YEDI condition . NEWLINE cmpdstmt optelse DIYE
    (45) condition -> condition . RA condition
    (46) condition -> condition . WA condition

    NEWLINE         shift and go to state 52
    RA              shift and go to state 53
    WA              shift and go to state 51


state 17

    (47) condition -> exp . BHAE
    (48) condition -> exp . NABHAE
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    BHAE            shift and go to state 54
    NABHAE          shift and go to state 55
    EQ              shift and go to state 49
    LE              shift and go to state 36
    GE              shift and go to state 42
    NE              shift and go to state 40
    LT              shift and go to state 39
    GT              shift and go to state 43
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38
    RA              shift and go to state 45
    WA              shift and go to state 47


state 18

    (41) exp -> LPARA exp . RPARA
    (42) exp -> LPARA exp . RPARA QUESTION exp COLON exp
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    RPARA           shift and go to state 56
    EQ              shift and go to state 49
    LE              shift and go to state 36
    GE              shift and go to state 42
    NE              shift and go to state 40
    LT              shift and go to state 39
    GT              shift and go to state 43
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38
    RA              shift and go to state 45
    WA              shift and go to state 47


state 19

    (12) stmt -> JABA SAMMA . whilecond NEWLINE cmpdstmt BAJA
    (59) whilecond -> . whilecond RA whilecond
    (60) whilecond -> . whilecond WA whilecond
    (61) whilecond -> . exp CHHA
    (62) whilecond -> . exp CHHAINA
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 58
    whilecond                      shift and go to state 57

state 20

    (14) stmt -> KAAM IDENTIFIER . LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA

    LPARA           shift and go to state 59


state 21

    (40) exp -> IDENTIFIER LGPARA . exp RGPARA
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 60

state 22

    (57) incrementsign -> TIMES .

    ASSIGNMENT      reduce using rule 57 (incrementsign -> TIMES .)


state 23

    (5) stmt -> IDENTIFIER ASSIGNMENT . exp
    (13) stmt -> IDENTIFIER ASSIGNMENT . LGPARA variableexp RGPARA
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    LGPARA          shift and go to state 61
    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 62

state 24

    (15) stmt -> IDENTIFIER LPARA . variableexp RPARA
    (20) variableexp -> . exp COMMA variableexp
    (21) variableexp -> . exp
    (22) variableexp -> .
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    RPARA           reduce using rule 22 (variableexp -> .)
    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 33
    variableexp                    shift and go to state 63

state 25

    (56) incrementsign -> sign .

    ASSIGNMENT      reduce using rule 56 (incrementsign -> sign .)


state 26

    (54) sign -> PLUS .

    ASSIGNMENT      reduce using rule 54 (sign -> PLUS .)
    IDENTIFIER      reduce using rule 54 (sign -> PLUS .)
    STRING          reduce using rule 54 (sign -> PLUS .)
    NUMBER          reduce using rule 54 (sign -> PLUS .)
    LGPARA          reduce using rule 54 (sign -> PLUS .)
    LPARA           reduce using rule 54 (sign -> PLUS .)


state 27

    (8) stmt -> IDENTIFIER LEU .

    NEWLINE         reduce using rule 8 (stmt -> IDENTIFIER LEU .)
    $end            reduce using rule 8 (stmt -> IDENTIFIER LEU .)


state 28

    (9) stmt -> IDENTIFIER incrementsign . ASSIGNMENT exp

    ASSIGNMENT      shift and go to state 64


state 29

    (55) sign -> MINUS .

    ASSIGNMENT      reduce using rule 55 (sign -> MINUS .)
    IDENTIFIER      reduce using rule 55 (sign -> MINUS .)
    STRING          reduce using rule 55 (sign -> MINUS .)
    NUMBER          reduce using rule 55 (sign -> MINUS .)
    LGPARA          reduce using rule 55 (sign -> MINUS .)
    LPARA           reduce using rule 55 (sign -> MINUS .)


state 30

    (58) incrementsign -> DIVIDE .

    ASSIGNMENT      reduce using rule 58 (incrementsign -> DIVIDE .)


state 31

    (11) stmt -> SABEI IDENTIFIER . ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA

    ASSIGNMENT      shift and go to state 65


state 32

    (39) exp -> LGPARA variableexp . RGPARA

    RGPARA          shift and go to state 66


state 33

    (20) variableexp -> exp . COMMA variableexp
    (21) variableexp -> exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    COMMA           shift and go to state 67
    RPARA           reduce using rule 21 (variableexp -> exp .)
    RGPARA          reduce using rule 21 (variableexp -> exp .)
    EQ              shift and go to state 49
    LE              shift and go to state 36
    GE              shift and go to state 42
    NE              shift and go to state 40
    LT              shift and go to state 39
    GT              shift and go to state 43
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38
    RA              shift and go to state 45
    WA              shift and go to state 47


state 34

    (6) stmt -> dynamString LEKHA .
    (7) stmt -> dynamString LEKHA . SEMICOLON

    NEWLINE         reduce using rule 6 (stmt -> dynamString LEKHA .)
    $end            reduce using rule 6 (stmt -> dynamString LEKHA .)
    SEMICOLON       shift and go to state 68


state 35

    (1) N -> element NEWLINE . N
    (1) N -> . element NEWLINE N
    (2) N -> . element
    (3) N -> .
    (4) element -> . stmt
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (14) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (15) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (16) stmt -> . exp PATHAU
    (43) dynamString -> . exp COMMA dynamString
    (44) dynamString -> . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    $end            reduce using rule 3 (N -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 4
    KAAM            shift and go to state 6
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    stmt                           shift and go to state 9
    dynamString                    shift and go to state 12
    exp                            shift and go to state 14
    element                        shift and go to state 13
    N                              shift and go to state 69

state 36

    (24) exp -> exp LE . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 70

state 37

    (32) exp -> exp DIVIDE . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 71

state 38

    (33) exp -> exp POWER . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 72

state 39

    (27) exp -> exp LT . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 73

state 40

    (26) exp -> exp NE . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 74

state 41

    (16) stmt -> exp PATHAU .

    NEWLINE         reduce using rule 16 (stmt -> exp PATHAU .)
    $end            reduce using rule 16 (stmt -> exp PATHAU .)


state 42

    (25) exp -> exp GE . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 75

state 43

    (28) exp -> exp GT . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 76

state 44

    (43) dynamString -> exp COMMA . dynamString
    (43) dynamString -> . exp COMMA dynamString
    (44) dynamString -> . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 78
    dynamString                    shift and go to state 77

state 45

    (34) exp -> exp RA . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 79

state 46

    (29) exp -> exp PLUS . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 80

state 47

    (35) exp -> exp WA . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 81

state 48

    (31) exp -> exp TIMES . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 82

state 49

    (23) exp -> exp EQ . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 83

state 50

    (30) exp -> exp MINUS . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 84

state 51

    (46) condition -> condition WA . condition
    (45) condition -> . condition RA condition
    (46) condition -> . condition WA condition
    (47) condition -> . exp BHAE
    (48) condition -> . exp NABHAE
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 17
    condition                      shift and go to state 85

state 52

    (10) stmt -> YEDI condition NEWLINE . cmpdstmt optelse DIYE
    (49) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (50) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (14) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (15) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (16) stmt -> . exp PATHAU
    (43) dynamString -> . exp COMMA dynamString
    (44) dynamString -> . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    ATHAWA          reduce using rule 50 (cmpdstmt -> .)
    DIYE            reduce using rule 50 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 4
    KAAM            shift and go to state 6
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    stmt                           shift and go to state 86
    dynamString                    shift and go to state 12
    cmpdstmt                       shift and go to state 87
    exp                            shift and go to state 14

state 53

    (45) condition -> condition RA . condition
    (45) condition -> . condition RA condition
    (46) condition -> . condition WA condition
    (47) condition -> . exp BHAE
    (48) condition -> . exp NABHAE
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 17
    condition                      shift and go to state 88

state 54

    (47) condition -> exp BHAE .

    NEWLINE         reduce using rule 47 (condition -> exp BHAE .)
    RA              reduce using rule 47 (condition -> exp BHAE .)
    WA              reduce using rule 47 (condition -> exp BHAE .)


state 55

    (48) condition -> exp NABHAE .

    NEWLINE         reduce using rule 48 (condition -> exp NABHAE .)
    RA              reduce using rule 48 (condition -> exp NABHAE .)
    WA              reduce using rule 48 (condition -> exp NABHAE .)


state 56

    (41) exp -> LPARA exp RPARA .
    (42) exp -> LPARA exp RPARA . QUESTION exp COLON exp

    EQ              reduce using rule 41 (exp -> LPARA exp RPARA .)
    LE              reduce using rule 41 (exp -> LPARA exp RPARA .)
    GE              reduce using rule 41 (exp -> LPARA exp RPARA .)
    NE              reduce using rule 41 (exp -> LPARA exp RPARA .)
    LT              reduce using rule 41 (exp -> LPARA exp RPARA .)
    GT              reduce using rule 41 (exp -> LPARA exp RPARA .)
    PLUS            reduce using rule 41 (exp -> LPARA exp RPARA .)
    MINUS           reduce using rule 41 (exp -> LPARA exp RPARA .)
    TIMES           reduce using rule 41 (exp -> LPARA exp RPARA .)
    DIVIDE          reduce using rule 41 (exp -> LPARA exp RPARA .)
    POWER           reduce using rule 41 (exp -> LPARA exp RPARA .)
    RA              reduce using rule 41 (exp -> LPARA exp RPARA .)
    WA              reduce using rule 41 (exp -> LPARA exp RPARA .)
    PATHAU          reduce using rule 41 (exp -> LPARA exp RPARA .)
    COMMA           reduce using rule 41 (exp -> LPARA exp RPARA .)
    LEKHA           reduce using rule 41 (exp -> LPARA exp RPARA .)
    BHAE            reduce using rule 41 (exp -> LPARA exp RPARA .)
    NABHAE          reduce using rule 41 (exp -> LPARA exp RPARA .)
    RPARA           reduce using rule 41 (exp -> LPARA exp RPARA .)
    RGPARA          reduce using rule 41 (exp -> LPARA exp RPARA .)
    CHHA            reduce using rule 41 (exp -> LPARA exp RPARA .)
    CHHAINA         reduce using rule 41 (exp -> LPARA exp RPARA .)
    NEWLINE         reduce using rule 41 (exp -> LPARA exp RPARA .)
    $end            reduce using rule 41 (exp -> LPARA exp RPARA .)
    DEKHI           reduce using rule 41 (exp -> LPARA exp RPARA .)
    COLON           reduce using rule 41 (exp -> LPARA exp RPARA .)
    SEMICOLON       reduce using rule 41 (exp -> LPARA exp RPARA .)
    QUESTION        shift and go to state 89


state 57

    (12) stmt -> JABA SAMMA whilecond . NEWLINE cmpdstmt BAJA
    (59) whilecond -> whilecond . RA whilecond
    (60) whilecond -> whilecond . WA whilecond

    NEWLINE         shift and go to state 91
    RA              shift and go to state 92
    WA              shift and go to state 90


state 58

    (61) whilecond -> exp . CHHA
    (62) whilecond -> exp . CHHAINA
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    CHHA            shift and go to state 93
    CHHAINA         shift and go to state 94
    EQ              shift and go to state 49
    LE              shift and go to state 36
    GE              shift and go to state 42
    NE              shift and go to state 40
    LT              shift and go to state 39
    GT              shift and go to state 43
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38
    RA              shift and go to state 45
    WA              shift and go to state 47


state 59

    (14) stmt -> KAAM IDENTIFIER LPARA . variableArgs RPARA NEWLINE cmpdstmt MAKA
    (17) variableArgs -> . IDENTIFIER COMMA variableArgs
    (18) variableArgs -> . IDENTIFIER
    (19) variableArgs -> .

    IDENTIFIER      shift and go to state 96
    RPARA           reduce using rule 19 (variableArgs -> .)

    variableArgs                   shift and go to state 95

state 60

    (40) exp -> IDENTIFIER LGPARA exp . RGPARA
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    RGPARA          shift and go to state 97
    EQ              shift and go to state 49
    LE              shift and go to state 36
    GE              shift and go to state 42
    NE              shift and go to state 40
    LT              shift and go to state 39
    GT              shift and go to state 43
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38
    RA              shift and go to state 45
    WA              shift and go to state 47


state 61

    (13) stmt -> IDENTIFIER ASSIGNMENT LGPARA . variableexp RGPARA
    (39) exp -> LGPARA . variableexp RGPARA
    (20) variableexp -> . exp COMMA variableexp
    (21) variableexp -> . exp
    (22) variableexp -> .
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    RGPARA          reduce using rule 22 (variableexp -> .)
    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 33
    variableexp                    shift and go to state 98

state 62

    (5) stmt -> IDENTIFIER ASSIGNMENT exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    NEWLINE         reduce using rule 5 (stmt -> IDENTIFIER ASSIGNMENT exp .)
    $end            reduce using rule 5 (stmt -> IDENTIFIER ASSIGNMENT exp .)
    EQ              shift and go to state 49
    LE              shift and go to state 36
    GE              shift and go to state 42
    NE              shift and go to state 40
    LT              shift and go to state 39
    GT              shift and go to state 43
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38
    RA              shift and go to state 45
    WA              shift and go to state 47


state 63

    (15) stmt -> IDENTIFIER LPARA variableexp . RPARA

    RPARA           shift and go to state 99


state 64

    (9) stmt -> IDENTIFIER incrementsign ASSIGNMENT . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 100

state 65

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT . exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 101

state 66

    (39) exp -> LGPARA variableexp RGPARA .

    EQ              reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    LE              reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    GE              reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    NE              reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    LT              reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    GT              reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    PLUS            reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    MINUS           reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    TIMES           reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    DIVIDE          reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    POWER           reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    RA              reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    WA              reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    PATHAU          reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    COMMA           reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    LEKHA           reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    BHAE            reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    NABHAE          reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    RPARA           reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    RGPARA          reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    CHHA            reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    CHHAINA         reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    NEWLINE         reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    $end            reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    DEKHI           reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    COLON           reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    SEMICOLON       reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)


state 67

    (20) variableexp -> exp COMMA . variableexp
    (20) variableexp -> . exp COMMA variableexp
    (21) variableexp -> . exp
    (22) variableexp -> .
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    RGPARA          reduce using rule 22 (variableexp -> .)
    RPARA           reduce using rule 22 (variableexp -> .)
    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    variableexp                    shift and go to state 102
    exp                            shift and go to state 33

state 68

    (7) stmt -> dynamString LEKHA SEMICOLON .

    NEWLINE         reduce using rule 7 (stmt -> dynamString LEKHA SEMICOLON .)
    $end            reduce using rule 7 (stmt -> dynamString LEKHA SEMICOLON .)


state 69

    (1) N -> element NEWLINE N .

    $end            reduce using rule 1 (N -> element NEWLINE N .)


state 70

    (24) exp -> exp LE exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    EQ              reduce using rule 24 (exp -> exp LE exp .)
    LE              reduce using rule 24 (exp -> exp LE exp .)
    GE              reduce using rule 24 (exp -> exp LE exp .)
    NE              reduce using rule 24 (exp -> exp LE exp .)
    LT              reduce using rule 24 (exp -> exp LE exp .)
    GT              reduce using rule 24 (exp -> exp LE exp .)
    RA              reduce using rule 24 (exp -> exp LE exp .)
    WA              reduce using rule 24 (exp -> exp LE exp .)
    PATHAU          reduce using rule 24 (exp -> exp LE exp .)
    COMMA           reduce using rule 24 (exp -> exp LE exp .)
    LEKHA           reduce using rule 24 (exp -> exp LE exp .)
    BHAE            reduce using rule 24 (exp -> exp LE exp .)
    NABHAE          reduce using rule 24 (exp -> exp LE exp .)
    RPARA           reduce using rule 24 (exp -> exp LE exp .)
    RGPARA          reduce using rule 24 (exp -> exp LE exp .)
    CHHA            reduce using rule 24 (exp -> exp LE exp .)
    CHHAINA         reduce using rule 24 (exp -> exp LE exp .)
    NEWLINE         reduce using rule 24 (exp -> exp LE exp .)
    $end            reduce using rule 24 (exp -> exp LE exp .)
    DEKHI           reduce using rule 24 (exp -> exp LE exp .)
    COLON           reduce using rule 24 (exp -> exp LE exp .)
    SEMICOLON       reduce using rule 24 (exp -> exp LE exp .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38

  ! PLUS            [ reduce using rule 24 (exp -> exp LE exp .) ]
  ! MINUS           [ reduce using rule 24 (exp -> exp LE exp .) ]
  ! TIMES           [ reduce using rule 24 (exp -> exp LE exp .) ]
  ! DIVIDE          [ reduce using rule 24 (exp -> exp LE exp .) ]
  ! POWER           [ reduce using rule 24 (exp -> exp LE exp .) ]
  ! EQ              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 40 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 43 ]
  ! RA              [ shift and go to state 45 ]
  ! WA              [ shift and go to state 47 ]


state 71

    (32) exp -> exp DIVIDE exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    EQ              reduce using rule 32 (exp -> exp DIVIDE exp .)
    LE              reduce using rule 32 (exp -> exp DIVIDE exp .)
    GE              reduce using rule 32 (exp -> exp DIVIDE exp .)
    NE              reduce using rule 32 (exp -> exp DIVIDE exp .)
    LT              reduce using rule 32 (exp -> exp DIVIDE exp .)
    GT              reduce using rule 32 (exp -> exp DIVIDE exp .)
    PLUS            reduce using rule 32 (exp -> exp DIVIDE exp .)
    MINUS           reduce using rule 32 (exp -> exp DIVIDE exp .)
    TIMES           reduce using rule 32 (exp -> exp DIVIDE exp .)
    DIVIDE          reduce using rule 32 (exp -> exp DIVIDE exp .)
    POWER           reduce using rule 32 (exp -> exp DIVIDE exp .)
    RA              reduce using rule 32 (exp -> exp DIVIDE exp .)
    WA              reduce using rule 32 (exp -> exp DIVIDE exp .)
    PATHAU          reduce using rule 32 (exp -> exp DIVIDE exp .)
    COMMA           reduce using rule 32 (exp -> exp DIVIDE exp .)
    LEKHA           reduce using rule 32 (exp -> exp DIVIDE exp .)
    BHAE            reduce using rule 32 (exp -> exp DIVIDE exp .)
    NABHAE          reduce using rule 32 (exp -> exp DIVIDE exp .)
    RPARA           reduce using rule 32 (exp -> exp DIVIDE exp .)
    RGPARA          reduce using rule 32 (exp -> exp DIVIDE exp .)
    CHHA            reduce using rule 32 (exp -> exp DIVIDE exp .)
    CHHAINA         reduce using rule 32 (exp -> exp DIVIDE exp .)
    NEWLINE         reduce using rule 32 (exp -> exp DIVIDE exp .)
    $end            reduce using rule 32 (exp -> exp DIVIDE exp .)
    DEKHI           reduce using rule 32 (exp -> exp DIVIDE exp .)
    COLON           reduce using rule 32 (exp -> exp DIVIDE exp .)
    SEMICOLON       reduce using rule 32 (exp -> exp DIVIDE exp .)

  ! EQ              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 40 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 43 ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 50 ]
  ! TIMES           [ shift and go to state 48 ]
  ! DIVIDE          [ shift and go to state 37 ]
  ! POWER           [ shift and go to state 38 ]
  ! RA              [ shift and go to state 45 ]
  ! WA              [ shift and go to state 47 ]


state 72

    (33) exp -> exp POWER exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    EQ              reduce using rule 33 (exp -> exp POWER exp .)
    LE              reduce using rule 33 (exp -> exp POWER exp .)
    GE              reduce using rule 33 (exp -> exp POWER exp .)
    NE              reduce using rule 33 (exp -> exp POWER exp .)
    LT              reduce using rule 33 (exp -> exp POWER exp .)
    GT              reduce using rule 33 (exp -> exp POWER exp .)
    PLUS            reduce using rule 33 (exp -> exp POWER exp .)
    MINUS           reduce using rule 33 (exp -> exp POWER exp .)
    TIMES           reduce using rule 33 (exp -> exp POWER exp .)
    DIVIDE          reduce using rule 33 (exp -> exp POWER exp .)
    POWER           reduce using rule 33 (exp -> exp POWER exp .)
    RA              reduce using rule 33 (exp -> exp POWER exp .)
    WA              reduce using rule 33 (exp -> exp POWER exp .)
    PATHAU          reduce using rule 33 (exp -> exp POWER exp .)
    COMMA           reduce using rule 33 (exp -> exp POWER exp .)
    LEKHA           reduce using rule 33 (exp -> exp POWER exp .)
    BHAE            reduce using rule 33 (exp -> exp POWER exp .)
    NABHAE          reduce using rule 33 (exp -> exp POWER exp .)
    RPARA           reduce using rule 33 (exp -> exp POWER exp .)
    RGPARA          reduce using rule 33 (exp -> exp POWER exp .)
    CHHA            reduce using rule 33 (exp -> exp POWER exp .)
    CHHAINA         reduce using rule 33 (exp -> exp POWER exp .)
    NEWLINE         reduce using rule 33 (exp -> exp POWER exp .)
    $end            reduce using rule 33 (exp -> exp POWER exp .)
    DEKHI           reduce using rule 33 (exp -> exp POWER exp .)
    COLON           reduce using rule 33 (exp -> exp POWER exp .)
    SEMICOLON       reduce using rule 33 (exp -> exp POWER exp .)

  ! EQ              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 40 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 43 ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 50 ]
  ! TIMES           [ shift and go to state 48 ]
  ! DIVIDE          [ shift and go to state 37 ]
  ! POWER           [ shift and go to state 38 ]
  ! RA              [ shift and go to state 45 ]
  ! WA              [ shift and go to state 47 ]


state 73

    (27) exp -> exp LT exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    EQ              reduce using rule 27 (exp -> exp LT exp .)
    LE              reduce using rule 27 (exp -> exp LT exp .)
    GE              reduce using rule 27 (exp -> exp LT exp .)
    NE              reduce using rule 27 (exp -> exp LT exp .)
    LT              reduce using rule 27 (exp -> exp LT exp .)
    GT              reduce using rule 27 (exp -> exp LT exp .)
    RA              reduce using rule 27 (exp -> exp LT exp .)
    WA              reduce using rule 27 (exp -> exp LT exp .)
    PATHAU          reduce using rule 27 (exp -> exp LT exp .)
    COMMA           reduce using rule 27 (exp -> exp LT exp .)
    LEKHA           reduce using rule 27 (exp -> exp LT exp .)
    BHAE            reduce using rule 27 (exp -> exp LT exp .)
    NABHAE          reduce using rule 27 (exp -> exp LT exp .)
    RPARA           reduce using rule 27 (exp -> exp LT exp .)
    RGPARA          reduce using rule 27 (exp -> exp LT exp .)
    CHHA            reduce using rule 27 (exp -> exp LT exp .)
    CHHAINA         reduce using rule 27 (exp -> exp LT exp .)
    NEWLINE         reduce using rule 27 (exp -> exp LT exp .)
    $end            reduce using rule 27 (exp -> exp LT exp .)
    DEKHI           reduce using rule 27 (exp -> exp LT exp .)
    COLON           reduce using rule 27 (exp -> exp LT exp .)
    SEMICOLON       reduce using rule 27 (exp -> exp LT exp .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38

  ! PLUS            [ reduce using rule 27 (exp -> exp LT exp .) ]
  ! MINUS           [ reduce using rule 27 (exp -> exp LT exp .) ]
  ! TIMES           [ reduce using rule 27 (exp -> exp LT exp .) ]
  ! DIVIDE          [ reduce using rule 27 (exp -> exp LT exp .) ]
  ! POWER           [ reduce using rule 27 (exp -> exp LT exp .) ]
  ! EQ              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 40 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 43 ]
  ! RA              [ shift and go to state 45 ]
  ! WA              [ shift and go to state 47 ]


state 74

    (26) exp -> exp NE exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 26 (exp -> exp NE exp .)
    COMMA           reduce using rule 26 (exp -> exp NE exp .)
    LEKHA           reduce using rule 26 (exp -> exp NE exp .)
    BHAE            reduce using rule 26 (exp -> exp NE exp .)
    NABHAE          reduce using rule 26 (exp -> exp NE exp .)
    RPARA           reduce using rule 26 (exp -> exp NE exp .)
    RGPARA          reduce using rule 26 (exp -> exp NE exp .)
    CHHA            reduce using rule 26 (exp -> exp NE exp .)
    CHHAINA         reduce using rule 26 (exp -> exp NE exp .)
    NEWLINE         reduce using rule 26 (exp -> exp NE exp .)
    $end            reduce using rule 26 (exp -> exp NE exp .)
    DEKHI           reduce using rule 26 (exp -> exp NE exp .)
    COLON           reduce using rule 26 (exp -> exp NE exp .)
    SEMICOLON       reduce using rule 26 (exp -> exp NE exp .)
    EQ              shift and go to state 49
    LE              shift and go to state 36
    GE              shift and go to state 42
    NE              shift and go to state 40
    LT              shift and go to state 39
    GT              shift and go to state 43
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38
    RA              shift and go to state 45
    WA              shift and go to state 47

  ! EQ              [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! LE              [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! GE              [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! NE              [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! LT              [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! GT              [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! PLUS            [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! MINUS           [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! TIMES           [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! DIVIDE          [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! POWER           [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! RA              [ reduce using rule 26 (exp -> exp NE exp .) ]
  ! WA              [ reduce using rule 26 (exp -> exp NE exp .) ]


state 75

    (25) exp -> exp GE exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    EQ              reduce using rule 25 (exp -> exp GE exp .)
    LE              reduce using rule 25 (exp -> exp GE exp .)
    GE              reduce using rule 25 (exp -> exp GE exp .)
    NE              reduce using rule 25 (exp -> exp GE exp .)
    LT              reduce using rule 25 (exp -> exp GE exp .)
    GT              reduce using rule 25 (exp -> exp GE exp .)
    RA              reduce using rule 25 (exp -> exp GE exp .)
    WA              reduce using rule 25 (exp -> exp GE exp .)
    PATHAU          reduce using rule 25 (exp -> exp GE exp .)
    COMMA           reduce using rule 25 (exp -> exp GE exp .)
    LEKHA           reduce using rule 25 (exp -> exp GE exp .)
    BHAE            reduce using rule 25 (exp -> exp GE exp .)
    NABHAE          reduce using rule 25 (exp -> exp GE exp .)
    RPARA           reduce using rule 25 (exp -> exp GE exp .)
    RGPARA          reduce using rule 25 (exp -> exp GE exp .)
    CHHA            reduce using rule 25 (exp -> exp GE exp .)
    CHHAINA         reduce using rule 25 (exp -> exp GE exp .)
    NEWLINE         reduce using rule 25 (exp -> exp GE exp .)
    $end            reduce using rule 25 (exp -> exp GE exp .)
    DEKHI           reduce using rule 25 (exp -> exp GE exp .)
    COLON           reduce using rule 25 (exp -> exp GE exp .)
    SEMICOLON       reduce using rule 25 (exp -> exp GE exp .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38

  ! PLUS            [ reduce using rule 25 (exp -> exp GE exp .) ]
  ! MINUS           [ reduce using rule 25 (exp -> exp GE exp .) ]
  ! TIMES           [ reduce using rule 25 (exp -> exp GE exp .) ]
  ! DIVIDE          [ reduce using rule 25 (exp -> exp GE exp .) ]
  ! POWER           [ reduce using rule 25 (exp -> exp GE exp .) ]
  ! EQ              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 40 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 43 ]
  ! RA              [ shift and go to state 45 ]
  ! WA              [ shift and go to state 47 ]


state 76

    (28) exp -> exp GT exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    EQ              reduce using rule 28 (exp -> exp GT exp .)
    LE              reduce using rule 28 (exp -> exp GT exp .)
    GE              reduce using rule 28 (exp -> exp GT exp .)
    NE              reduce using rule 28 (exp -> exp GT exp .)
    LT              reduce using rule 28 (exp -> exp GT exp .)
    GT              reduce using rule 28 (exp -> exp GT exp .)
    RA              reduce using rule 28 (exp -> exp GT exp .)
    WA              reduce using rule 28 (exp -> exp GT exp .)
    PATHAU          reduce using rule 28 (exp -> exp GT exp .)
    COMMA           reduce using rule 28 (exp -> exp GT exp .)
    LEKHA           reduce using rule 28 (exp -> exp GT exp .)
    BHAE            reduce using rule 28 (exp -> exp GT exp .)
    NABHAE          reduce using rule 28 (exp -> exp GT exp .)
    RPARA           reduce using rule 28 (exp -> exp GT exp .)
    RGPARA          reduce using rule 28 (exp -> exp GT exp .)
    CHHA            reduce using rule 28 (exp -> exp GT exp .)
    CHHAINA         reduce using rule 28 (exp -> exp GT exp .)
    NEWLINE         reduce using rule 28 (exp -> exp GT exp .)
    $end            reduce using rule 28 (exp -> exp GT exp .)
    DEKHI           reduce using rule 28 (exp -> exp GT exp .)
    COLON           reduce using rule 28 (exp -> exp GT exp .)
    SEMICOLON       reduce using rule 28 (exp -> exp GT exp .)
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38

  ! PLUS            [ reduce using rule 28 (exp -> exp GT exp .) ]
  ! MINUS           [ reduce using rule 28 (exp -> exp GT exp .) ]
  ! TIMES           [ reduce using rule 28 (exp -> exp GT exp .) ]
  ! DIVIDE          [ reduce using rule 28 (exp -> exp GT exp .) ]
  ! POWER           [ reduce using rule 28 (exp -> exp GT exp .) ]
  ! EQ              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 40 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 43 ]
  ! RA              [ shift and go to state 45 ]
  ! WA              [ shift and go to state 47 ]


state 77

    (43) dynamString -> exp COMMA dynamString .

    LEKHA           reduce using rule 43 (dynamString -> exp COMMA dynamString .)


state 78

    (43) dynamString -> exp . COMMA dynamString
    (44) dynamString -> exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    COMMA           shift and go to state 44
    LEKHA           reduce using rule 44 (dynamString -> exp .)
    EQ              shift and go to state 49
    LE              shift and go to state 36
    GE              shift and go to state 42
    NE              shift and go to state 40
    LT              shift and go to state 39
    GT              shift and go to state 43
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38
    RA              shift and go to state 45
    WA              shift and go to state 47


state 79

    (34) exp -> exp RA exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 34 (exp -> exp RA exp .)
    COMMA           reduce using rule 34 (exp -> exp RA exp .)
    LEKHA           reduce using rule 34 (exp -> exp RA exp .)
    BHAE            reduce using rule 34 (exp -> exp RA exp .)
    NABHAE          reduce using rule 34 (exp -> exp RA exp .)
    RPARA           reduce using rule 34 (exp -> exp RA exp .)
    RGPARA          reduce using rule 34 (exp -> exp RA exp .)
    CHHA            reduce using rule 34 (exp -> exp RA exp .)
    CHHAINA         reduce using rule 34 (exp -> exp RA exp .)
    NEWLINE         reduce using rule 34 (exp -> exp RA exp .)
    $end            reduce using rule 34 (exp -> exp RA exp .)
    DEKHI           reduce using rule 34 (exp -> exp RA exp .)
    COLON           reduce using rule 34 (exp -> exp RA exp .)
    SEMICOLON       reduce using rule 34 (exp -> exp RA exp .)
    EQ              shift and go to state 49
    LE              shift and go to state 36
    GE              shift and go to state 42
    NE              shift and go to state 40
    LT              shift and go to state 39
    GT              shift and go to state 43
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38
    RA              shift and go to state 45
    WA              shift and go to state 47

  ! EQ              [ reduce using rule 34 (exp -> exp RA exp .) ]
  ! LE              [ reduce using rule 34 (exp -> exp RA exp .) ]
  ! GE              [ reduce using rule 34 (exp -> exp RA exp .) ]
  ! NE              [ reduce using rule 34 (exp -> exp RA exp .) ]
  ! LT              [ reduce using rule 34 (exp -> exp RA exp .) ]
  ! GT              [ reduce using rule 34 (exp -> exp RA exp .) ]
  ! PLUS            [ reduce using rule 34 (exp -> exp RA exp .) ]
  ! MINUS           [ reduce using rule 34 (exp -> exp RA exp .) ]
  ! TIMES           [ reduce using rule 34 (exp -> exp RA exp .) ]
  ! DIVIDE          [ reduce using rule 34 (exp -> exp RA exp .) ]
  ! POWER           [ reduce using rule 34 (exp -> exp RA exp .) ]
  ! RA              [ reduce using rule 34 (exp -> exp RA exp .) ]
  ! WA              [ reduce using rule 34 (exp -> exp RA exp .) ]


state 80

    (29) exp -> exp PLUS exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    EQ              reduce using rule 29 (exp -> exp PLUS exp .)
    LE              reduce using rule 29 (exp -> exp PLUS exp .)
    GE              reduce using rule 29 (exp -> exp PLUS exp .)
    NE              reduce using rule 29 (exp -> exp PLUS exp .)
    LT              reduce using rule 29 (exp -> exp PLUS exp .)
    GT              reduce using rule 29 (exp -> exp PLUS exp .)
    PLUS            reduce using rule 29 (exp -> exp PLUS exp .)
    MINUS           reduce using rule 29 (exp -> exp PLUS exp .)
    RA              reduce using rule 29 (exp -> exp PLUS exp .)
    WA              reduce using rule 29 (exp -> exp PLUS exp .)
    PATHAU          reduce using rule 29 (exp -> exp PLUS exp .)
    COMMA           reduce using rule 29 (exp -> exp PLUS exp .)
    LEKHA           reduce using rule 29 (exp -> exp PLUS exp .)
    BHAE            reduce using rule 29 (exp -> exp PLUS exp .)
    NABHAE          reduce using rule 29 (exp -> exp PLUS exp .)
    RPARA           reduce using rule 29 (exp -> exp PLUS exp .)
    RGPARA          reduce using rule 29 (exp -> exp PLUS exp .)
    CHHA            reduce using rule 29 (exp -> exp PLUS exp .)
    CHHAINA         reduce using rule 29 (exp -> exp PLUS exp .)
    NEWLINE         reduce using rule 29 (exp -> exp PLUS exp .)
    $end            reduce using rule 29 (exp -> exp PLUS exp .)
    DEKHI           reduce using rule 29 (exp -> exp PLUS exp .)
    COLON           reduce using rule 29 (exp -> exp PLUS exp .)
    SEMICOLON       reduce using rule 29 (exp -> exp PLUS exp .)
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38

  ! TIMES           [ reduce using rule 29 (exp -> exp PLUS exp .) ]
  ! DIVIDE          [ reduce using rule 29 (exp -> exp PLUS exp .) ]
  ! POWER           [ reduce using rule 29 (exp -> exp PLUS exp .) ]
  ! EQ              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 40 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 43 ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 50 ]
  ! RA              [ shift and go to state 45 ]
  ! WA              [ shift and go to state 47 ]


state 81

    (35) exp -> exp WA exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 35 (exp -> exp WA exp .)
    COMMA           reduce using rule 35 (exp -> exp WA exp .)
    LEKHA           reduce using rule 35 (exp -> exp WA exp .)
    BHAE            reduce using rule 35 (exp -> exp WA exp .)
    NABHAE          reduce using rule 35 (exp -> exp WA exp .)
    RPARA           reduce using rule 35 (exp -> exp WA exp .)
    RGPARA          reduce using rule 35 (exp -> exp WA exp .)
    CHHA            reduce using rule 35 (exp -> exp WA exp .)
    CHHAINA         reduce using rule 35 (exp -> exp WA exp .)
    NEWLINE         reduce using rule 35 (exp -> exp WA exp .)
    $end            reduce using rule 35 (exp -> exp WA exp .)
    DEKHI           reduce using rule 35 (exp -> exp WA exp .)
    COLON           reduce using rule 35 (exp -> exp WA exp .)
    SEMICOLON       reduce using rule 35 (exp -> exp WA exp .)
    EQ              shift and go to state 49
    LE              shift and go to state 36
    GE              shift and go to state 42
    NE              shift and go to state 40
    LT              shift and go to state 39
    GT              shift and go to state 43
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38
    RA              shift and go to state 45
    WA              shift and go to state 47

  ! EQ              [ reduce using rule 35 (exp -> exp WA exp .) ]
  ! LE              [ reduce using rule 35 (exp -> exp WA exp .) ]
  ! GE              [ reduce using rule 35 (exp -> exp WA exp .) ]
  ! NE              [ reduce using rule 35 (exp -> exp WA exp .) ]
  ! LT              [ reduce using rule 35 (exp -> exp WA exp .) ]
  ! GT              [ reduce using rule 35 (exp -> exp WA exp .) ]
  ! PLUS            [ reduce using rule 35 (exp -> exp WA exp .) ]
  ! MINUS           [ reduce using rule 35 (exp -> exp WA exp .) ]
  ! TIMES           [ reduce using rule 35 (exp -> exp WA exp .) ]
  ! DIVIDE          [ reduce using rule 35 (exp -> exp WA exp .) ]
  ! POWER           [ reduce using rule 35 (exp -> exp WA exp .) ]
  ! RA              [ reduce using rule 35 (exp -> exp WA exp .) ]
  ! WA              [ reduce using rule 35 (exp -> exp WA exp .) ]


state 82

    (31) exp -> exp TIMES exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    EQ              reduce using rule 31 (exp -> exp TIMES exp .)
    LE              reduce using rule 31 (exp -> exp TIMES exp .)
    GE              reduce using rule 31 (exp -> exp TIMES exp .)
    NE              reduce using rule 31 (exp -> exp TIMES exp .)
    LT              reduce using rule 31 (exp -> exp TIMES exp .)
    GT              reduce using rule 31 (exp -> exp TIMES exp .)
    PLUS            reduce using rule 31 (exp -> exp TIMES exp .)
    MINUS           reduce using rule 31 (exp -> exp TIMES exp .)
    TIMES           reduce using rule 31 (exp -> exp TIMES exp .)
    DIVIDE          reduce using rule 31 (exp -> exp TIMES exp .)
    POWER           reduce using rule 31 (exp -> exp TIMES exp .)
    RA              reduce using rule 31 (exp -> exp TIMES exp .)
    WA              reduce using rule 31 (exp -> exp TIMES exp .)
    PATHAU          reduce using rule 31 (exp -> exp TIMES exp .)
    COMMA           reduce using rule 31 (exp -> exp TIMES exp .)
    LEKHA           reduce using rule 31 (exp -> exp TIMES exp .)
    BHAE            reduce using rule 31 (exp -> exp TIMES exp .)
    NABHAE          reduce using rule 31 (exp -> exp TIMES exp .)
    RPARA           reduce using rule 31 (exp -> exp TIMES exp .)
    RGPARA          reduce using rule 31 (exp -> exp TIMES exp .)
    CHHA            reduce using rule 31 (exp -> exp TIMES exp .)
    CHHAINA         reduce using rule 31 (exp -> exp TIMES exp .)
    NEWLINE         reduce using rule 31 (exp -> exp TIMES exp .)
    $end            reduce using rule 31 (exp -> exp TIMES exp .)
    DEKHI           reduce using rule 31 (exp -> exp TIMES exp .)
    COLON           reduce using rule 31 (exp -> exp TIMES exp .)
    SEMICOLON       reduce using rule 31 (exp -> exp TIMES exp .)

  ! EQ              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 40 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 43 ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 50 ]
  ! TIMES           [ shift and go to state 48 ]
  ! DIVIDE          [ shift and go to state 37 ]
  ! POWER           [ shift and go to state 38 ]
  ! RA              [ shift and go to state 45 ]
  ! WA              [ shift and go to state 47 ]


state 83

    (23) exp -> exp EQ exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    EQ              reduce using rule 23 (exp -> exp EQ exp .)
    NE              reduce using rule 23 (exp -> exp EQ exp .)
    RA              reduce using rule 23 (exp -> exp EQ exp .)
    WA              reduce using rule 23 (exp -> exp EQ exp .)
    PATHAU          reduce using rule 23 (exp -> exp EQ exp .)
    COMMA           reduce using rule 23 (exp -> exp EQ exp .)
    LEKHA           reduce using rule 23 (exp -> exp EQ exp .)
    BHAE            reduce using rule 23 (exp -> exp EQ exp .)
    NABHAE          reduce using rule 23 (exp -> exp EQ exp .)
    RPARA           reduce using rule 23 (exp -> exp EQ exp .)
    RGPARA          reduce using rule 23 (exp -> exp EQ exp .)
    CHHA            reduce using rule 23 (exp -> exp EQ exp .)
    CHHAINA         reduce using rule 23 (exp -> exp EQ exp .)
    NEWLINE         reduce using rule 23 (exp -> exp EQ exp .)
    $end            reduce using rule 23 (exp -> exp EQ exp .)
    DEKHI           reduce using rule 23 (exp -> exp EQ exp .)
    COLON           reduce using rule 23 (exp -> exp EQ exp .)
    SEMICOLON       reduce using rule 23 (exp -> exp EQ exp .)
    LE              shift and go to state 36
    GE              shift and go to state 42
    LT              shift and go to state 39
    GT              shift and go to state 43
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38

  ! LE              [ reduce using rule 23 (exp -> exp EQ exp .) ]
  ! GE              [ reduce using rule 23 (exp -> exp EQ exp .) ]
  ! LT              [ reduce using rule 23 (exp -> exp EQ exp .) ]
  ! GT              [ reduce using rule 23 (exp -> exp EQ exp .) ]
  ! PLUS            [ reduce using rule 23 (exp -> exp EQ exp .) ]
  ! MINUS           [ reduce using rule 23 (exp -> exp EQ exp .) ]
  ! TIMES           [ reduce using rule 23 (exp -> exp EQ exp .) ]
  ! DIVIDE          [ reduce using rule 23 (exp -> exp EQ exp .) ]
  ! POWER           [ reduce using rule 23 (exp -> exp EQ exp .) ]
  ! EQ              [ shift and go to state 49 ]
  ! NE              [ shift and go to state 40 ]
  ! RA              [ shift and go to state 45 ]
  ! WA              [ shift and go to state 47 ]


state 84

    (30) exp -> exp MINUS exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    EQ              reduce using rule 30 (exp -> exp MINUS exp .)
    LE              reduce using rule 30 (exp -> exp MINUS exp .)
    GE              reduce using rule 30 (exp -> exp MINUS exp .)
    NE              reduce using rule 30 (exp -> exp MINUS exp .)
    LT              reduce using rule 30 (exp -> exp MINUS exp .)
    GT              reduce using rule 30 (exp -> exp MINUS exp .)
    PLUS            reduce using rule 30 (exp -> exp MINUS exp .)
    MINUS           reduce using rule 30 (exp -> exp MINUS exp .)
    RA              reduce using rule 30 (exp -> exp MINUS exp .)
    WA              reduce using rule 30 (exp -> exp MINUS exp .)
    PATHAU          reduce using rule 30 (exp -> exp MINUS exp .)
    COMMA           reduce using rule 30 (exp -> exp MINUS exp .)
    LEKHA           reduce using rule 30 (exp -> exp MINUS exp .)
    BHAE            reduce using rule 30 (exp -> exp MINUS exp .)
    NABHAE          reduce using rule 30 (exp -> exp MINUS exp .)
    RPARA           reduce using rule 30 (exp -> exp MINUS exp .)
    RGPARA          reduce using rule 30 (exp -> exp MINUS exp .)
    CHHA            reduce using rule 30 (exp -> exp MINUS exp .)
    CHHAINA         reduce using rule 30 (exp -> exp MINUS exp .)
    NEWLINE         reduce using rule 30 (exp -> exp MINUS exp .)
    $end            reduce using rule 30 (exp -> exp MINUS exp .)
    DEKHI           reduce using rule 30 (exp -> exp MINUS exp .)
    COLON           reduce using rule 30 (exp -> exp MINUS exp .)
    SEMICOLON       reduce using rule 30 (exp -> exp MINUS exp .)
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38

  ! TIMES           [ reduce using rule 30 (exp -> exp MINUS exp .) ]
  ! DIVIDE          [ reduce using rule 30 (exp -> exp MINUS exp .) ]
  ! POWER           [ reduce using rule 30 (exp -> exp MINUS exp .) ]
  ! EQ              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 36 ]
  ! GE              [ shift and go to state 42 ]
  ! NE              [ shift and go to state 40 ]
  ! LT              [ shift and go to state 39 ]
  ! GT              [ shift and go to state 43 ]
  ! PLUS            [ shift and go to state 46 ]
  ! MINUS           [ shift and go to state 50 ]
  ! RA              [ shift and go to state 45 ]
  ! WA              [ shift and go to state 47 ]


state 85

    (46) condition -> condition WA condition .
    (45) condition -> condition . RA condition
    (46) condition -> condition . WA condition

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 46 (condition -> condition WA condition .)
    RA              shift and go to state 53
    WA              shift and go to state 51

  ! RA              [ reduce using rule 46 (condition -> condition WA condition .) ]
  ! WA              [ reduce using rule 46 (condition -> condition WA condition .) ]


state 86

    (49) cmpdstmt -> stmt . NEWLINE cmpdstmt

    NEWLINE         shift and go to state 103


state 87

    (10) stmt -> YEDI condition NEWLINE cmpdstmt . optelse DIYE
    (51) optelse -> . ATHAWA condition NEWLINE cmpdstmt optelse
    (52) optelse -> . ATHAWA NEWLINE cmpdstmt
    (53) optelse -> .

    ATHAWA          shift and go to state 105
    DIYE            reduce using rule 53 (optelse -> .)

    optelse                        shift and go to state 104

state 88

    (45) condition -> condition RA condition .
    (45) condition -> condition . RA condition
    (46) condition -> condition . WA condition

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 45 (condition -> condition RA condition .)
    RA              shift and go to state 53
    WA              shift and go to state 51

  ! RA              [ reduce using rule 45 (condition -> condition RA condition .) ]
  ! WA              [ reduce using rule 45 (condition -> condition RA condition .) ]


state 89

    (42) exp -> LPARA exp RPARA QUESTION . exp COLON exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 106

state 90

    (60) whilecond -> whilecond WA . whilecond
    (59) whilecond -> . whilecond RA whilecond
    (60) whilecond -> . whilecond WA whilecond
    (61) whilecond -> . exp CHHA
    (62) whilecond -> . exp CHHAINA
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 58
    whilecond                      shift and go to state 107

state 91

    (12) stmt -> JABA SAMMA whilecond NEWLINE . cmpdstmt BAJA
    (49) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (50) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (14) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (15) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (16) stmt -> . exp PATHAU
    (43) dynamString -> . exp COMMA dynamString
    (44) dynamString -> . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    BAJA            reduce using rule 50 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 4
    KAAM            shift and go to state 6
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    stmt                           shift and go to state 86
    dynamString                    shift and go to state 12
    cmpdstmt                       shift and go to state 108
    exp                            shift and go to state 14

state 92

    (59) whilecond -> whilecond RA . whilecond
    (59) whilecond -> . whilecond RA whilecond
    (60) whilecond -> . whilecond WA whilecond
    (61) whilecond -> . exp CHHA
    (62) whilecond -> . exp CHHAINA
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 58
    whilecond                      shift and go to state 109

state 93

    (61) whilecond -> exp CHHA .

    RA              reduce using rule 61 (whilecond -> exp CHHA .)
    WA              reduce using rule 61 (whilecond -> exp CHHA .)
    NEWLINE         reduce using rule 61 (whilecond -> exp CHHA .)


state 94

    (62) whilecond -> exp CHHAINA .

    RA              reduce using rule 62 (whilecond -> exp CHHAINA .)
    WA              reduce using rule 62 (whilecond -> exp CHHAINA .)
    NEWLINE         reduce using rule 62 (whilecond -> exp CHHAINA .)


state 95

    (14) stmt -> KAAM IDENTIFIER LPARA variableArgs . RPARA NEWLINE cmpdstmt MAKA

    RPARA           shift and go to state 110


state 96

    (17) variableArgs -> IDENTIFIER . COMMA variableArgs
    (18) variableArgs -> IDENTIFIER .

    COMMA           shift and go to state 111
    RPARA           reduce using rule 18 (variableArgs -> IDENTIFIER .)


state 97

    (40) exp -> IDENTIFIER LGPARA exp RGPARA .

    EQ              reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LE              reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    GE              reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NE              reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LT              reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    GT              reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    PLUS            reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    MINUS           reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    TIMES           reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    DIVIDE          reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    POWER           reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RA              reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    WA              reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    PATHAU          reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    COMMA           reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LEKHA           reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    BHAE            reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NABHAE          reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RPARA           reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RGPARA          reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    CHHA            reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    CHHAINA         reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NEWLINE         reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    $end            reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    DEKHI           reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    COLON           reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    SEMICOLON       reduce using rule 40 (exp -> IDENTIFIER LGPARA exp RGPARA .)


state 98

    (13) stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp . RGPARA
    (39) exp -> LGPARA variableexp . RGPARA

    RGPARA          shift and go to state 112


state 99

    (15) stmt -> IDENTIFIER LPARA variableexp RPARA .

    NEWLINE         reduce using rule 15 (stmt -> IDENTIFIER LPARA variableexp RPARA .)
    $end            reduce using rule 15 (stmt -> IDENTIFIER LPARA variableexp RPARA .)


state 100

    (9) stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    NEWLINE         reduce using rule 9 (stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .)
    $end            reduce using rule 9 (stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .)
    EQ              shift and go to state 49
    LE              shift and go to state 36
    GE              shift and go to state 42
    NE              shift and go to state 40
    LT              shift and go to state 39
    GT              shift and go to state 43
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38
    RA              shift and go to state 45
    WA              shift and go to state 47


state 101

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp . DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    DEKHI           shift and go to state 113
    EQ              shift and go to state 49
    LE              shift and go to state 36
    GE              shift and go to state 42
    NE              shift and go to state 40
    LT              shift and go to state 39
    GT              shift and go to state 43
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38
    RA              shift and go to state 45
    WA              shift and go to state 47


state 102

    (20) variableexp -> exp COMMA variableexp .

    RPARA           reduce using rule 20 (variableexp -> exp COMMA variableexp .)
    RGPARA          reduce using rule 20 (variableexp -> exp COMMA variableexp .)


state 103

    (49) cmpdstmt -> stmt NEWLINE . cmpdstmt
    (49) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (50) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (14) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (15) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (16) stmt -> . exp PATHAU
    (43) dynamString -> . exp COMMA dynamString
    (44) dynamString -> . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    ATHAWA          reduce using rule 50 (cmpdstmt -> .)
    DIYE            reduce using rule 50 (cmpdstmt -> .)
    BAJA            reduce using rule 50 (cmpdstmt -> .)
    MAKA            reduce using rule 50 (cmpdstmt -> .)
    BAISA           reduce using rule 50 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 4
    KAAM            shift and go to state 6
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    stmt                           shift and go to state 86
    dynamString                    shift and go to state 12
    cmpdstmt                       shift and go to state 114
    exp                            shift and go to state 14

state 104

    (10) stmt -> YEDI condition NEWLINE cmpdstmt optelse . DIYE

    DIYE            shift and go to state 115


state 105

    (51) optelse -> ATHAWA . condition NEWLINE cmpdstmt optelse
    (52) optelse -> ATHAWA . NEWLINE cmpdstmt
    (45) condition -> . condition RA condition
    (46) condition -> . condition WA condition
    (47) condition -> . exp BHAE
    (48) condition -> . exp NABHAE
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    NEWLINE         shift and go to state 116
    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 17
    condition                      shift and go to state 117

state 106

    (42) exp -> LPARA exp RPARA QUESTION exp . COLON exp
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    COLON           shift and go to state 118
    EQ              shift and go to state 49
    LE              shift and go to state 36
    GE              shift and go to state 42
    NE              shift and go to state 40
    LT              shift and go to state 39
    GT              shift and go to state 43
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38
    RA              shift and go to state 45
    WA              shift and go to state 47


state 107

    (60) whilecond -> whilecond WA whilecond .
    (59) whilecond -> whilecond . RA whilecond
    (60) whilecond -> whilecond . WA whilecond

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 60 (whilecond -> whilecond WA whilecond .)
    RA              shift and go to state 92
    WA              shift and go to state 90

  ! RA              [ reduce using rule 60 (whilecond -> whilecond WA whilecond .) ]
  ! WA              [ reduce using rule 60 (whilecond -> whilecond WA whilecond .) ]


state 108

    (12) stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt . BAJA

    BAJA            shift and go to state 119


state 109

    (59) whilecond -> whilecond RA whilecond .
    (59) whilecond -> whilecond . RA whilecond
    (60) whilecond -> whilecond . WA whilecond

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 59 (whilecond -> whilecond RA whilecond .)
    RA              shift and go to state 92
    WA              shift and go to state 90

  ! RA              [ reduce using rule 59 (whilecond -> whilecond RA whilecond .) ]
  ! WA              [ reduce using rule 59 (whilecond -> whilecond RA whilecond .) ]


state 110

    (14) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA . NEWLINE cmpdstmt MAKA

    NEWLINE         shift and go to state 120


state 111

    (17) variableArgs -> IDENTIFIER COMMA . variableArgs
    (17) variableArgs -> . IDENTIFIER COMMA variableArgs
    (18) variableArgs -> . IDENTIFIER
    (19) variableArgs -> .

    IDENTIFIER      shift and go to state 96
    RPARA           reduce using rule 19 (variableArgs -> .)

    variableArgs                   shift and go to state 121

state 112

    (13) stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .
    (39) exp -> LGPARA variableexp RGPARA .

  ! reduce/reduce conflict for NEWLINE resolved using rule 13 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
  ! reduce/reduce conflict for $end resolved using rule 13 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    NEWLINE         reduce using rule 13 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    $end            reduce using rule 13 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    EQ              reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    LE              reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    GE              reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    NE              reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    LT              reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    GT              reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    PLUS            reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    MINUS           reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    TIMES           reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    DIVIDE          reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    POWER           reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    RA              reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)
    WA              reduce using rule 39 (exp -> LGPARA variableexp RGPARA .)

  ! NEWLINE         [ reduce using rule 39 (exp -> LGPARA variableexp RGPARA .) ]
  ! $end            [ reduce using rule 39 (exp -> LGPARA variableexp RGPARA .) ]


state 113

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI . exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 122

state 114

    (49) cmpdstmt -> stmt NEWLINE cmpdstmt .

    BAJA            reduce using rule 49 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    DIYE            reduce using rule 49 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    MAKA            reduce using rule 49 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    ATHAWA          reduce using rule 49 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    BAISA           reduce using rule 49 (cmpdstmt -> stmt NEWLINE cmpdstmt .)


state 115

    (10) stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .

    NEWLINE         reduce using rule 10 (stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .)
    $end            reduce using rule 10 (stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .)


state 116

    (52) optelse -> ATHAWA NEWLINE . cmpdstmt
    (49) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (50) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (14) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (15) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (16) stmt -> . exp PATHAU
    (43) dynamString -> . exp COMMA dynamString
    (44) dynamString -> . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    DIYE            reduce using rule 50 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 4
    KAAM            shift and go to state 6
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    stmt                           shift and go to state 86
    dynamString                    shift and go to state 12
    cmpdstmt                       shift and go to state 123
    exp                            shift and go to state 14

state 117

    (51) optelse -> ATHAWA condition . NEWLINE cmpdstmt optelse
    (45) condition -> condition . RA condition
    (46) condition -> condition . WA condition

    NEWLINE         shift and go to state 124
    RA              shift and go to state 53
    WA              shift and go to state 51


state 118

    (42) exp -> LPARA exp RPARA QUESTION exp COLON . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 125

state 119

    (12) stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .

    NEWLINE         reduce using rule 12 (stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .)
    $end            reduce using rule 12 (stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .)


state 120

    (14) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE . cmpdstmt MAKA
    (49) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (50) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (14) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (15) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (16) stmt -> . exp PATHAU
    (43) dynamString -> . exp COMMA dynamString
    (44) dynamString -> . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    MAKA            reduce using rule 50 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 4
    KAAM            shift and go to state 6
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    stmt                           shift and go to state 86
    dynamString                    shift and go to state 12
    cmpdstmt                       shift and go to state 126
    exp                            shift and go to state 14

state 121

    (17) variableArgs -> IDENTIFIER COMMA variableArgs .

    RPARA           reduce using rule 17 (variableArgs -> IDENTIFIER COMMA variableArgs .)


state 122

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp . SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    SEMICOLON       shift and go to state 127
    EQ              shift and go to state 49
    LE              shift and go to state 36
    GE              shift and go to state 42
    NE              shift and go to state 40
    LT              shift and go to state 39
    GT              shift and go to state 43
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38
    RA              shift and go to state 45
    WA              shift and go to state 47


state 123

    (52) optelse -> ATHAWA NEWLINE cmpdstmt .

    DIYE            reduce using rule 52 (optelse -> ATHAWA NEWLINE cmpdstmt .)


state 124

    (51) optelse -> ATHAWA condition NEWLINE . cmpdstmt optelse
    (49) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (50) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (14) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (15) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (16) stmt -> . exp PATHAU
    (43) dynamString -> . exp COMMA dynamString
    (44) dynamString -> . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    ATHAWA          reduce using rule 50 (cmpdstmt -> .)
    DIYE            reduce using rule 50 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 4
    KAAM            shift and go to state 6
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    stmt                           shift and go to state 86
    dynamString                    shift and go to state 12
    cmpdstmt                       shift and go to state 128
    exp                            shift and go to state 14

state 125

    (42) exp -> LPARA exp RPARA QUESTION exp COLON exp .
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    COMMA           reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    LEKHA           reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    BHAE            reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    NABHAE          reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    RPARA           reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    RGPARA          reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    CHHA            reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    CHHAINA         reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    NEWLINE         reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    $end            reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    DEKHI           reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    COLON           reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    SEMICOLON       reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    EQ              shift and go to state 49
    LE              shift and go to state 36
    GE              shift and go to state 42
    NE              shift and go to state 40
    LT              shift and go to state 39
    GT              shift and go to state 43
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38
    RA              shift and go to state 45
    WA              shift and go to state 47

  ! EQ              [ reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! LE              [ reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! GE              [ reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! NE              [ reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! LT              [ reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! GT              [ reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! PLUS            [ reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! MINUS           [ reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! TIMES           [ reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! DIVIDE          [ reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! POWER           [ reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! RA              [ reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! WA              [ reduce using rule 42 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]


state 126

    (14) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt . MAKA

    MAKA            shift and go to state 129


state 127

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON . sign exp NEWLINE cmpdstmt BAISA
    (54) sign -> . PLUS
    (55) sign -> . MINUS

    PLUS            shift and go to state 26
    MINUS           shift and go to state 29

    sign                           shift and go to state 130

state 128

    (51) optelse -> ATHAWA condition NEWLINE cmpdstmt . optelse
    (51) optelse -> . ATHAWA condition NEWLINE cmpdstmt optelse
    (52) optelse -> . ATHAWA NEWLINE cmpdstmt
    (53) optelse -> .

    ATHAWA          shift and go to state 105
    DIYE            reduce using rule 53 (optelse -> .)

    optelse                        shift and go to state 131

state 129

    (14) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA .

    NEWLINE         reduce using rule 14 (stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA .)
    $end            reduce using rule 14 (stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA .)


state 130

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign . exp NEWLINE cmpdstmt BAISA
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 15
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    exp                            shift and go to state 132

state 131

    (51) optelse -> ATHAWA condition NEWLINE cmpdstmt optelse .

    DIYE            reduce using rule 51 (optelse -> ATHAWA condition NEWLINE cmpdstmt optelse .)


state 132

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp . NEWLINE cmpdstmt BAISA
    (23) exp -> exp . EQ exp
    (24) exp -> exp . LE exp
    (25) exp -> exp . GE exp
    (26) exp -> exp . NE exp
    (27) exp -> exp . LT exp
    (28) exp -> exp . GT exp
    (29) exp -> exp . PLUS exp
    (30) exp -> exp . MINUS exp
    (31) exp -> exp . TIMES exp
    (32) exp -> exp . DIVIDE exp
    (33) exp -> exp . POWER exp
    (34) exp -> exp . RA exp
    (35) exp -> exp . WA exp

    NEWLINE         shift and go to state 133
    EQ              shift and go to state 49
    LE              shift and go to state 36
    GE              shift and go to state 42
    NE              shift and go to state 40
    LT              shift and go to state 39
    GT              shift and go to state 43
    PLUS            shift and go to state 46
    MINUS           shift and go to state 50
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 37
    POWER           shift and go to state 38
    RA              shift and go to state 45
    WA              shift and go to state 47


state 133

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE . cmpdstmt BAISA
    (49) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (50) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (14) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (15) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (16) stmt -> . exp PATHAU
    (43) dynamString -> . exp COMMA dynamString
    (44) dynamString -> . exp
    (23) exp -> . exp EQ exp
    (24) exp -> . exp LE exp
    (25) exp -> . exp GE exp
    (26) exp -> . exp NE exp
    (27) exp -> . exp LT exp
    (28) exp -> . exp GT exp
    (29) exp -> . exp PLUS exp
    (30) exp -> . exp MINUS exp
    (31) exp -> . exp TIMES exp
    (32) exp -> . exp DIVIDE exp
    (33) exp -> . exp POWER exp
    (34) exp -> . exp RA exp
    (35) exp -> . exp WA exp
    (36) exp -> . IDENTIFIER
    (37) exp -> . STRING
    (38) exp -> . NUMBER
    (39) exp -> . LGPARA variableexp RGPARA
    (40) exp -> . IDENTIFIER LGPARA exp RGPARA
    (41) exp -> . LPARA exp RPARA
    (42) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    BAISA           reduce using rule 50 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 7
    YEDI            shift and go to state 1
    SABEI           shift and go to state 8
    JABA            shift and go to state 4
    KAAM            shift and go to state 6
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 11
    LPARA           shift and go to state 2

    stmt                           shift and go to state 86
    dynamString                    shift and go to state 12
    cmpdstmt                       shift and go to state 134
    exp                            shift and go to state 14

state 134

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt . BAISA

    BAISA           shift and go to state 135


state 135

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .

    NEWLINE         reduce using rule 11 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .)
    $end            reduce using rule 11 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQ in state 74 resolved as shift
WARNING: shift/reduce conflict for LE in state 74 resolved as shift
WARNING: shift/reduce conflict for GE in state 74 resolved as shift
WARNING: shift/reduce conflict for NE in state 74 resolved as shift
WARNING: shift/reduce conflict for LT in state 74 resolved as shift
WARNING: shift/reduce conflict for GT in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 74 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 74 resolved as shift
WARNING: shift/reduce conflict for POWER in state 74 resolved as shift
WARNING: shift/reduce conflict for RA in state 74 resolved as shift
WARNING: shift/reduce conflict for WA in state 74 resolved as shift
WARNING: shift/reduce conflict for EQ in state 79 resolved as shift
WARNING: shift/reduce conflict for LE in state 79 resolved as shift
WARNING: shift/reduce conflict for GE in state 79 resolved as shift
WARNING: shift/reduce conflict for NE in state 79 resolved as shift
WARNING: shift/reduce conflict for LT in state 79 resolved as shift
WARNING: shift/reduce conflict for GT in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 79 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 79 resolved as shift
WARNING: shift/reduce conflict for POWER in state 79 resolved as shift
WARNING: shift/reduce conflict for RA in state 79 resolved as shift
WARNING: shift/reduce conflict for WA in state 79 resolved as shift
WARNING: shift/reduce conflict for EQ in state 81 resolved as shift
WARNING: shift/reduce conflict for LE in state 81 resolved as shift
WARNING: shift/reduce conflict for GE in state 81 resolved as shift
WARNING: shift/reduce conflict for NE in state 81 resolved as shift
WARNING: shift/reduce conflict for LT in state 81 resolved as shift
WARNING: shift/reduce conflict for GT in state 81 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 81 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 81 resolved as shift
WARNING: shift/reduce conflict for POWER in state 81 resolved as shift
WARNING: shift/reduce conflict for RA in state 81 resolved as shift
WARNING: shift/reduce conflict for WA in state 81 resolved as shift
WARNING: shift/reduce conflict for RA in state 85 resolved as shift
WARNING: shift/reduce conflict for WA in state 85 resolved as shift
WARNING: shift/reduce conflict for RA in state 88 resolved as shift
WARNING: shift/reduce conflict for WA in state 88 resolved as shift
WARNING: shift/reduce conflict for RA in state 107 resolved as shift
WARNING: shift/reduce conflict for WA in state 107 resolved as shift
WARNING: shift/reduce conflict for RA in state 109 resolved as shift
WARNING: shift/reduce conflict for WA in state 109 resolved as shift
WARNING: shift/reduce conflict for EQ in state 125 resolved as shift
WARNING: shift/reduce conflict for LE in state 125 resolved as shift
WARNING: shift/reduce conflict for GE in state 125 resolved as shift
WARNING: shift/reduce conflict for NE in state 125 resolved as shift
WARNING: shift/reduce conflict for LT in state 125 resolved as shift
WARNING: shift/reduce conflict for GT in state 125 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 125 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 125 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 125 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 125 resolved as shift
WARNING: shift/reduce conflict for POWER in state 125 resolved as shift
WARNING: shift/reduce conflict for RA in state 125 resolved as shift
WARNING: shift/reduce conflict for WA in state 125 resolved as shift
WARNING: reduce/reduce conflict in state 112 resolved using rule (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA)
WARNING: rejected rule (exp -> LGPARA variableexp RGPARA) in state 112
