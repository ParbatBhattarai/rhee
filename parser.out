Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> N
Rule 1     N -> element NEWLINE N
Rule 2     N -> element
Rule 3     N -> <empty>
Rule 4     element -> stmt
Rule 5     stmt -> IDENTIFIER ASSIGNMENT exp
Rule 6     stmt -> IDENTIFIER MA dynamString LEKHA SEMICOLON
Rule 7     stmt -> IDENTIFIER MA dynamString LEKHA
Rule 8     stmt -> IDENTIFIER BATA IDENTIFIER LEU
Rule 9     stmt -> IDENTIFIER BANDAGARA
Rule 10    stmt -> dynamString LEKHA
Rule 11    stmt -> dynamString LEKHA SEMICOLON
Rule 12    stmt -> IDENTIFIER LEU
Rule 13    stmt -> IDENTIFIER incrementsign ASSIGNMENT exp
Rule 14    stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE
Rule 15    stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
Rule 16    stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
Rule 17    stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
Rule 18    stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
Rule 19    stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
Rule 20    stmt -> IDENTIFIER LPARA variableexp RPARA
Rule 21    stmt -> exp PATHAU
Rule 22    stmt -> NEWLINE
Rule 23    variableArgs -> IDENTIFIER COMMA variableArgs
Rule 24    variableArgs -> IDENTIFIER
Rule 25    variableArgs -> <empty>
Rule 26    variableexp -> exp COMMA variableexp
Rule 27    variableexp -> exp
Rule 28    variableexp -> <empty>
Rule 29    exp -> exp EQ exp
Rule 30    exp -> exp LE exp
Rule 31    exp -> exp GE exp
Rule 32    exp -> exp NE exp
Rule 33    exp -> exp LT exp
Rule 34    exp -> exp GT exp
Rule 35    exp -> exp PLUS exp
Rule 36    exp -> exp MINUS exp
Rule 37    exp -> exp TIMES exp
Rule 38    exp -> exp DIVIDE exp
Rule 39    exp -> exp POWER exp
Rule 40    exp -> exp RA exp
Rule 41    exp -> exp WA exp
Rule 42    exp -> IDENTIFIER
Rule 43    exp -> STRING
Rule 44    exp -> NUMBER
Rule 45    exp -> LGPARA variableexp RGPARA
Rule 46    exp -> IDENTIFIER LGPARA exp RGPARA
Rule 47    exp -> LPARA exp RPARA
Rule 48    exp -> LPARA exp RPARA QUESTION exp COLON exp
Rule 49    exp -> IDENTIFIER LPARA variableexp RPARA
Rule 50    dynamString -> exp COMMA dynamString
Rule 51    dynamString -> exp
Rule 52    condition -> condition RA condition
Rule 53    condition -> condition WA condition
Rule 54    condition -> exp BHAE
Rule 55    condition -> exp NABHAE
Rule 56    cmpdstmt -> stmt NEWLINE cmpdstmt
Rule 57    cmpdstmt -> <empty>
Rule 58    optelse -> ATHAWA condition NEWLINE cmpdstmt optelse
Rule 59    optelse -> ATHAWA NEWLINE cmpdstmt
Rule 60    optelse -> <empty>
Rule 61    sign -> PLUS
Rule 62    sign -> MINUS
Rule 63    incrementsign -> sign
Rule 64    incrementsign -> TIMES
Rule 65    incrementsign -> DIVIDE
Rule 66    whilecond -> whilecond RA whilecond
Rule 67    whilecond -> whilecond WA whilecond
Rule 68    whilecond -> exp CHHA
Rule 69    whilecond -> exp CHHAINA

Terminals, with rules where they appear

ASSIGNMENT           : 5 13 15 16 18
ATHAWA               : 58 59
BAISA                : 15 16
BAJA                 : 17
BANDAGARA            : 9
BATA                 : 8
BHAE                 : 54
CHHA                 : 68
CHHAINA              : 69
COLON                : 48
COMMA                : 23 26 50
DEKHI                : 15 16
DIVIDE               : 38 65
DIYE                 : 14
EQ                   : 29
GE                   : 31
GT                   : 34
IDENTIFIER           : 5 6 7 8 8 9 12 13 15 16 18 19 20 23 24 42 46 49
JABA                 : 17
KAAM                 : 19
LE                   : 30
LEKHA                : 6 7 10 11
LEU                  : 8 12
LGPARA               : 18 45 46
LPARA                : 19 20 47 48 49
LT                   : 33
MA                   : 6 7
MAKA                 : 19
MINUS                : 36 62
NABHAE               : 55
NE                   : 32
NEWLINE              : 1 14 15 16 17 19 22 56 58 59
NUMBER               : 44
PATHAU               : 21
PLUS                 : 35 61
POWER                : 39
QUESTION             : 48
RA                   : 40 52 66
RGPARA               : 18 45 46
RPARA                : 19 20 47 48 49
SABEI                : 15 16
SAMMA                : 17
SEMICOLON            : 6 11 15
STRING               : 43
TIMES                : 37 64
WA                   : 41 53 67
YEDI                 : 14
error                : 

Nonterminals, with rules where they appear

N                    : 1 0
cmpdstmt             : 14 15 16 17 19 56 58 59
condition            : 14 52 52 53 53 58
dynamString          : 6 7 10 11 50
element              : 1 2
exp                  : 5 13 15 15 15 16 16 21 26 27 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 46 47 48 48 48 50 51 54 55 68 69
incrementsign        : 13
optelse              : 14 58
sign                 : 15 63
stmt                 : 4 56
variableArgs         : 19 23
variableexp          : 18 20 26 45 49
whilecond            : 17 66 66 67 67

Parsing method: LALR

state 0

    (0) S' -> . N
    (1) N -> . element NEWLINE N
    (2) N -> . element
    (3) N -> .
    (4) element -> . stmt
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . dynamString LEKHA
    (11) stmt -> . dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER LEU
    (13) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (14) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (15) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (16) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (17) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (18) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (19) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (20) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (21) stmt -> . exp PATHAU
    (22) stmt -> . NEWLINE
    (50) dynamString -> . exp COMMA dynamString
    (51) dynamString -> . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    $end            reduce using rule 3 (N -> .)
    IDENTIFIER      shift and go to state 9
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    stmt                           shift and go to state 11
    dynamString                    shift and go to state 4
    N                              shift and go to state 12
    exp                            shift and go to state 15
    element                        shift and go to state 14

state 1

    (14) stmt -> YEDI . condition NEWLINE cmpdstmt optelse DIYE
    (52) condition -> . condition RA condition
    (53) condition -> . condition WA condition
    (54) condition -> . exp BHAE
    (55) condition -> . exp NABHAE
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 18
    condition                      shift and go to state 17

state 2

    (47) exp -> LPARA . exp RPARA
    (48) exp -> LPARA . exp RPARA QUESTION exp COLON exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 19

state 3

    (44) exp -> NUMBER .

    EQ              reduce using rule 44 (exp -> NUMBER .)
    LE              reduce using rule 44 (exp -> NUMBER .)
    GE              reduce using rule 44 (exp -> NUMBER .)
    NE              reduce using rule 44 (exp -> NUMBER .)
    LT              reduce using rule 44 (exp -> NUMBER .)
    GT              reduce using rule 44 (exp -> NUMBER .)
    PLUS            reduce using rule 44 (exp -> NUMBER .)
    MINUS           reduce using rule 44 (exp -> NUMBER .)
    TIMES           reduce using rule 44 (exp -> NUMBER .)
    DIVIDE          reduce using rule 44 (exp -> NUMBER .)
    POWER           reduce using rule 44 (exp -> NUMBER .)
    RA              reduce using rule 44 (exp -> NUMBER .)
    WA              reduce using rule 44 (exp -> NUMBER .)
    PATHAU          reduce using rule 44 (exp -> NUMBER .)
    COMMA           reduce using rule 44 (exp -> NUMBER .)
    LEKHA           reduce using rule 44 (exp -> NUMBER .)
    BHAE            reduce using rule 44 (exp -> NUMBER .)
    NABHAE          reduce using rule 44 (exp -> NUMBER .)
    RPARA           reduce using rule 44 (exp -> NUMBER .)
    RGPARA          reduce using rule 44 (exp -> NUMBER .)
    CHHA            reduce using rule 44 (exp -> NUMBER .)
    CHHAINA         reduce using rule 44 (exp -> NUMBER .)
    NEWLINE         reduce using rule 44 (exp -> NUMBER .)
    $end            reduce using rule 44 (exp -> NUMBER .)
    DEKHI           reduce using rule 44 (exp -> NUMBER .)
    COLON           reduce using rule 44 (exp -> NUMBER .)
    SEMICOLON       reduce using rule 44 (exp -> NUMBER .)


state 4

    (10) stmt -> dynamString . LEKHA
    (11) stmt -> dynamString . LEKHA SEMICOLON

    LEKHA           shift and go to state 20


state 5

    (43) exp -> STRING .

    EQ              reduce using rule 43 (exp -> STRING .)
    LE              reduce using rule 43 (exp -> STRING .)
    GE              reduce using rule 43 (exp -> STRING .)
    NE              reduce using rule 43 (exp -> STRING .)
    LT              reduce using rule 43 (exp -> STRING .)
    GT              reduce using rule 43 (exp -> STRING .)
    PLUS            reduce using rule 43 (exp -> STRING .)
    MINUS           reduce using rule 43 (exp -> STRING .)
    TIMES           reduce using rule 43 (exp -> STRING .)
    DIVIDE          reduce using rule 43 (exp -> STRING .)
    POWER           reduce using rule 43 (exp -> STRING .)
    RA              reduce using rule 43 (exp -> STRING .)
    WA              reduce using rule 43 (exp -> STRING .)
    PATHAU          reduce using rule 43 (exp -> STRING .)
    COMMA           reduce using rule 43 (exp -> STRING .)
    LEKHA           reduce using rule 43 (exp -> STRING .)
    BHAE            reduce using rule 43 (exp -> STRING .)
    NABHAE          reduce using rule 43 (exp -> STRING .)
    RPARA           reduce using rule 43 (exp -> STRING .)
    RGPARA          reduce using rule 43 (exp -> STRING .)
    CHHA            reduce using rule 43 (exp -> STRING .)
    CHHAINA         reduce using rule 43 (exp -> STRING .)
    NEWLINE         reduce using rule 43 (exp -> STRING .)
    $end            reduce using rule 43 (exp -> STRING .)
    DEKHI           reduce using rule 43 (exp -> STRING .)
    COLON           reduce using rule 43 (exp -> STRING .)
    SEMICOLON       reduce using rule 43 (exp -> STRING .)


state 6

    (19) stmt -> KAAM . IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA

    IDENTIFIER      shift and go to state 21


state 7

    (22) stmt -> NEWLINE .

    NEWLINE         reduce using rule 22 (stmt -> NEWLINE .)
    $end            reduce using rule 22 (stmt -> NEWLINE .)


state 8

    (17) stmt -> JABA . SAMMA whilecond NEWLINE cmpdstmt BAJA

    SAMMA           shift and go to state 22


state 9

    (5) stmt -> IDENTIFIER . ASSIGNMENT exp
    (6) stmt -> IDENTIFIER . MA dynamString LEKHA SEMICOLON
    (7) stmt -> IDENTIFIER . MA dynamString LEKHA
    (8) stmt -> IDENTIFIER . BATA IDENTIFIER LEU
    (9) stmt -> IDENTIFIER . BANDAGARA
    (12) stmt -> IDENTIFIER . LEU
    (13) stmt -> IDENTIFIER . incrementsign ASSIGNMENT exp
    (18) stmt -> IDENTIFIER . ASSIGNMENT LGPARA variableexp RGPARA
    (20) stmt -> IDENTIFIER . LPARA variableexp RPARA
    (42) exp -> IDENTIFIER .
    (46) exp -> IDENTIFIER . LGPARA exp RGPARA
    (49) exp -> IDENTIFIER . LPARA variableexp RPARA
    (63) incrementsign -> . sign
    (64) incrementsign -> . TIMES
    (65) incrementsign -> . DIVIDE
    (61) sign -> . PLUS
    (62) sign -> . MINUS

    ASSIGNMENT      shift and go to state 29
    MA              shift and go to state 27
    BATA            shift and go to state 28
    BANDAGARA       shift and go to state 34
    LEU             shift and go to state 32
    LPARA           shift and go to state 30
    PATHAU          reduce using rule 42 (exp -> IDENTIFIER .)
    COMMA           reduce using rule 42 (exp -> IDENTIFIER .)
    EQ              reduce using rule 42 (exp -> IDENTIFIER .)
    LE              reduce using rule 42 (exp -> IDENTIFIER .)
    GE              reduce using rule 42 (exp -> IDENTIFIER .)
    NE              reduce using rule 42 (exp -> IDENTIFIER .)
    LT              reduce using rule 42 (exp -> IDENTIFIER .)
    GT              reduce using rule 42 (exp -> IDENTIFIER .)
    POWER           reduce using rule 42 (exp -> IDENTIFIER .)
    RA              reduce using rule 42 (exp -> IDENTIFIER .)
    WA              reduce using rule 42 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 42 (exp -> IDENTIFIER .)
    LGPARA          shift and go to state 26
    TIMES           shift and go to state 24
    DIVIDE          shift and go to state 25
    PLUS            shift and go to state 23
    MINUS           shift and go to state 35

  ! PLUS            [ reduce using rule 42 (exp -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 42 (exp -> IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 42 (exp -> IDENTIFIER .) ]
  ! DIVIDE          [ reduce using rule 42 (exp -> IDENTIFIER .) ]

    incrementsign                  shift and go to state 33
    sign                           shift and go to state 31

state 10

    (15) stmt -> SABEI . IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (16) stmt -> SABEI . IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA

    IDENTIFIER      shift and go to state 36


state 11

    (4) element -> stmt .

    NEWLINE         reduce using rule 4 (element -> stmt .)
    $end            reduce using rule 4 (element -> stmt .)


state 12

    (0) S' -> N .



state 13

    (45) exp -> LGPARA . variableexp RGPARA
    (26) variableexp -> . exp COMMA variableexp
    (27) variableexp -> . exp
    (28) variableexp -> .
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    RGPARA          reduce using rule 28 (variableexp -> .)
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 38
    variableexp                    shift and go to state 37

state 14

    (1) N -> element . NEWLINE N
    (2) N -> element .

    NEWLINE         shift and go to state 39
    $end            reduce using rule 2 (N -> element .)


state 15

    (21) stmt -> exp . PATHAU
    (50) dynamString -> exp . COMMA dynamString
    (51) dynamString -> exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    PATHAU          shift and go to state 45
    COMMA           shift and go to state 48
    LEKHA           reduce using rule 51 (dynamString -> exp .)
    EQ              shift and go to state 53
    LE              shift and go to state 40
    GE              shift and go to state 46
    NE              shift and go to state 44
    LT              shift and go to state 43
    GT              shift and go to state 47
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42
    RA              shift and go to state 49
    WA              shift and go to state 51


state 16

    (42) exp -> IDENTIFIER .
    (46) exp -> IDENTIFIER . LGPARA exp RGPARA
    (49) exp -> IDENTIFIER . LPARA variableexp RPARA

    EQ              reduce using rule 42 (exp -> IDENTIFIER .)
    LE              reduce using rule 42 (exp -> IDENTIFIER .)
    GE              reduce using rule 42 (exp -> IDENTIFIER .)
    NE              reduce using rule 42 (exp -> IDENTIFIER .)
    LT              reduce using rule 42 (exp -> IDENTIFIER .)
    GT              reduce using rule 42 (exp -> IDENTIFIER .)
    PLUS            reduce using rule 42 (exp -> IDENTIFIER .)
    MINUS           reduce using rule 42 (exp -> IDENTIFIER .)
    TIMES           reduce using rule 42 (exp -> IDENTIFIER .)
    DIVIDE          reduce using rule 42 (exp -> IDENTIFIER .)
    POWER           reduce using rule 42 (exp -> IDENTIFIER .)
    RA              reduce using rule 42 (exp -> IDENTIFIER .)
    WA              reduce using rule 42 (exp -> IDENTIFIER .)
    PATHAU          reduce using rule 42 (exp -> IDENTIFIER .)
    COMMA           reduce using rule 42 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 42 (exp -> IDENTIFIER .)
    BHAE            reduce using rule 42 (exp -> IDENTIFIER .)
    NABHAE          reduce using rule 42 (exp -> IDENTIFIER .)
    RPARA           reduce using rule 42 (exp -> IDENTIFIER .)
    RGPARA          reduce using rule 42 (exp -> IDENTIFIER .)
    CHHA            reduce using rule 42 (exp -> IDENTIFIER .)
    CHHAINA         reduce using rule 42 (exp -> IDENTIFIER .)
    NEWLINE         reduce using rule 42 (exp -> IDENTIFIER .)
    $end            reduce using rule 42 (exp -> IDENTIFIER .)
    DEKHI           reduce using rule 42 (exp -> IDENTIFIER .)
    COLON           reduce using rule 42 (exp -> IDENTIFIER .)
    SEMICOLON       reduce using rule 42 (exp -> IDENTIFIER .)
    LGPARA          shift and go to state 26
    LPARA           shift and go to state 55


state 17

    (14) stmt -> YEDI condition . NEWLINE cmpdstmt optelse DIYE
    (52) condition -> condition . RA condition
    (53) condition -> condition . WA condition

    NEWLINE         shift and go to state 57
    RA              shift and go to state 58
    WA              shift and go to state 56


state 18

    (54) condition -> exp . BHAE
    (55) condition -> exp . NABHAE
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    BHAE            shift and go to state 59
    NABHAE          shift and go to state 60
    EQ              shift and go to state 53
    LE              shift and go to state 40
    GE              shift and go to state 46
    NE              shift and go to state 44
    LT              shift and go to state 43
    GT              shift and go to state 47
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42
    RA              shift and go to state 49
    WA              shift and go to state 51


state 19

    (47) exp -> LPARA exp . RPARA
    (48) exp -> LPARA exp . RPARA QUESTION exp COLON exp
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    RPARA           shift and go to state 61
    EQ              shift and go to state 53
    LE              shift and go to state 40
    GE              shift and go to state 46
    NE              shift and go to state 44
    LT              shift and go to state 43
    GT              shift and go to state 47
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42
    RA              shift and go to state 49
    WA              shift and go to state 51


state 20

    (10) stmt -> dynamString LEKHA .
    (11) stmt -> dynamString LEKHA . SEMICOLON

    NEWLINE         reduce using rule 10 (stmt -> dynamString LEKHA .)
    $end            reduce using rule 10 (stmt -> dynamString LEKHA .)
    SEMICOLON       shift and go to state 62


state 21

    (19) stmt -> KAAM IDENTIFIER . LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA

    LPARA           shift and go to state 63


state 22

    (17) stmt -> JABA SAMMA . whilecond NEWLINE cmpdstmt BAJA
    (66) whilecond -> . whilecond RA whilecond
    (67) whilecond -> . whilecond WA whilecond
    (68) whilecond -> . exp CHHA
    (69) whilecond -> . exp CHHAINA
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 65
    whilecond                      shift and go to state 64

state 23

    (61) sign -> PLUS .

    ASSIGNMENT      reduce using rule 61 (sign -> PLUS .)
    IDENTIFIER      reduce using rule 61 (sign -> PLUS .)
    STRING          reduce using rule 61 (sign -> PLUS .)
    NUMBER          reduce using rule 61 (sign -> PLUS .)
    LGPARA          reduce using rule 61 (sign -> PLUS .)
    LPARA           reduce using rule 61 (sign -> PLUS .)


state 24

    (64) incrementsign -> TIMES .

    ASSIGNMENT      reduce using rule 64 (incrementsign -> TIMES .)


state 25

    (65) incrementsign -> DIVIDE .

    ASSIGNMENT      reduce using rule 65 (incrementsign -> DIVIDE .)


state 26

    (46) exp -> IDENTIFIER LGPARA . exp RGPARA
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 66

state 27

    (6) stmt -> IDENTIFIER MA . dynamString LEKHA SEMICOLON
    (7) stmt -> IDENTIFIER MA . dynamString LEKHA
    (50) dynamString -> . exp COMMA dynamString
    (51) dynamString -> . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 68
    dynamString                    shift and go to state 67

state 28

    (8) stmt -> IDENTIFIER BATA . IDENTIFIER LEU

    IDENTIFIER      shift and go to state 69


state 29

    (5) stmt -> IDENTIFIER ASSIGNMENT . exp
    (18) stmt -> IDENTIFIER ASSIGNMENT . LGPARA variableexp RGPARA
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    LGPARA          shift and go to state 70
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 71

state 30

    (20) stmt -> IDENTIFIER LPARA . variableexp RPARA
    (49) exp -> IDENTIFIER LPARA . variableexp RPARA
    (26) variableexp -> . exp COMMA variableexp
    (27) variableexp -> . exp
    (28) variableexp -> .
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    RPARA           reduce using rule 28 (variableexp -> .)
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 38
    variableexp                    shift and go to state 72

state 31

    (63) incrementsign -> sign .

    ASSIGNMENT      reduce using rule 63 (incrementsign -> sign .)


state 32

    (12) stmt -> IDENTIFIER LEU .

    NEWLINE         reduce using rule 12 (stmt -> IDENTIFIER LEU .)
    $end            reduce using rule 12 (stmt -> IDENTIFIER LEU .)


state 33

    (13) stmt -> IDENTIFIER incrementsign . ASSIGNMENT exp

    ASSIGNMENT      shift and go to state 73


state 34

    (9) stmt -> IDENTIFIER BANDAGARA .

    NEWLINE         reduce using rule 9 (stmt -> IDENTIFIER BANDAGARA .)
    $end            reduce using rule 9 (stmt -> IDENTIFIER BANDAGARA .)


state 35

    (62) sign -> MINUS .

    ASSIGNMENT      reduce using rule 62 (sign -> MINUS .)
    IDENTIFIER      reduce using rule 62 (sign -> MINUS .)
    STRING          reduce using rule 62 (sign -> MINUS .)
    NUMBER          reduce using rule 62 (sign -> MINUS .)
    LGPARA          reduce using rule 62 (sign -> MINUS .)
    LPARA           reduce using rule 62 (sign -> MINUS .)


state 36

    (15) stmt -> SABEI IDENTIFIER . ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (16) stmt -> SABEI IDENTIFIER . ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA

    ASSIGNMENT      shift and go to state 74


state 37

    (45) exp -> LGPARA variableexp . RGPARA

    RGPARA          shift and go to state 75


state 38

    (26) variableexp -> exp . COMMA variableexp
    (27) variableexp -> exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    COMMA           shift and go to state 76
    RGPARA          reduce using rule 27 (variableexp -> exp .)
    RPARA           reduce using rule 27 (variableexp -> exp .)
    EQ              shift and go to state 53
    LE              shift and go to state 40
    GE              shift and go to state 46
    NE              shift and go to state 44
    LT              shift and go to state 43
    GT              shift and go to state 47
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42
    RA              shift and go to state 49
    WA              shift and go to state 51


state 39

    (1) N -> element NEWLINE . N
    (1) N -> . element NEWLINE N
    (2) N -> . element
    (3) N -> .
    (4) element -> . stmt
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . dynamString LEKHA
    (11) stmt -> . dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER LEU
    (13) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (14) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (15) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (16) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (17) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (18) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (19) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (20) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (21) stmt -> . exp PATHAU
    (22) stmt -> . NEWLINE
    (50) dynamString -> . exp COMMA dynamString
    (51) dynamString -> . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    $end            reduce using rule 3 (N -> .)
    IDENTIFIER      shift and go to state 9
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    stmt                           shift and go to state 11
    dynamString                    shift and go to state 4
    exp                            shift and go to state 15
    element                        shift and go to state 14
    N                              shift and go to state 77

state 40

    (30) exp -> exp LE . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 78

state 41

    (38) exp -> exp DIVIDE . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 79

state 42

    (39) exp -> exp POWER . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 80

state 43

    (33) exp -> exp LT . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 81

state 44

    (32) exp -> exp NE . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 82

state 45

    (21) stmt -> exp PATHAU .

    NEWLINE         reduce using rule 21 (stmt -> exp PATHAU .)
    $end            reduce using rule 21 (stmt -> exp PATHAU .)


state 46

    (31) exp -> exp GE . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 83

state 47

    (34) exp -> exp GT . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 84

state 48

    (50) dynamString -> exp COMMA . dynamString
    (50) dynamString -> . exp COMMA dynamString
    (51) dynamString -> . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 68
    dynamString                    shift and go to state 85

state 49

    (40) exp -> exp RA . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 86

state 50

    (35) exp -> exp PLUS . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 87

state 51

    (41) exp -> exp WA . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 88

state 52

    (37) exp -> exp TIMES . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 89

state 53

    (29) exp -> exp EQ . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 90

state 54

    (36) exp -> exp MINUS . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 91

state 55

    (49) exp -> IDENTIFIER LPARA . variableexp RPARA
    (26) variableexp -> . exp COMMA variableexp
    (27) variableexp -> . exp
    (28) variableexp -> .
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    RPARA           reduce using rule 28 (variableexp -> .)
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 38
    variableexp                    shift and go to state 92

state 56

    (53) condition -> condition WA . condition
    (52) condition -> . condition RA condition
    (53) condition -> . condition WA condition
    (54) condition -> . exp BHAE
    (55) condition -> . exp NABHAE
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 18
    condition                      shift and go to state 93

state 57

    (14) stmt -> YEDI condition NEWLINE . cmpdstmt optelse DIYE
    (56) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (57) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . dynamString LEKHA
    (11) stmt -> . dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER LEU
    (13) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (14) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (15) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (16) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (17) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (18) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (19) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (20) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (21) stmt -> . exp PATHAU
    (22) stmt -> . NEWLINE
    (50) dynamString -> . exp COMMA dynamString
    (51) dynamString -> . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    ATHAWA          reduce using rule 57 (cmpdstmt -> .)
    DIYE            reduce using rule 57 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 9
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    stmt                           shift and go to state 94
    dynamString                    shift and go to state 4
    cmpdstmt                       shift and go to state 95
    exp                            shift and go to state 15

state 58

    (52) condition -> condition RA . condition
    (52) condition -> . condition RA condition
    (53) condition -> . condition WA condition
    (54) condition -> . exp BHAE
    (55) condition -> . exp NABHAE
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 18
    condition                      shift and go to state 96

state 59

    (54) condition -> exp BHAE .

    NEWLINE         reduce using rule 54 (condition -> exp BHAE .)
    RA              reduce using rule 54 (condition -> exp BHAE .)
    WA              reduce using rule 54 (condition -> exp BHAE .)


state 60

    (55) condition -> exp NABHAE .

    NEWLINE         reduce using rule 55 (condition -> exp NABHAE .)
    RA              reduce using rule 55 (condition -> exp NABHAE .)
    WA              reduce using rule 55 (condition -> exp NABHAE .)


state 61

    (47) exp -> LPARA exp RPARA .
    (48) exp -> LPARA exp RPARA . QUESTION exp COLON exp

    EQ              reduce using rule 47 (exp -> LPARA exp RPARA .)
    LE              reduce using rule 47 (exp -> LPARA exp RPARA .)
    GE              reduce using rule 47 (exp -> LPARA exp RPARA .)
    NE              reduce using rule 47 (exp -> LPARA exp RPARA .)
    LT              reduce using rule 47 (exp -> LPARA exp RPARA .)
    GT              reduce using rule 47 (exp -> LPARA exp RPARA .)
    PLUS            reduce using rule 47 (exp -> LPARA exp RPARA .)
    MINUS           reduce using rule 47 (exp -> LPARA exp RPARA .)
    TIMES           reduce using rule 47 (exp -> LPARA exp RPARA .)
    DIVIDE          reduce using rule 47 (exp -> LPARA exp RPARA .)
    POWER           reduce using rule 47 (exp -> LPARA exp RPARA .)
    RA              reduce using rule 47 (exp -> LPARA exp RPARA .)
    WA              reduce using rule 47 (exp -> LPARA exp RPARA .)
    PATHAU          reduce using rule 47 (exp -> LPARA exp RPARA .)
    COMMA           reduce using rule 47 (exp -> LPARA exp RPARA .)
    LEKHA           reduce using rule 47 (exp -> LPARA exp RPARA .)
    BHAE            reduce using rule 47 (exp -> LPARA exp RPARA .)
    NABHAE          reduce using rule 47 (exp -> LPARA exp RPARA .)
    RPARA           reduce using rule 47 (exp -> LPARA exp RPARA .)
    RGPARA          reduce using rule 47 (exp -> LPARA exp RPARA .)
    CHHA            reduce using rule 47 (exp -> LPARA exp RPARA .)
    CHHAINA         reduce using rule 47 (exp -> LPARA exp RPARA .)
    NEWLINE         reduce using rule 47 (exp -> LPARA exp RPARA .)
    $end            reduce using rule 47 (exp -> LPARA exp RPARA .)
    DEKHI           reduce using rule 47 (exp -> LPARA exp RPARA .)
    COLON           reduce using rule 47 (exp -> LPARA exp RPARA .)
    SEMICOLON       reduce using rule 47 (exp -> LPARA exp RPARA .)
    QUESTION        shift and go to state 97


state 62

    (11) stmt -> dynamString LEKHA SEMICOLON .

    NEWLINE         reduce using rule 11 (stmt -> dynamString LEKHA SEMICOLON .)
    $end            reduce using rule 11 (stmt -> dynamString LEKHA SEMICOLON .)


state 63

    (19) stmt -> KAAM IDENTIFIER LPARA . variableArgs RPARA NEWLINE cmpdstmt MAKA
    (23) variableArgs -> . IDENTIFIER COMMA variableArgs
    (24) variableArgs -> . IDENTIFIER
    (25) variableArgs -> .

    IDENTIFIER      shift and go to state 99
    RPARA           reduce using rule 25 (variableArgs -> .)

    variableArgs                   shift and go to state 98

state 64

    (17) stmt -> JABA SAMMA whilecond . NEWLINE cmpdstmt BAJA
    (66) whilecond -> whilecond . RA whilecond
    (67) whilecond -> whilecond . WA whilecond

    NEWLINE         shift and go to state 101
    RA              shift and go to state 102
    WA              shift and go to state 100


state 65

    (68) whilecond -> exp . CHHA
    (69) whilecond -> exp . CHHAINA
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    CHHA            shift and go to state 103
    CHHAINA         shift and go to state 104
    EQ              shift and go to state 53
    LE              shift and go to state 40
    GE              shift and go to state 46
    NE              shift and go to state 44
    LT              shift and go to state 43
    GT              shift and go to state 47
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42
    RA              shift and go to state 49
    WA              shift and go to state 51


state 66

    (46) exp -> IDENTIFIER LGPARA exp . RGPARA
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    RGPARA          shift and go to state 105
    EQ              shift and go to state 53
    LE              shift and go to state 40
    GE              shift and go to state 46
    NE              shift and go to state 44
    LT              shift and go to state 43
    GT              shift and go to state 47
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42
    RA              shift and go to state 49
    WA              shift and go to state 51


state 67

    (6) stmt -> IDENTIFIER MA dynamString . LEKHA SEMICOLON
    (7) stmt -> IDENTIFIER MA dynamString . LEKHA

    LEKHA           shift and go to state 106


state 68

    (50) dynamString -> exp . COMMA dynamString
    (51) dynamString -> exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    COMMA           shift and go to state 48
    LEKHA           reduce using rule 51 (dynamString -> exp .)
    EQ              shift and go to state 53
    LE              shift and go to state 40
    GE              shift and go to state 46
    NE              shift and go to state 44
    LT              shift and go to state 43
    GT              shift and go to state 47
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42
    RA              shift and go to state 49
    WA              shift and go to state 51


state 69

    (8) stmt -> IDENTIFIER BATA IDENTIFIER . LEU

    LEU             shift and go to state 107


state 70

    (18) stmt -> IDENTIFIER ASSIGNMENT LGPARA . variableexp RGPARA
    (45) exp -> LGPARA . variableexp RGPARA
    (26) variableexp -> . exp COMMA variableexp
    (27) variableexp -> . exp
    (28) variableexp -> .
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    RGPARA          reduce using rule 28 (variableexp -> .)
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 38
    variableexp                    shift and go to state 108

state 71

    (5) stmt -> IDENTIFIER ASSIGNMENT exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    NEWLINE         reduce using rule 5 (stmt -> IDENTIFIER ASSIGNMENT exp .)
    $end            reduce using rule 5 (stmt -> IDENTIFIER ASSIGNMENT exp .)
    EQ              shift and go to state 53
    LE              shift and go to state 40
    GE              shift and go to state 46
    NE              shift and go to state 44
    LT              shift and go to state 43
    GT              shift and go to state 47
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42
    RA              shift and go to state 49
    WA              shift and go to state 51


state 72

    (20) stmt -> IDENTIFIER LPARA variableexp . RPARA
    (49) exp -> IDENTIFIER LPARA variableexp . RPARA

    RPARA           shift and go to state 109


state 73

    (13) stmt -> IDENTIFIER incrementsign ASSIGNMENT . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 110

state 74

    (15) stmt -> SABEI IDENTIFIER ASSIGNMENT . exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (16) stmt -> SABEI IDENTIFIER ASSIGNMENT . exp DEKHI exp NEWLINE cmpdstmt BAISA
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 111

state 75

    (45) exp -> LGPARA variableexp RGPARA .

    EQ              reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    LE              reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    GE              reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    NE              reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    LT              reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    GT              reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    PLUS            reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    MINUS           reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    TIMES           reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    DIVIDE          reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    POWER           reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    RA              reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    WA              reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    PATHAU          reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    COMMA           reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    LEKHA           reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    BHAE            reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    NABHAE          reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    RPARA           reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    RGPARA          reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    CHHA            reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    CHHAINA         reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    NEWLINE         reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    $end            reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    DEKHI           reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    COLON           reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    SEMICOLON       reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)


state 76

    (26) variableexp -> exp COMMA . variableexp
    (26) variableexp -> . exp COMMA variableexp
    (27) variableexp -> . exp
    (28) variableexp -> .
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    RGPARA          reduce using rule 28 (variableexp -> .)
    RPARA           reduce using rule 28 (variableexp -> .)
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    variableexp                    shift and go to state 112
    exp                            shift and go to state 38

state 77

    (1) N -> element NEWLINE N .

    $end            reduce using rule 1 (N -> element NEWLINE N .)


state 78

    (30) exp -> exp LE exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    EQ              reduce using rule 30 (exp -> exp LE exp .)
    LE              reduce using rule 30 (exp -> exp LE exp .)
    GE              reduce using rule 30 (exp -> exp LE exp .)
    NE              reduce using rule 30 (exp -> exp LE exp .)
    LT              reduce using rule 30 (exp -> exp LE exp .)
    GT              reduce using rule 30 (exp -> exp LE exp .)
    RA              reduce using rule 30 (exp -> exp LE exp .)
    WA              reduce using rule 30 (exp -> exp LE exp .)
    PATHAU          reduce using rule 30 (exp -> exp LE exp .)
    COMMA           reduce using rule 30 (exp -> exp LE exp .)
    LEKHA           reduce using rule 30 (exp -> exp LE exp .)
    BHAE            reduce using rule 30 (exp -> exp LE exp .)
    NABHAE          reduce using rule 30 (exp -> exp LE exp .)
    RPARA           reduce using rule 30 (exp -> exp LE exp .)
    RGPARA          reduce using rule 30 (exp -> exp LE exp .)
    CHHA            reduce using rule 30 (exp -> exp LE exp .)
    CHHAINA         reduce using rule 30 (exp -> exp LE exp .)
    NEWLINE         reduce using rule 30 (exp -> exp LE exp .)
    $end            reduce using rule 30 (exp -> exp LE exp .)
    DEKHI           reduce using rule 30 (exp -> exp LE exp .)
    COLON           reduce using rule 30 (exp -> exp LE exp .)
    SEMICOLON       reduce using rule 30 (exp -> exp LE exp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42

  ! PLUS            [ reduce using rule 30 (exp -> exp LE exp .) ]
  ! MINUS           [ reduce using rule 30 (exp -> exp LE exp .) ]
  ! TIMES           [ reduce using rule 30 (exp -> exp LE exp .) ]
  ! DIVIDE          [ reduce using rule 30 (exp -> exp LE exp .) ]
  ! POWER           [ reduce using rule 30 (exp -> exp LE exp .) ]
  ! EQ              [ shift and go to state 53 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 47 ]
  ! RA              [ shift and go to state 49 ]
  ! WA              [ shift and go to state 51 ]


state 79

    (38) exp -> exp DIVIDE exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    EQ              reduce using rule 38 (exp -> exp DIVIDE exp .)
    LE              reduce using rule 38 (exp -> exp DIVIDE exp .)
    GE              reduce using rule 38 (exp -> exp DIVIDE exp .)
    NE              reduce using rule 38 (exp -> exp DIVIDE exp .)
    LT              reduce using rule 38 (exp -> exp DIVIDE exp .)
    GT              reduce using rule 38 (exp -> exp DIVIDE exp .)
    PLUS            reduce using rule 38 (exp -> exp DIVIDE exp .)
    MINUS           reduce using rule 38 (exp -> exp DIVIDE exp .)
    TIMES           reduce using rule 38 (exp -> exp DIVIDE exp .)
    DIVIDE          reduce using rule 38 (exp -> exp DIVIDE exp .)
    POWER           reduce using rule 38 (exp -> exp DIVIDE exp .)
    RA              reduce using rule 38 (exp -> exp DIVIDE exp .)
    WA              reduce using rule 38 (exp -> exp DIVIDE exp .)
    PATHAU          reduce using rule 38 (exp -> exp DIVIDE exp .)
    COMMA           reduce using rule 38 (exp -> exp DIVIDE exp .)
    LEKHA           reduce using rule 38 (exp -> exp DIVIDE exp .)
    BHAE            reduce using rule 38 (exp -> exp DIVIDE exp .)
    NABHAE          reduce using rule 38 (exp -> exp DIVIDE exp .)
    RPARA           reduce using rule 38 (exp -> exp DIVIDE exp .)
    RGPARA          reduce using rule 38 (exp -> exp DIVIDE exp .)
    CHHA            reduce using rule 38 (exp -> exp DIVIDE exp .)
    CHHAINA         reduce using rule 38 (exp -> exp DIVIDE exp .)
    NEWLINE         reduce using rule 38 (exp -> exp DIVIDE exp .)
    $end            reduce using rule 38 (exp -> exp DIVIDE exp .)
    DEKHI           reduce using rule 38 (exp -> exp DIVIDE exp .)
    COLON           reduce using rule 38 (exp -> exp DIVIDE exp .)
    SEMICOLON       reduce using rule 38 (exp -> exp DIVIDE exp .)

  ! EQ              [ shift and go to state 53 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 47 ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 54 ]
  ! TIMES           [ shift and go to state 52 ]
  ! DIVIDE          [ shift and go to state 41 ]
  ! POWER           [ shift and go to state 42 ]
  ! RA              [ shift and go to state 49 ]
  ! WA              [ shift and go to state 51 ]


state 80

    (39) exp -> exp POWER exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    EQ              reduce using rule 39 (exp -> exp POWER exp .)
    LE              reduce using rule 39 (exp -> exp POWER exp .)
    GE              reduce using rule 39 (exp -> exp POWER exp .)
    NE              reduce using rule 39 (exp -> exp POWER exp .)
    LT              reduce using rule 39 (exp -> exp POWER exp .)
    GT              reduce using rule 39 (exp -> exp POWER exp .)
    PLUS            reduce using rule 39 (exp -> exp POWER exp .)
    MINUS           reduce using rule 39 (exp -> exp POWER exp .)
    TIMES           reduce using rule 39 (exp -> exp POWER exp .)
    DIVIDE          reduce using rule 39 (exp -> exp POWER exp .)
    POWER           reduce using rule 39 (exp -> exp POWER exp .)
    RA              reduce using rule 39 (exp -> exp POWER exp .)
    WA              reduce using rule 39 (exp -> exp POWER exp .)
    PATHAU          reduce using rule 39 (exp -> exp POWER exp .)
    COMMA           reduce using rule 39 (exp -> exp POWER exp .)
    LEKHA           reduce using rule 39 (exp -> exp POWER exp .)
    BHAE            reduce using rule 39 (exp -> exp POWER exp .)
    NABHAE          reduce using rule 39 (exp -> exp POWER exp .)
    RPARA           reduce using rule 39 (exp -> exp POWER exp .)
    RGPARA          reduce using rule 39 (exp -> exp POWER exp .)
    CHHA            reduce using rule 39 (exp -> exp POWER exp .)
    CHHAINA         reduce using rule 39 (exp -> exp POWER exp .)
    NEWLINE         reduce using rule 39 (exp -> exp POWER exp .)
    $end            reduce using rule 39 (exp -> exp POWER exp .)
    DEKHI           reduce using rule 39 (exp -> exp POWER exp .)
    COLON           reduce using rule 39 (exp -> exp POWER exp .)
    SEMICOLON       reduce using rule 39 (exp -> exp POWER exp .)

  ! EQ              [ shift and go to state 53 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 47 ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 54 ]
  ! TIMES           [ shift and go to state 52 ]
  ! DIVIDE          [ shift and go to state 41 ]
  ! POWER           [ shift and go to state 42 ]
  ! RA              [ shift and go to state 49 ]
  ! WA              [ shift and go to state 51 ]


state 81

    (33) exp -> exp LT exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    EQ              reduce using rule 33 (exp -> exp LT exp .)
    LE              reduce using rule 33 (exp -> exp LT exp .)
    GE              reduce using rule 33 (exp -> exp LT exp .)
    NE              reduce using rule 33 (exp -> exp LT exp .)
    LT              reduce using rule 33 (exp -> exp LT exp .)
    GT              reduce using rule 33 (exp -> exp LT exp .)
    RA              reduce using rule 33 (exp -> exp LT exp .)
    WA              reduce using rule 33 (exp -> exp LT exp .)
    PATHAU          reduce using rule 33 (exp -> exp LT exp .)
    COMMA           reduce using rule 33 (exp -> exp LT exp .)
    LEKHA           reduce using rule 33 (exp -> exp LT exp .)
    BHAE            reduce using rule 33 (exp -> exp LT exp .)
    NABHAE          reduce using rule 33 (exp -> exp LT exp .)
    RPARA           reduce using rule 33 (exp -> exp LT exp .)
    RGPARA          reduce using rule 33 (exp -> exp LT exp .)
    CHHA            reduce using rule 33 (exp -> exp LT exp .)
    CHHAINA         reduce using rule 33 (exp -> exp LT exp .)
    NEWLINE         reduce using rule 33 (exp -> exp LT exp .)
    $end            reduce using rule 33 (exp -> exp LT exp .)
    DEKHI           reduce using rule 33 (exp -> exp LT exp .)
    COLON           reduce using rule 33 (exp -> exp LT exp .)
    SEMICOLON       reduce using rule 33 (exp -> exp LT exp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42

  ! PLUS            [ reduce using rule 33 (exp -> exp LT exp .) ]
  ! MINUS           [ reduce using rule 33 (exp -> exp LT exp .) ]
  ! TIMES           [ reduce using rule 33 (exp -> exp LT exp .) ]
  ! DIVIDE          [ reduce using rule 33 (exp -> exp LT exp .) ]
  ! POWER           [ reduce using rule 33 (exp -> exp LT exp .) ]
  ! EQ              [ shift and go to state 53 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 47 ]
  ! RA              [ shift and go to state 49 ]
  ! WA              [ shift and go to state 51 ]


state 82

    (32) exp -> exp NE exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 32 (exp -> exp NE exp .)
    COMMA           reduce using rule 32 (exp -> exp NE exp .)
    LEKHA           reduce using rule 32 (exp -> exp NE exp .)
    BHAE            reduce using rule 32 (exp -> exp NE exp .)
    NABHAE          reduce using rule 32 (exp -> exp NE exp .)
    RPARA           reduce using rule 32 (exp -> exp NE exp .)
    RGPARA          reduce using rule 32 (exp -> exp NE exp .)
    CHHA            reduce using rule 32 (exp -> exp NE exp .)
    CHHAINA         reduce using rule 32 (exp -> exp NE exp .)
    NEWLINE         reduce using rule 32 (exp -> exp NE exp .)
    $end            reduce using rule 32 (exp -> exp NE exp .)
    DEKHI           reduce using rule 32 (exp -> exp NE exp .)
    COLON           reduce using rule 32 (exp -> exp NE exp .)
    SEMICOLON       reduce using rule 32 (exp -> exp NE exp .)
    EQ              shift and go to state 53
    LE              shift and go to state 40
    GE              shift and go to state 46
    NE              shift and go to state 44
    LT              shift and go to state 43
    GT              shift and go to state 47
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42
    RA              shift and go to state 49
    WA              shift and go to state 51

  ! EQ              [ reduce using rule 32 (exp -> exp NE exp .) ]
  ! LE              [ reduce using rule 32 (exp -> exp NE exp .) ]
  ! GE              [ reduce using rule 32 (exp -> exp NE exp .) ]
  ! NE              [ reduce using rule 32 (exp -> exp NE exp .) ]
  ! LT              [ reduce using rule 32 (exp -> exp NE exp .) ]
  ! GT              [ reduce using rule 32 (exp -> exp NE exp .) ]
  ! PLUS            [ reduce using rule 32 (exp -> exp NE exp .) ]
  ! MINUS           [ reduce using rule 32 (exp -> exp NE exp .) ]
  ! TIMES           [ reduce using rule 32 (exp -> exp NE exp .) ]
  ! DIVIDE          [ reduce using rule 32 (exp -> exp NE exp .) ]
  ! POWER           [ reduce using rule 32 (exp -> exp NE exp .) ]
  ! RA              [ reduce using rule 32 (exp -> exp NE exp .) ]
  ! WA              [ reduce using rule 32 (exp -> exp NE exp .) ]


state 83

    (31) exp -> exp GE exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    EQ              reduce using rule 31 (exp -> exp GE exp .)
    LE              reduce using rule 31 (exp -> exp GE exp .)
    GE              reduce using rule 31 (exp -> exp GE exp .)
    NE              reduce using rule 31 (exp -> exp GE exp .)
    LT              reduce using rule 31 (exp -> exp GE exp .)
    GT              reduce using rule 31 (exp -> exp GE exp .)
    RA              reduce using rule 31 (exp -> exp GE exp .)
    WA              reduce using rule 31 (exp -> exp GE exp .)
    PATHAU          reduce using rule 31 (exp -> exp GE exp .)
    COMMA           reduce using rule 31 (exp -> exp GE exp .)
    LEKHA           reduce using rule 31 (exp -> exp GE exp .)
    BHAE            reduce using rule 31 (exp -> exp GE exp .)
    NABHAE          reduce using rule 31 (exp -> exp GE exp .)
    RPARA           reduce using rule 31 (exp -> exp GE exp .)
    RGPARA          reduce using rule 31 (exp -> exp GE exp .)
    CHHA            reduce using rule 31 (exp -> exp GE exp .)
    CHHAINA         reduce using rule 31 (exp -> exp GE exp .)
    NEWLINE         reduce using rule 31 (exp -> exp GE exp .)
    $end            reduce using rule 31 (exp -> exp GE exp .)
    DEKHI           reduce using rule 31 (exp -> exp GE exp .)
    COLON           reduce using rule 31 (exp -> exp GE exp .)
    SEMICOLON       reduce using rule 31 (exp -> exp GE exp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42

  ! PLUS            [ reduce using rule 31 (exp -> exp GE exp .) ]
  ! MINUS           [ reduce using rule 31 (exp -> exp GE exp .) ]
  ! TIMES           [ reduce using rule 31 (exp -> exp GE exp .) ]
  ! DIVIDE          [ reduce using rule 31 (exp -> exp GE exp .) ]
  ! POWER           [ reduce using rule 31 (exp -> exp GE exp .) ]
  ! EQ              [ shift and go to state 53 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 47 ]
  ! RA              [ shift and go to state 49 ]
  ! WA              [ shift and go to state 51 ]


state 84

    (34) exp -> exp GT exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    EQ              reduce using rule 34 (exp -> exp GT exp .)
    LE              reduce using rule 34 (exp -> exp GT exp .)
    GE              reduce using rule 34 (exp -> exp GT exp .)
    NE              reduce using rule 34 (exp -> exp GT exp .)
    LT              reduce using rule 34 (exp -> exp GT exp .)
    GT              reduce using rule 34 (exp -> exp GT exp .)
    RA              reduce using rule 34 (exp -> exp GT exp .)
    WA              reduce using rule 34 (exp -> exp GT exp .)
    PATHAU          reduce using rule 34 (exp -> exp GT exp .)
    COMMA           reduce using rule 34 (exp -> exp GT exp .)
    LEKHA           reduce using rule 34 (exp -> exp GT exp .)
    BHAE            reduce using rule 34 (exp -> exp GT exp .)
    NABHAE          reduce using rule 34 (exp -> exp GT exp .)
    RPARA           reduce using rule 34 (exp -> exp GT exp .)
    RGPARA          reduce using rule 34 (exp -> exp GT exp .)
    CHHA            reduce using rule 34 (exp -> exp GT exp .)
    CHHAINA         reduce using rule 34 (exp -> exp GT exp .)
    NEWLINE         reduce using rule 34 (exp -> exp GT exp .)
    $end            reduce using rule 34 (exp -> exp GT exp .)
    DEKHI           reduce using rule 34 (exp -> exp GT exp .)
    COLON           reduce using rule 34 (exp -> exp GT exp .)
    SEMICOLON       reduce using rule 34 (exp -> exp GT exp .)
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42

  ! PLUS            [ reduce using rule 34 (exp -> exp GT exp .) ]
  ! MINUS           [ reduce using rule 34 (exp -> exp GT exp .) ]
  ! TIMES           [ reduce using rule 34 (exp -> exp GT exp .) ]
  ! DIVIDE          [ reduce using rule 34 (exp -> exp GT exp .) ]
  ! POWER           [ reduce using rule 34 (exp -> exp GT exp .) ]
  ! EQ              [ shift and go to state 53 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 47 ]
  ! RA              [ shift and go to state 49 ]
  ! WA              [ shift and go to state 51 ]


state 85

    (50) dynamString -> exp COMMA dynamString .

    LEKHA           reduce using rule 50 (dynamString -> exp COMMA dynamString .)


state 86

    (40) exp -> exp RA exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 40 (exp -> exp RA exp .)
    COMMA           reduce using rule 40 (exp -> exp RA exp .)
    LEKHA           reduce using rule 40 (exp -> exp RA exp .)
    BHAE            reduce using rule 40 (exp -> exp RA exp .)
    NABHAE          reduce using rule 40 (exp -> exp RA exp .)
    RPARA           reduce using rule 40 (exp -> exp RA exp .)
    RGPARA          reduce using rule 40 (exp -> exp RA exp .)
    CHHA            reduce using rule 40 (exp -> exp RA exp .)
    CHHAINA         reduce using rule 40 (exp -> exp RA exp .)
    NEWLINE         reduce using rule 40 (exp -> exp RA exp .)
    $end            reduce using rule 40 (exp -> exp RA exp .)
    DEKHI           reduce using rule 40 (exp -> exp RA exp .)
    COLON           reduce using rule 40 (exp -> exp RA exp .)
    SEMICOLON       reduce using rule 40 (exp -> exp RA exp .)
    EQ              shift and go to state 53
    LE              shift and go to state 40
    GE              shift and go to state 46
    NE              shift and go to state 44
    LT              shift and go to state 43
    GT              shift and go to state 47
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42
    RA              shift and go to state 49
    WA              shift and go to state 51

  ! EQ              [ reduce using rule 40 (exp -> exp RA exp .) ]
  ! LE              [ reduce using rule 40 (exp -> exp RA exp .) ]
  ! GE              [ reduce using rule 40 (exp -> exp RA exp .) ]
  ! NE              [ reduce using rule 40 (exp -> exp RA exp .) ]
  ! LT              [ reduce using rule 40 (exp -> exp RA exp .) ]
  ! GT              [ reduce using rule 40 (exp -> exp RA exp .) ]
  ! PLUS            [ reduce using rule 40 (exp -> exp RA exp .) ]
  ! MINUS           [ reduce using rule 40 (exp -> exp RA exp .) ]
  ! TIMES           [ reduce using rule 40 (exp -> exp RA exp .) ]
  ! DIVIDE          [ reduce using rule 40 (exp -> exp RA exp .) ]
  ! POWER           [ reduce using rule 40 (exp -> exp RA exp .) ]
  ! RA              [ reduce using rule 40 (exp -> exp RA exp .) ]
  ! WA              [ reduce using rule 40 (exp -> exp RA exp .) ]


state 87

    (35) exp -> exp PLUS exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    EQ              reduce using rule 35 (exp -> exp PLUS exp .)
    LE              reduce using rule 35 (exp -> exp PLUS exp .)
    GE              reduce using rule 35 (exp -> exp PLUS exp .)
    NE              reduce using rule 35 (exp -> exp PLUS exp .)
    LT              reduce using rule 35 (exp -> exp PLUS exp .)
    GT              reduce using rule 35 (exp -> exp PLUS exp .)
    PLUS            reduce using rule 35 (exp -> exp PLUS exp .)
    MINUS           reduce using rule 35 (exp -> exp PLUS exp .)
    RA              reduce using rule 35 (exp -> exp PLUS exp .)
    WA              reduce using rule 35 (exp -> exp PLUS exp .)
    PATHAU          reduce using rule 35 (exp -> exp PLUS exp .)
    COMMA           reduce using rule 35 (exp -> exp PLUS exp .)
    LEKHA           reduce using rule 35 (exp -> exp PLUS exp .)
    BHAE            reduce using rule 35 (exp -> exp PLUS exp .)
    NABHAE          reduce using rule 35 (exp -> exp PLUS exp .)
    RPARA           reduce using rule 35 (exp -> exp PLUS exp .)
    RGPARA          reduce using rule 35 (exp -> exp PLUS exp .)
    CHHA            reduce using rule 35 (exp -> exp PLUS exp .)
    CHHAINA         reduce using rule 35 (exp -> exp PLUS exp .)
    NEWLINE         reduce using rule 35 (exp -> exp PLUS exp .)
    $end            reduce using rule 35 (exp -> exp PLUS exp .)
    DEKHI           reduce using rule 35 (exp -> exp PLUS exp .)
    COLON           reduce using rule 35 (exp -> exp PLUS exp .)
    SEMICOLON       reduce using rule 35 (exp -> exp PLUS exp .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42

  ! TIMES           [ reduce using rule 35 (exp -> exp PLUS exp .) ]
  ! DIVIDE          [ reduce using rule 35 (exp -> exp PLUS exp .) ]
  ! POWER           [ reduce using rule 35 (exp -> exp PLUS exp .) ]
  ! EQ              [ shift and go to state 53 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 47 ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 54 ]
  ! RA              [ shift and go to state 49 ]
  ! WA              [ shift and go to state 51 ]


state 88

    (41) exp -> exp WA exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 41 (exp -> exp WA exp .)
    COMMA           reduce using rule 41 (exp -> exp WA exp .)
    LEKHA           reduce using rule 41 (exp -> exp WA exp .)
    BHAE            reduce using rule 41 (exp -> exp WA exp .)
    NABHAE          reduce using rule 41 (exp -> exp WA exp .)
    RPARA           reduce using rule 41 (exp -> exp WA exp .)
    RGPARA          reduce using rule 41 (exp -> exp WA exp .)
    CHHA            reduce using rule 41 (exp -> exp WA exp .)
    CHHAINA         reduce using rule 41 (exp -> exp WA exp .)
    NEWLINE         reduce using rule 41 (exp -> exp WA exp .)
    $end            reduce using rule 41 (exp -> exp WA exp .)
    DEKHI           reduce using rule 41 (exp -> exp WA exp .)
    COLON           reduce using rule 41 (exp -> exp WA exp .)
    SEMICOLON       reduce using rule 41 (exp -> exp WA exp .)
    EQ              shift and go to state 53
    LE              shift and go to state 40
    GE              shift and go to state 46
    NE              shift and go to state 44
    LT              shift and go to state 43
    GT              shift and go to state 47
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42
    RA              shift and go to state 49
    WA              shift and go to state 51

  ! EQ              [ reduce using rule 41 (exp -> exp WA exp .) ]
  ! LE              [ reduce using rule 41 (exp -> exp WA exp .) ]
  ! GE              [ reduce using rule 41 (exp -> exp WA exp .) ]
  ! NE              [ reduce using rule 41 (exp -> exp WA exp .) ]
  ! LT              [ reduce using rule 41 (exp -> exp WA exp .) ]
  ! GT              [ reduce using rule 41 (exp -> exp WA exp .) ]
  ! PLUS            [ reduce using rule 41 (exp -> exp WA exp .) ]
  ! MINUS           [ reduce using rule 41 (exp -> exp WA exp .) ]
  ! TIMES           [ reduce using rule 41 (exp -> exp WA exp .) ]
  ! DIVIDE          [ reduce using rule 41 (exp -> exp WA exp .) ]
  ! POWER           [ reduce using rule 41 (exp -> exp WA exp .) ]
  ! RA              [ reduce using rule 41 (exp -> exp WA exp .) ]
  ! WA              [ reduce using rule 41 (exp -> exp WA exp .) ]


state 89

    (37) exp -> exp TIMES exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    EQ              reduce using rule 37 (exp -> exp TIMES exp .)
    LE              reduce using rule 37 (exp -> exp TIMES exp .)
    GE              reduce using rule 37 (exp -> exp TIMES exp .)
    NE              reduce using rule 37 (exp -> exp TIMES exp .)
    LT              reduce using rule 37 (exp -> exp TIMES exp .)
    GT              reduce using rule 37 (exp -> exp TIMES exp .)
    PLUS            reduce using rule 37 (exp -> exp TIMES exp .)
    MINUS           reduce using rule 37 (exp -> exp TIMES exp .)
    TIMES           reduce using rule 37 (exp -> exp TIMES exp .)
    DIVIDE          reduce using rule 37 (exp -> exp TIMES exp .)
    POWER           reduce using rule 37 (exp -> exp TIMES exp .)
    RA              reduce using rule 37 (exp -> exp TIMES exp .)
    WA              reduce using rule 37 (exp -> exp TIMES exp .)
    PATHAU          reduce using rule 37 (exp -> exp TIMES exp .)
    COMMA           reduce using rule 37 (exp -> exp TIMES exp .)
    LEKHA           reduce using rule 37 (exp -> exp TIMES exp .)
    BHAE            reduce using rule 37 (exp -> exp TIMES exp .)
    NABHAE          reduce using rule 37 (exp -> exp TIMES exp .)
    RPARA           reduce using rule 37 (exp -> exp TIMES exp .)
    RGPARA          reduce using rule 37 (exp -> exp TIMES exp .)
    CHHA            reduce using rule 37 (exp -> exp TIMES exp .)
    CHHAINA         reduce using rule 37 (exp -> exp TIMES exp .)
    NEWLINE         reduce using rule 37 (exp -> exp TIMES exp .)
    $end            reduce using rule 37 (exp -> exp TIMES exp .)
    DEKHI           reduce using rule 37 (exp -> exp TIMES exp .)
    COLON           reduce using rule 37 (exp -> exp TIMES exp .)
    SEMICOLON       reduce using rule 37 (exp -> exp TIMES exp .)

  ! EQ              [ shift and go to state 53 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 47 ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 54 ]
  ! TIMES           [ shift and go to state 52 ]
  ! DIVIDE          [ shift and go to state 41 ]
  ! POWER           [ shift and go to state 42 ]
  ! RA              [ shift and go to state 49 ]
  ! WA              [ shift and go to state 51 ]


state 90

    (29) exp -> exp EQ exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    EQ              reduce using rule 29 (exp -> exp EQ exp .)
    NE              reduce using rule 29 (exp -> exp EQ exp .)
    RA              reduce using rule 29 (exp -> exp EQ exp .)
    WA              reduce using rule 29 (exp -> exp EQ exp .)
    PATHAU          reduce using rule 29 (exp -> exp EQ exp .)
    COMMA           reduce using rule 29 (exp -> exp EQ exp .)
    LEKHA           reduce using rule 29 (exp -> exp EQ exp .)
    BHAE            reduce using rule 29 (exp -> exp EQ exp .)
    NABHAE          reduce using rule 29 (exp -> exp EQ exp .)
    RPARA           reduce using rule 29 (exp -> exp EQ exp .)
    RGPARA          reduce using rule 29 (exp -> exp EQ exp .)
    CHHA            reduce using rule 29 (exp -> exp EQ exp .)
    CHHAINA         reduce using rule 29 (exp -> exp EQ exp .)
    NEWLINE         reduce using rule 29 (exp -> exp EQ exp .)
    $end            reduce using rule 29 (exp -> exp EQ exp .)
    DEKHI           reduce using rule 29 (exp -> exp EQ exp .)
    COLON           reduce using rule 29 (exp -> exp EQ exp .)
    SEMICOLON       reduce using rule 29 (exp -> exp EQ exp .)
    LE              shift and go to state 40
    GE              shift and go to state 46
    LT              shift and go to state 43
    GT              shift and go to state 47
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42

  ! LE              [ reduce using rule 29 (exp -> exp EQ exp .) ]
  ! GE              [ reduce using rule 29 (exp -> exp EQ exp .) ]
  ! LT              [ reduce using rule 29 (exp -> exp EQ exp .) ]
  ! GT              [ reduce using rule 29 (exp -> exp EQ exp .) ]
  ! PLUS            [ reduce using rule 29 (exp -> exp EQ exp .) ]
  ! MINUS           [ reduce using rule 29 (exp -> exp EQ exp .) ]
  ! TIMES           [ reduce using rule 29 (exp -> exp EQ exp .) ]
  ! DIVIDE          [ reduce using rule 29 (exp -> exp EQ exp .) ]
  ! POWER           [ reduce using rule 29 (exp -> exp EQ exp .) ]
  ! EQ              [ shift and go to state 53 ]
  ! NE              [ shift and go to state 44 ]
  ! RA              [ shift and go to state 49 ]
  ! WA              [ shift and go to state 51 ]


state 91

    (36) exp -> exp MINUS exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    EQ              reduce using rule 36 (exp -> exp MINUS exp .)
    LE              reduce using rule 36 (exp -> exp MINUS exp .)
    GE              reduce using rule 36 (exp -> exp MINUS exp .)
    NE              reduce using rule 36 (exp -> exp MINUS exp .)
    LT              reduce using rule 36 (exp -> exp MINUS exp .)
    GT              reduce using rule 36 (exp -> exp MINUS exp .)
    PLUS            reduce using rule 36 (exp -> exp MINUS exp .)
    MINUS           reduce using rule 36 (exp -> exp MINUS exp .)
    RA              reduce using rule 36 (exp -> exp MINUS exp .)
    WA              reduce using rule 36 (exp -> exp MINUS exp .)
    PATHAU          reduce using rule 36 (exp -> exp MINUS exp .)
    COMMA           reduce using rule 36 (exp -> exp MINUS exp .)
    LEKHA           reduce using rule 36 (exp -> exp MINUS exp .)
    BHAE            reduce using rule 36 (exp -> exp MINUS exp .)
    NABHAE          reduce using rule 36 (exp -> exp MINUS exp .)
    RPARA           reduce using rule 36 (exp -> exp MINUS exp .)
    RGPARA          reduce using rule 36 (exp -> exp MINUS exp .)
    CHHA            reduce using rule 36 (exp -> exp MINUS exp .)
    CHHAINA         reduce using rule 36 (exp -> exp MINUS exp .)
    NEWLINE         reduce using rule 36 (exp -> exp MINUS exp .)
    $end            reduce using rule 36 (exp -> exp MINUS exp .)
    DEKHI           reduce using rule 36 (exp -> exp MINUS exp .)
    COLON           reduce using rule 36 (exp -> exp MINUS exp .)
    SEMICOLON       reduce using rule 36 (exp -> exp MINUS exp .)
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42

  ! TIMES           [ reduce using rule 36 (exp -> exp MINUS exp .) ]
  ! DIVIDE          [ reduce using rule 36 (exp -> exp MINUS exp .) ]
  ! POWER           [ reduce using rule 36 (exp -> exp MINUS exp .) ]
  ! EQ              [ shift and go to state 53 ]
  ! LE              [ shift and go to state 40 ]
  ! GE              [ shift and go to state 46 ]
  ! NE              [ shift and go to state 44 ]
  ! LT              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 47 ]
  ! PLUS            [ shift and go to state 50 ]
  ! MINUS           [ shift and go to state 54 ]
  ! RA              [ shift and go to state 49 ]
  ! WA              [ shift and go to state 51 ]


state 92

    (49) exp -> IDENTIFIER LPARA variableexp . RPARA

    RPARA           shift and go to state 113


state 93

    (53) condition -> condition WA condition .
    (52) condition -> condition . RA condition
    (53) condition -> condition . WA condition

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 53 (condition -> condition WA condition .)
    RA              shift and go to state 58
    WA              shift and go to state 56

  ! RA              [ reduce using rule 53 (condition -> condition WA condition .) ]
  ! WA              [ reduce using rule 53 (condition -> condition WA condition .) ]


state 94

    (56) cmpdstmt -> stmt . NEWLINE cmpdstmt

    NEWLINE         shift and go to state 114


state 95

    (14) stmt -> YEDI condition NEWLINE cmpdstmt . optelse DIYE
    (58) optelse -> . ATHAWA condition NEWLINE cmpdstmt optelse
    (59) optelse -> . ATHAWA NEWLINE cmpdstmt
    (60) optelse -> .

    ATHAWA          shift and go to state 116
    DIYE            reduce using rule 60 (optelse -> .)

    optelse                        shift and go to state 115

state 96

    (52) condition -> condition RA condition .
    (52) condition -> condition . RA condition
    (53) condition -> condition . WA condition

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 52 (condition -> condition RA condition .)
    RA              shift and go to state 58
    WA              shift and go to state 56

  ! RA              [ reduce using rule 52 (condition -> condition RA condition .) ]
  ! WA              [ reduce using rule 52 (condition -> condition RA condition .) ]


state 97

    (48) exp -> LPARA exp RPARA QUESTION . exp COLON exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 117

state 98

    (19) stmt -> KAAM IDENTIFIER LPARA variableArgs . RPARA NEWLINE cmpdstmt MAKA

    RPARA           shift and go to state 118


state 99

    (23) variableArgs -> IDENTIFIER . COMMA variableArgs
    (24) variableArgs -> IDENTIFIER .

    COMMA           shift and go to state 119
    RPARA           reduce using rule 24 (variableArgs -> IDENTIFIER .)


state 100

    (67) whilecond -> whilecond WA . whilecond
    (66) whilecond -> . whilecond RA whilecond
    (67) whilecond -> . whilecond WA whilecond
    (68) whilecond -> . exp CHHA
    (69) whilecond -> . exp CHHAINA
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 65
    whilecond                      shift and go to state 120

state 101

    (17) stmt -> JABA SAMMA whilecond NEWLINE . cmpdstmt BAJA
    (56) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (57) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . dynamString LEKHA
    (11) stmt -> . dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER LEU
    (13) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (14) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (15) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (16) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (17) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (18) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (19) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (20) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (21) stmt -> . exp PATHAU
    (22) stmt -> . NEWLINE
    (50) dynamString -> . exp COMMA dynamString
    (51) dynamString -> . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    BAJA            reduce using rule 57 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 9
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    stmt                           shift and go to state 94
    dynamString                    shift and go to state 4
    cmpdstmt                       shift and go to state 121
    exp                            shift and go to state 15

state 102

    (66) whilecond -> whilecond RA . whilecond
    (66) whilecond -> . whilecond RA whilecond
    (67) whilecond -> . whilecond WA whilecond
    (68) whilecond -> . exp CHHA
    (69) whilecond -> . exp CHHAINA
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 65
    whilecond                      shift and go to state 122

state 103

    (68) whilecond -> exp CHHA .

    RA              reduce using rule 68 (whilecond -> exp CHHA .)
    WA              reduce using rule 68 (whilecond -> exp CHHA .)
    NEWLINE         reduce using rule 68 (whilecond -> exp CHHA .)


state 104

    (69) whilecond -> exp CHHAINA .

    RA              reduce using rule 69 (whilecond -> exp CHHAINA .)
    WA              reduce using rule 69 (whilecond -> exp CHHAINA .)
    NEWLINE         reduce using rule 69 (whilecond -> exp CHHAINA .)


state 105

    (46) exp -> IDENTIFIER LGPARA exp RGPARA .

    EQ              reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LE              reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    GE              reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NE              reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LT              reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    GT              reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    PLUS            reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    MINUS           reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    TIMES           reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    DIVIDE          reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    POWER           reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RA              reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    WA              reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    PATHAU          reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    COMMA           reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LEKHA           reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    BHAE            reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NABHAE          reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RPARA           reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RGPARA          reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    CHHA            reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    CHHAINA         reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NEWLINE         reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    $end            reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    DEKHI           reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    COLON           reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    SEMICOLON       reduce using rule 46 (exp -> IDENTIFIER LGPARA exp RGPARA .)


state 106

    (6) stmt -> IDENTIFIER MA dynamString LEKHA . SEMICOLON
    (7) stmt -> IDENTIFIER MA dynamString LEKHA .

    SEMICOLON       shift and go to state 123
    NEWLINE         reduce using rule 7 (stmt -> IDENTIFIER MA dynamString LEKHA .)
    $end            reduce using rule 7 (stmt -> IDENTIFIER MA dynamString LEKHA .)


state 107

    (8) stmt -> IDENTIFIER BATA IDENTIFIER LEU .

    NEWLINE         reduce using rule 8 (stmt -> IDENTIFIER BATA IDENTIFIER LEU .)
    $end            reduce using rule 8 (stmt -> IDENTIFIER BATA IDENTIFIER LEU .)


state 108

    (18) stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp . RGPARA
    (45) exp -> LGPARA variableexp . RGPARA

    RGPARA          shift and go to state 124


state 109

    (20) stmt -> IDENTIFIER LPARA variableexp RPARA .
    (49) exp -> IDENTIFIER LPARA variableexp RPARA .

    NEWLINE         reduce using rule 20 (stmt -> IDENTIFIER LPARA variableexp RPARA .)
    $end            reduce using rule 20 (stmt -> IDENTIFIER LPARA variableexp RPARA .)
    PATHAU          reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    COMMA           reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    EQ              reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LE              reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GE              reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NE              reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LT              reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GT              reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    PLUS            reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    MINUS           reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    TIMES           reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    DIVIDE          reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    POWER           reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RA              reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    WA              reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LEKHA           reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)


state 110

    (13) stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    NEWLINE         reduce using rule 13 (stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .)
    $end            reduce using rule 13 (stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .)
    EQ              shift and go to state 53
    LE              shift and go to state 40
    GE              shift and go to state 46
    NE              shift and go to state 44
    LT              shift and go to state 43
    GT              shift and go to state 47
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42
    RA              shift and go to state 49
    WA              shift and go to state 51


state 111

    (15) stmt -> SABEI IDENTIFIER ASSIGNMENT exp . DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (16) stmt -> SABEI IDENTIFIER ASSIGNMENT exp . DEKHI exp NEWLINE cmpdstmt BAISA
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    DEKHI           shift and go to state 125
    EQ              shift and go to state 53
    LE              shift and go to state 40
    GE              shift and go to state 46
    NE              shift and go to state 44
    LT              shift and go to state 43
    GT              shift and go to state 47
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42
    RA              shift and go to state 49
    WA              shift and go to state 51


state 112

    (26) variableexp -> exp COMMA variableexp .

    RGPARA          reduce using rule 26 (variableexp -> exp COMMA variableexp .)
    RPARA           reduce using rule 26 (variableexp -> exp COMMA variableexp .)


state 113

    (49) exp -> IDENTIFIER LPARA variableexp RPARA .

    EQ              reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LE              reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GE              reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NE              reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LT              reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    GT              reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    PLUS            reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    MINUS           reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    TIMES           reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    DIVIDE          reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    POWER           reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RA              reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    WA              reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    PATHAU          reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    COMMA           reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    LEKHA           reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    BHAE            reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NABHAE          reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RPARA           reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    RGPARA          reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    CHHA            reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    CHHAINA         reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    NEWLINE         reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    $end            reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    DEKHI           reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    COLON           reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)
    SEMICOLON       reduce using rule 49 (exp -> IDENTIFIER LPARA variableexp RPARA .)


state 114

    (56) cmpdstmt -> stmt NEWLINE . cmpdstmt
    (56) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (57) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . dynamString LEKHA
    (11) stmt -> . dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER LEU
    (13) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (14) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (15) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (16) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (17) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (18) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (19) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (20) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (21) stmt -> . exp PATHAU
    (22) stmt -> . NEWLINE
    (50) dynamString -> . exp COMMA dynamString
    (51) dynamString -> . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    ATHAWA          reduce using rule 57 (cmpdstmt -> .)
    DIYE            reduce using rule 57 (cmpdstmt -> .)
    BAJA            reduce using rule 57 (cmpdstmt -> .)
    MAKA            reduce using rule 57 (cmpdstmt -> .)
    BAISA           reduce using rule 57 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 9
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    stmt                           shift and go to state 94
    dynamString                    shift and go to state 4
    cmpdstmt                       shift and go to state 126
    exp                            shift and go to state 15

state 115

    (14) stmt -> YEDI condition NEWLINE cmpdstmt optelse . DIYE

    DIYE            shift and go to state 127


state 116

    (58) optelse -> ATHAWA . condition NEWLINE cmpdstmt optelse
    (59) optelse -> ATHAWA . NEWLINE cmpdstmt
    (52) condition -> . condition RA condition
    (53) condition -> . condition WA condition
    (54) condition -> . exp BHAE
    (55) condition -> . exp NABHAE
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    NEWLINE         shift and go to state 128
    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 18
    condition                      shift and go to state 129

state 117

    (48) exp -> LPARA exp RPARA QUESTION exp . COLON exp
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    COLON           shift and go to state 130
    EQ              shift and go to state 53
    LE              shift and go to state 40
    GE              shift and go to state 46
    NE              shift and go to state 44
    LT              shift and go to state 43
    GT              shift and go to state 47
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42
    RA              shift and go to state 49
    WA              shift and go to state 51


state 118

    (19) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA . NEWLINE cmpdstmt MAKA

    NEWLINE         shift and go to state 131


state 119

    (23) variableArgs -> IDENTIFIER COMMA . variableArgs
    (23) variableArgs -> . IDENTIFIER COMMA variableArgs
    (24) variableArgs -> . IDENTIFIER
    (25) variableArgs -> .

    IDENTIFIER      shift and go to state 99
    RPARA           reduce using rule 25 (variableArgs -> .)

    variableArgs                   shift and go to state 132

state 120

    (67) whilecond -> whilecond WA whilecond .
    (66) whilecond -> whilecond . RA whilecond
    (67) whilecond -> whilecond . WA whilecond

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 67 (whilecond -> whilecond WA whilecond .)
    RA              shift and go to state 102
    WA              shift and go to state 100

  ! RA              [ reduce using rule 67 (whilecond -> whilecond WA whilecond .) ]
  ! WA              [ reduce using rule 67 (whilecond -> whilecond WA whilecond .) ]


state 121

    (17) stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt . BAJA

    BAJA            shift and go to state 133


state 122

    (66) whilecond -> whilecond RA whilecond .
    (66) whilecond -> whilecond . RA whilecond
    (67) whilecond -> whilecond . WA whilecond

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 66 (whilecond -> whilecond RA whilecond .)
    RA              shift and go to state 102
    WA              shift and go to state 100

  ! RA              [ reduce using rule 66 (whilecond -> whilecond RA whilecond .) ]
  ! WA              [ reduce using rule 66 (whilecond -> whilecond RA whilecond .) ]


state 123

    (6) stmt -> IDENTIFIER MA dynamString LEKHA SEMICOLON .

    NEWLINE         reduce using rule 6 (stmt -> IDENTIFIER MA dynamString LEKHA SEMICOLON .)
    $end            reduce using rule 6 (stmt -> IDENTIFIER MA dynamString LEKHA SEMICOLON .)


state 124

    (18) stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .
    (45) exp -> LGPARA variableexp RGPARA .

  ! reduce/reduce conflict for NEWLINE resolved using rule 18 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
  ! reduce/reduce conflict for $end resolved using rule 18 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    NEWLINE         reduce using rule 18 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    $end            reduce using rule 18 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    EQ              reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    LE              reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    GE              reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    NE              reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    LT              reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    GT              reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    PLUS            reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    MINUS           reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    TIMES           reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    DIVIDE          reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    POWER           reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    RA              reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)
    WA              reduce using rule 45 (exp -> LGPARA variableexp RGPARA .)

  ! NEWLINE         [ reduce using rule 45 (exp -> LGPARA variableexp RGPARA .) ]
  ! $end            [ reduce using rule 45 (exp -> LGPARA variableexp RGPARA .) ]


state 125

    (15) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI . exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (16) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI . exp NEWLINE cmpdstmt BAISA
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 134

state 126

    (56) cmpdstmt -> stmt NEWLINE cmpdstmt .

    BAISA           reduce using rule 56 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    DIYE            reduce using rule 56 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    MAKA            reduce using rule 56 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    ATHAWA          reduce using rule 56 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    BAJA            reduce using rule 56 (cmpdstmt -> stmt NEWLINE cmpdstmt .)


state 127

    (14) stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .

    NEWLINE         reduce using rule 14 (stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .)
    $end            reduce using rule 14 (stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .)


state 128

    (59) optelse -> ATHAWA NEWLINE . cmpdstmt
    (56) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (57) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . dynamString LEKHA
    (11) stmt -> . dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER LEU
    (13) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (14) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (15) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (16) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (17) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (18) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (19) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (20) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (21) stmt -> . exp PATHAU
    (22) stmt -> . NEWLINE
    (50) dynamString -> . exp COMMA dynamString
    (51) dynamString -> . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    DIYE            reduce using rule 57 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 9
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    stmt                           shift and go to state 94
    dynamString                    shift and go to state 4
    cmpdstmt                       shift and go to state 135
    exp                            shift and go to state 15

state 129

    (58) optelse -> ATHAWA condition . NEWLINE cmpdstmt optelse
    (52) condition -> condition . RA condition
    (53) condition -> condition . WA condition

    NEWLINE         shift and go to state 136
    RA              shift and go to state 58
    WA              shift and go to state 56


state 130

    (48) exp -> LPARA exp RPARA QUESTION exp COLON . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 137

state 131

    (19) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE . cmpdstmt MAKA
    (56) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (57) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . dynamString LEKHA
    (11) stmt -> . dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER LEU
    (13) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (14) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (15) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (16) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (17) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (18) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (19) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (20) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (21) stmt -> . exp PATHAU
    (22) stmt -> . NEWLINE
    (50) dynamString -> . exp COMMA dynamString
    (51) dynamString -> . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    MAKA            reduce using rule 57 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 9
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    stmt                           shift and go to state 94
    dynamString                    shift and go to state 4
    cmpdstmt                       shift and go to state 138
    exp                            shift and go to state 15

state 132

    (23) variableArgs -> IDENTIFIER COMMA variableArgs .

    RPARA           reduce using rule 23 (variableArgs -> IDENTIFIER COMMA variableArgs .)


state 133

    (17) stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .

    NEWLINE         reduce using rule 17 (stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .)
    $end            reduce using rule 17 (stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .)


state 134

    (15) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp . SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (16) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp . NEWLINE cmpdstmt BAISA
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    SEMICOLON       shift and go to state 139
    NEWLINE         shift and go to state 140
    EQ              shift and go to state 53
    LE              shift and go to state 40
    GE              shift and go to state 46
    NE              shift and go to state 44
    LT              shift and go to state 43
    GT              shift and go to state 47
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42
    RA              shift and go to state 49
    WA              shift and go to state 51


state 135

    (59) optelse -> ATHAWA NEWLINE cmpdstmt .

    DIYE            reduce using rule 59 (optelse -> ATHAWA NEWLINE cmpdstmt .)


state 136

    (58) optelse -> ATHAWA condition NEWLINE . cmpdstmt optelse
    (56) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (57) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . dynamString LEKHA
    (11) stmt -> . dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER LEU
    (13) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (14) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (15) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (16) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (17) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (18) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (19) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (20) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (21) stmt -> . exp PATHAU
    (22) stmt -> . NEWLINE
    (50) dynamString -> . exp COMMA dynamString
    (51) dynamString -> . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    ATHAWA          reduce using rule 57 (cmpdstmt -> .)
    DIYE            reduce using rule 57 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 9
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    stmt                           shift and go to state 94
    dynamString                    shift and go to state 4
    cmpdstmt                       shift and go to state 141
    exp                            shift and go to state 15

state 137

    (48) exp -> LPARA exp RPARA QUESTION exp COLON exp .
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    PATHAU          reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    COMMA           reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    LEKHA           reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    BHAE            reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    NABHAE          reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    RPARA           reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    RGPARA          reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    CHHA            reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    CHHAINA         reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    NEWLINE         reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    $end            reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    DEKHI           reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    COLON           reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    SEMICOLON       reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    EQ              shift and go to state 53
    LE              shift and go to state 40
    GE              shift and go to state 46
    NE              shift and go to state 44
    LT              shift and go to state 43
    GT              shift and go to state 47
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42
    RA              shift and go to state 49
    WA              shift and go to state 51

  ! EQ              [ reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! LE              [ reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! GE              [ reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! NE              [ reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! LT              [ reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! GT              [ reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! PLUS            [ reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! MINUS           [ reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! TIMES           [ reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! DIVIDE          [ reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! POWER           [ reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! RA              [ reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! WA              [ reduce using rule 48 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]


state 138

    (19) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt . MAKA

    MAKA            shift and go to state 142


state 139

    (15) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON . sign exp NEWLINE cmpdstmt BAISA
    (61) sign -> . PLUS
    (62) sign -> . MINUS

    PLUS            shift and go to state 23
    MINUS           shift and go to state 35

    sign                           shift and go to state 143

state 140

    (16) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE . cmpdstmt BAISA
    (56) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (57) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . dynamString LEKHA
    (11) stmt -> . dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER LEU
    (13) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (14) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (15) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (16) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (17) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (18) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (19) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (20) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (21) stmt -> . exp PATHAU
    (22) stmt -> . NEWLINE
    (50) dynamString -> . exp COMMA dynamString
    (51) dynamString -> . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    BAISA           reduce using rule 57 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 9
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    stmt                           shift and go to state 94
    dynamString                    shift and go to state 4
    cmpdstmt                       shift and go to state 144
    exp                            shift and go to state 15

state 141

    (58) optelse -> ATHAWA condition NEWLINE cmpdstmt . optelse
    (58) optelse -> . ATHAWA condition NEWLINE cmpdstmt optelse
    (59) optelse -> . ATHAWA NEWLINE cmpdstmt
    (60) optelse -> .

    ATHAWA          shift and go to state 116
    DIYE            reduce using rule 60 (optelse -> .)

    optelse                        shift and go to state 145

state 142

    (19) stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA .

    NEWLINE         reduce using rule 19 (stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA .)
    $end            reduce using rule 19 (stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA .)


state 143

    (15) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign . exp NEWLINE cmpdstmt BAISA
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    IDENTIFIER      shift and go to state 16
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    exp                            shift and go to state 146

state 144

    (16) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt . BAISA

    BAISA           shift and go to state 147


state 145

    (58) optelse -> ATHAWA condition NEWLINE cmpdstmt optelse .

    DIYE            reduce using rule 58 (optelse -> ATHAWA condition NEWLINE cmpdstmt optelse .)


state 146

    (15) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp . NEWLINE cmpdstmt BAISA
    (29) exp -> exp . EQ exp
    (30) exp -> exp . LE exp
    (31) exp -> exp . GE exp
    (32) exp -> exp . NE exp
    (33) exp -> exp . LT exp
    (34) exp -> exp . GT exp
    (35) exp -> exp . PLUS exp
    (36) exp -> exp . MINUS exp
    (37) exp -> exp . TIMES exp
    (38) exp -> exp . DIVIDE exp
    (39) exp -> exp . POWER exp
    (40) exp -> exp . RA exp
    (41) exp -> exp . WA exp

    NEWLINE         shift and go to state 148
    EQ              shift and go to state 53
    LE              shift and go to state 40
    GE              shift and go to state 46
    NE              shift and go to state 44
    LT              shift and go to state 43
    GT              shift and go to state 47
    PLUS            shift and go to state 50
    MINUS           shift and go to state 54
    TIMES           shift and go to state 52
    DIVIDE          shift and go to state 41
    POWER           shift and go to state 42
    RA              shift and go to state 49
    WA              shift and go to state 51


state 147

    (16) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA .

    NEWLINE         reduce using rule 16 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA .)
    $end            reduce using rule 16 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA .)


state 148

    (15) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE . cmpdstmt BAISA
    (56) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (57) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . IDENTIFIER MA dynamString LEKHA SEMICOLON
    (7) stmt -> . IDENTIFIER MA dynamString LEKHA
    (8) stmt -> . IDENTIFIER BATA IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER BANDAGARA
    (10) stmt -> . dynamString LEKHA
    (11) stmt -> . dynamString LEKHA SEMICOLON
    (12) stmt -> . IDENTIFIER LEU
    (13) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (14) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (15) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (16) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA
    (17) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (18) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (19) stmt -> . KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA
    (20) stmt -> . IDENTIFIER LPARA variableexp RPARA
    (21) stmt -> . exp PATHAU
    (22) stmt -> . NEWLINE
    (50) dynamString -> . exp COMMA dynamString
    (51) dynamString -> . exp
    (29) exp -> . exp EQ exp
    (30) exp -> . exp LE exp
    (31) exp -> . exp GE exp
    (32) exp -> . exp NE exp
    (33) exp -> . exp LT exp
    (34) exp -> . exp GT exp
    (35) exp -> . exp PLUS exp
    (36) exp -> . exp MINUS exp
    (37) exp -> . exp TIMES exp
    (38) exp -> . exp DIVIDE exp
    (39) exp -> . exp POWER exp
    (40) exp -> . exp RA exp
    (41) exp -> . exp WA exp
    (42) exp -> . IDENTIFIER
    (43) exp -> . STRING
    (44) exp -> . NUMBER
    (45) exp -> . LGPARA variableexp RGPARA
    (46) exp -> . IDENTIFIER LGPARA exp RGPARA
    (47) exp -> . LPARA exp RPARA
    (48) exp -> . LPARA exp RPARA QUESTION exp COLON exp
    (49) exp -> . IDENTIFIER LPARA variableexp RPARA

    BAISA           reduce using rule 57 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 9
    YEDI            shift and go to state 1
    SABEI           shift and go to state 10
    JABA            shift and go to state 8
    KAAM            shift and go to state 6
    NEWLINE         shift and go to state 7
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 13
    LPARA           shift and go to state 2

    stmt                           shift and go to state 94
    dynamString                    shift and go to state 4
    cmpdstmt                       shift and go to state 149
    exp                            shift and go to state 15

state 149

    (15) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt . BAISA

    BAISA           shift and go to state 150


state 150

    (15) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .

    NEWLINE         reduce using rule 15 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .)
    $end            reduce using rule 15 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQ in state 82 resolved as shift
WARNING: shift/reduce conflict for LE in state 82 resolved as shift
WARNING: shift/reduce conflict for GE in state 82 resolved as shift
WARNING: shift/reduce conflict for NE in state 82 resolved as shift
WARNING: shift/reduce conflict for LT in state 82 resolved as shift
WARNING: shift/reduce conflict for GT in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 82 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 82 resolved as shift
WARNING: shift/reduce conflict for POWER in state 82 resolved as shift
WARNING: shift/reduce conflict for RA in state 82 resolved as shift
WARNING: shift/reduce conflict for WA in state 82 resolved as shift
WARNING: shift/reduce conflict for EQ in state 86 resolved as shift
WARNING: shift/reduce conflict for LE in state 86 resolved as shift
WARNING: shift/reduce conflict for GE in state 86 resolved as shift
WARNING: shift/reduce conflict for NE in state 86 resolved as shift
WARNING: shift/reduce conflict for LT in state 86 resolved as shift
WARNING: shift/reduce conflict for GT in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 86 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 86 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 86 resolved as shift
WARNING: shift/reduce conflict for POWER in state 86 resolved as shift
WARNING: shift/reduce conflict for RA in state 86 resolved as shift
WARNING: shift/reduce conflict for WA in state 86 resolved as shift
WARNING: shift/reduce conflict for EQ in state 88 resolved as shift
WARNING: shift/reduce conflict for LE in state 88 resolved as shift
WARNING: shift/reduce conflict for GE in state 88 resolved as shift
WARNING: shift/reduce conflict for NE in state 88 resolved as shift
WARNING: shift/reduce conflict for LT in state 88 resolved as shift
WARNING: shift/reduce conflict for GT in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 88 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 88 resolved as shift
WARNING: shift/reduce conflict for POWER in state 88 resolved as shift
WARNING: shift/reduce conflict for RA in state 88 resolved as shift
WARNING: shift/reduce conflict for WA in state 88 resolved as shift
WARNING: shift/reduce conflict for RA in state 93 resolved as shift
WARNING: shift/reduce conflict for WA in state 93 resolved as shift
WARNING: shift/reduce conflict for RA in state 96 resolved as shift
WARNING: shift/reduce conflict for WA in state 96 resolved as shift
WARNING: shift/reduce conflict for RA in state 120 resolved as shift
WARNING: shift/reduce conflict for WA in state 120 resolved as shift
WARNING: shift/reduce conflict for RA in state 122 resolved as shift
WARNING: shift/reduce conflict for WA in state 122 resolved as shift
WARNING: shift/reduce conflict for EQ in state 137 resolved as shift
WARNING: shift/reduce conflict for LE in state 137 resolved as shift
WARNING: shift/reduce conflict for GE in state 137 resolved as shift
WARNING: shift/reduce conflict for NE in state 137 resolved as shift
WARNING: shift/reduce conflict for LT in state 137 resolved as shift
WARNING: shift/reduce conflict for GT in state 137 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 137 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 137 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 137 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 137 resolved as shift
WARNING: shift/reduce conflict for POWER in state 137 resolved as shift
WARNING: shift/reduce conflict for RA in state 137 resolved as shift
WARNING: shift/reduce conflict for WA in state 137 resolved as shift
WARNING: reduce/reduce conflict in state 124 resolved using rule (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA)
WARNING: rejected rule (exp -> LGPARA variableexp RGPARA) in state 124
