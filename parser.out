Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> N
Rule 1     N -> element NEWLINE N
Rule 2     N -> element
Rule 3     N -> <empty>
Rule 4     element -> stmt
Rule 5     stmt -> IDENTIFIER ASSIGNMENT exp
Rule 6     stmt -> dynamString LEKHA
Rule 7     stmt -> dynamString LEKHA SEMICOLON
Rule 8     stmt -> IDENTIFIER LEU
Rule 9     stmt -> IDENTIFIER incrementsign ASSIGNMENT exp
Rule 10    stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE
Rule 11    stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
Rule 12    stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
Rule 13    stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
Rule 14    variableexp -> exp COMMA variableexp
Rule 15    variableexp -> exp
Rule 16    variableexp -> <empty>
Rule 17    exp -> exp EQ exp
Rule 18    exp -> exp LE exp
Rule 19    exp -> exp GE exp
Rule 20    exp -> exp NE exp
Rule 21    exp -> exp LT exp
Rule 22    exp -> exp GT exp
Rule 23    exp -> exp PLUS exp
Rule 24    exp -> exp MINUS exp
Rule 25    exp -> exp TIMES exp
Rule 26    exp -> exp DIVIDE exp
Rule 27    exp -> exp POWER exp
Rule 28    exp -> exp RA exp
Rule 29    exp -> exp WA exp
Rule 30    exp -> IDENTIFIER
Rule 31    exp -> STRING
Rule 32    exp -> NUMBER
Rule 33    exp -> LGPARA variableexp RGPARA
Rule 34    exp -> IDENTIFIER LGPARA exp RGPARA
Rule 35    exp -> LPARA exp RPARA
Rule 36    exp -> LPARA exp RPARA QUESTION exp COLON exp
Rule 37    dynamString -> exp COMMA dynamString
Rule 38    dynamString -> exp
Rule 39    condition -> condition RA condition
Rule 40    condition -> condition WA condition
Rule 41    condition -> exp BHAE
Rule 42    condition -> exp NABHAE
Rule 43    cmpdstmt -> stmt NEWLINE cmpdstmt
Rule 44    cmpdstmt -> <empty>
Rule 45    optelse -> ATHAWA condition NEWLINE cmpdstmt optelse
Rule 46    optelse -> ATHAWA NEWLINE cmpdstmt
Rule 47    optelse -> <empty>
Rule 48    sign -> PLUS
Rule 49    sign -> MINUS
Rule 50    incrementsign -> sign
Rule 51    incrementsign -> TIMES
Rule 52    incrementsign -> DIVIDE
Rule 53    whilecond -> whilecond RA whilecond
Rule 54    whilecond -> whilecond WA whilecond
Rule 55    whilecond -> exp CHHA
Rule 56    whilecond -> exp CHHAINA

Terminals, with rules where they appear

ASSIGNMENT           : 5 9 11 13
ATHAWA               : 45 46
BAISA                : 11
BAJA                 : 12
BHAE                 : 41
CHHA                 : 55
CHHAINA              : 56
COLON                : 36
COMMA                : 14 37
DEKHI                : 11
DIVIDE               : 26 52
DIYE                 : 10
EQ                   : 17
GE                   : 19
GT                   : 22
IDENTIFIER           : 5 8 9 11 13 30 34
JABA                 : 12
LE                   : 18
LEKHA                : 6 7
LEU                  : 8
LGPARA               : 13 33 34
LPARA                : 35 36
LT                   : 21
MINUS                : 24 49
NABHAE               : 42
NE                   : 20
NEWLINE              : 1 10 11 12 43 45 46
NUMBER               : 32
PLUS                 : 23 48
POWER                : 27
QUESTION             : 36
RA                   : 28 39 53
RGPARA               : 13 33 34
RPARA                : 35 36
SABEI                : 11
SAMMA                : 12
SEMICOLON            : 7 11
STRING               : 31
TIMES                : 25 51
WA                   : 29 40 54
YEDI                 : 10
error                : 

Nonterminals, with rules where they appear

N                    : 1 0
cmpdstmt             : 10 11 12 43 45 46
condition            : 10 39 39 40 40 45
dynamString          : 6 7 37
element              : 1 2
exp                  : 5 9 11 11 11 14 15 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 34 35 36 36 36 37 38 41 42 55 56
incrementsign        : 9
optelse              : 10 45
sign                 : 11 50
stmt                 : 4 43
variableexp          : 13 14 33
whilecond            : 12 53 53 54 54

Parsing method: LALR

state 0

    (0) S' -> . N
    (1) N -> . element NEWLINE N
    (2) N -> . element
    (3) N -> .
    (4) element -> . stmt
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (37) dynamString -> . exp COMMA dynamString
    (38) dynamString -> . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    $end            reduce using rule 3 (N -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    stmt                           shift and go to state 8
    dynamString                    shift and go to state 11
    N                              shift and go to state 9
    exp                            shift and go to state 13
    element                        shift and go to state 12

state 1

    (10) stmt -> YEDI . condition NEWLINE cmpdstmt optelse DIYE
    (39) condition -> . condition RA condition
    (40) condition -> . condition WA condition
    (41) condition -> . exp BHAE
    (42) condition -> . exp NABHAE
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 16
    condition                      shift and go to state 15

state 2

    (35) exp -> LPARA . exp RPARA
    (36) exp -> LPARA . exp RPARA QUESTION exp COLON exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 17

state 3

    (32) exp -> NUMBER .

    BHAE            reduce using rule 32 (exp -> NUMBER .)
    NABHAE          reduce using rule 32 (exp -> NUMBER .)
    EQ              reduce using rule 32 (exp -> NUMBER .)
    LE              reduce using rule 32 (exp -> NUMBER .)
    GE              reduce using rule 32 (exp -> NUMBER .)
    NE              reduce using rule 32 (exp -> NUMBER .)
    LT              reduce using rule 32 (exp -> NUMBER .)
    GT              reduce using rule 32 (exp -> NUMBER .)
    PLUS            reduce using rule 32 (exp -> NUMBER .)
    MINUS           reduce using rule 32 (exp -> NUMBER .)
    TIMES           reduce using rule 32 (exp -> NUMBER .)
    DIVIDE          reduce using rule 32 (exp -> NUMBER .)
    POWER           reduce using rule 32 (exp -> NUMBER .)
    RA              reduce using rule 32 (exp -> NUMBER .)
    WA              reduce using rule 32 (exp -> NUMBER .)
    CHHA            reduce using rule 32 (exp -> NUMBER .)
    CHHAINA         reduce using rule 32 (exp -> NUMBER .)
    COMMA           reduce using rule 32 (exp -> NUMBER .)
    LEKHA           reduce using rule 32 (exp -> NUMBER .)
    RPARA           reduce using rule 32 (exp -> NUMBER .)
    RGPARA          reduce using rule 32 (exp -> NUMBER .)
    NEWLINE         reduce using rule 32 (exp -> NUMBER .)
    $end            reduce using rule 32 (exp -> NUMBER .)
    DEKHI           reduce using rule 32 (exp -> NUMBER .)
    COLON           reduce using rule 32 (exp -> NUMBER .)
    SEMICOLON       reduce using rule 32 (exp -> NUMBER .)


state 4

    (12) stmt -> JABA . SAMMA whilecond NEWLINE cmpdstmt BAJA

    SAMMA           shift and go to state 18


state 5

    (31) exp -> STRING .

    BHAE            reduce using rule 31 (exp -> STRING .)
    NABHAE          reduce using rule 31 (exp -> STRING .)
    EQ              reduce using rule 31 (exp -> STRING .)
    LE              reduce using rule 31 (exp -> STRING .)
    GE              reduce using rule 31 (exp -> STRING .)
    NE              reduce using rule 31 (exp -> STRING .)
    LT              reduce using rule 31 (exp -> STRING .)
    GT              reduce using rule 31 (exp -> STRING .)
    PLUS            reduce using rule 31 (exp -> STRING .)
    MINUS           reduce using rule 31 (exp -> STRING .)
    TIMES           reduce using rule 31 (exp -> STRING .)
    DIVIDE          reduce using rule 31 (exp -> STRING .)
    POWER           reduce using rule 31 (exp -> STRING .)
    RA              reduce using rule 31 (exp -> STRING .)
    WA              reduce using rule 31 (exp -> STRING .)
    CHHA            reduce using rule 31 (exp -> STRING .)
    CHHAINA         reduce using rule 31 (exp -> STRING .)
    COMMA           reduce using rule 31 (exp -> STRING .)
    LEKHA           reduce using rule 31 (exp -> STRING .)
    RPARA           reduce using rule 31 (exp -> STRING .)
    RGPARA          reduce using rule 31 (exp -> STRING .)
    NEWLINE         reduce using rule 31 (exp -> STRING .)
    $end            reduce using rule 31 (exp -> STRING .)
    DEKHI           reduce using rule 31 (exp -> STRING .)
    COLON           reduce using rule 31 (exp -> STRING .)
    SEMICOLON       reduce using rule 31 (exp -> STRING .)


state 6

    (5) stmt -> IDENTIFIER . ASSIGNMENT exp
    (8) stmt -> IDENTIFIER . LEU
    (9) stmt -> IDENTIFIER . incrementsign ASSIGNMENT exp
    (13) stmt -> IDENTIFIER . ASSIGNMENT LGPARA variableexp RGPARA
    (30) exp -> IDENTIFIER .
    (34) exp -> IDENTIFIER . LGPARA exp RGPARA
    (50) incrementsign -> . sign
    (51) incrementsign -> . TIMES
    (52) incrementsign -> . DIVIDE
    (48) sign -> . PLUS
    (49) sign -> . MINUS

    ASSIGNMENT      shift and go to state 22
    LEU             shift and go to state 25
    COMMA           reduce using rule 30 (exp -> IDENTIFIER .)
    EQ              reduce using rule 30 (exp -> IDENTIFIER .)
    LE              reduce using rule 30 (exp -> IDENTIFIER .)
    GE              reduce using rule 30 (exp -> IDENTIFIER .)
    NE              reduce using rule 30 (exp -> IDENTIFIER .)
    LT              reduce using rule 30 (exp -> IDENTIFIER .)
    GT              reduce using rule 30 (exp -> IDENTIFIER .)
    POWER           reduce using rule 30 (exp -> IDENTIFIER .)
    RA              reduce using rule 30 (exp -> IDENTIFIER .)
    WA              reduce using rule 30 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 30 (exp -> IDENTIFIER .)
    LGPARA          shift and go to state 19
    TIMES           shift and go to state 21
    DIVIDE          shift and go to state 20
    PLUS            shift and go to state 24
    MINUS           shift and go to state 27

  ! PLUS            [ reduce using rule 30 (exp -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 30 (exp -> IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 30 (exp -> IDENTIFIER .) ]
  ! DIVIDE          [ reduce using rule 30 (exp -> IDENTIFIER .) ]

    incrementsign                  shift and go to state 26
    sign                           shift and go to state 23

state 7

    (11) stmt -> SABEI . IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA

    IDENTIFIER      shift and go to state 28


state 8

    (4) element -> stmt .

    NEWLINE         reduce using rule 4 (element -> stmt .)
    $end            reduce using rule 4 (element -> stmt .)


state 9

    (0) S' -> N .



state 10

    (33) exp -> LGPARA . variableexp RGPARA
    (14) variableexp -> . exp COMMA variableexp
    (15) variableexp -> . exp
    (16) variableexp -> .
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    RGPARA          reduce using rule 16 (variableexp -> .)
    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 30
    variableexp                    shift and go to state 29

state 11

    (6) stmt -> dynamString . LEKHA
    (7) stmt -> dynamString . LEKHA SEMICOLON

    LEKHA           shift and go to state 31


state 12

    (1) N -> element . NEWLINE N
    (2) N -> element .

    NEWLINE         shift and go to state 32
    $end            reduce using rule 2 (N -> element .)


state 13

    (37) dynamString -> exp . COMMA dynamString
    (38) dynamString -> exp .
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    COMMA           shift and go to state 40
    LEKHA           reduce using rule 38 (dynamString -> exp .)
    EQ              shift and go to state 45
    LE              shift and go to state 33
    GE              shift and go to state 38
    NE              shift and go to state 37
    LT              shift and go to state 36
    GT              shift and go to state 39
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35
    RA              shift and go to state 41
    WA              shift and go to state 43


state 14

    (30) exp -> IDENTIFIER .
    (34) exp -> IDENTIFIER . LGPARA exp RGPARA

    BHAE            reduce using rule 30 (exp -> IDENTIFIER .)
    NABHAE          reduce using rule 30 (exp -> IDENTIFIER .)
    EQ              reduce using rule 30 (exp -> IDENTIFIER .)
    LE              reduce using rule 30 (exp -> IDENTIFIER .)
    GE              reduce using rule 30 (exp -> IDENTIFIER .)
    NE              reduce using rule 30 (exp -> IDENTIFIER .)
    LT              reduce using rule 30 (exp -> IDENTIFIER .)
    GT              reduce using rule 30 (exp -> IDENTIFIER .)
    PLUS            reduce using rule 30 (exp -> IDENTIFIER .)
    MINUS           reduce using rule 30 (exp -> IDENTIFIER .)
    TIMES           reduce using rule 30 (exp -> IDENTIFIER .)
    DIVIDE          reduce using rule 30 (exp -> IDENTIFIER .)
    POWER           reduce using rule 30 (exp -> IDENTIFIER .)
    RA              reduce using rule 30 (exp -> IDENTIFIER .)
    WA              reduce using rule 30 (exp -> IDENTIFIER .)
    CHHA            reduce using rule 30 (exp -> IDENTIFIER .)
    CHHAINA         reduce using rule 30 (exp -> IDENTIFIER .)
    COMMA           reduce using rule 30 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 30 (exp -> IDENTIFIER .)
    RPARA           reduce using rule 30 (exp -> IDENTIFIER .)
    RGPARA          reduce using rule 30 (exp -> IDENTIFIER .)
    NEWLINE         reduce using rule 30 (exp -> IDENTIFIER .)
    $end            reduce using rule 30 (exp -> IDENTIFIER .)
    DEKHI           reduce using rule 30 (exp -> IDENTIFIER .)
    COLON           reduce using rule 30 (exp -> IDENTIFIER .)
    SEMICOLON       reduce using rule 30 (exp -> IDENTIFIER .)
    LGPARA          shift and go to state 19


state 15

    (10) stmt -> YEDI condition . NEWLINE cmpdstmt optelse DIYE
    (39) condition -> condition . RA condition
    (40) condition -> condition . WA condition

    NEWLINE         shift and go to state 48
    RA              shift and go to state 49
    WA              shift and go to state 47


state 16

    (41) condition -> exp . BHAE
    (42) condition -> exp . NABHAE
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    BHAE            shift and go to state 50
    NABHAE          shift and go to state 51
    EQ              shift and go to state 45
    LE              shift and go to state 33
    GE              shift and go to state 38
    NE              shift and go to state 37
    LT              shift and go to state 36
    GT              shift and go to state 39
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35
    RA              shift and go to state 41
    WA              shift and go to state 43


state 17

    (35) exp -> LPARA exp . RPARA
    (36) exp -> LPARA exp . RPARA QUESTION exp COLON exp
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    RPARA           shift and go to state 52
    EQ              shift and go to state 45
    LE              shift and go to state 33
    GE              shift and go to state 38
    NE              shift and go to state 37
    LT              shift and go to state 36
    GT              shift and go to state 39
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35
    RA              shift and go to state 41
    WA              shift and go to state 43


state 18

    (12) stmt -> JABA SAMMA . whilecond NEWLINE cmpdstmt BAJA
    (53) whilecond -> . whilecond RA whilecond
    (54) whilecond -> . whilecond WA whilecond
    (55) whilecond -> . exp CHHA
    (56) whilecond -> . exp CHHAINA
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 54
    whilecond                      shift and go to state 53

state 19

    (34) exp -> IDENTIFIER LGPARA . exp RGPARA
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 55

state 20

    (52) incrementsign -> DIVIDE .

    ASSIGNMENT      reduce using rule 52 (incrementsign -> DIVIDE .)


state 21

    (51) incrementsign -> TIMES .

    ASSIGNMENT      reduce using rule 51 (incrementsign -> TIMES .)


state 22

    (5) stmt -> IDENTIFIER ASSIGNMENT . exp
    (13) stmt -> IDENTIFIER ASSIGNMENT . LGPARA variableexp RGPARA
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    LGPARA          shift and go to state 56
    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 57

state 23

    (50) incrementsign -> sign .

    ASSIGNMENT      reduce using rule 50 (incrementsign -> sign .)


state 24

    (48) sign -> PLUS .

    IDENTIFIER      reduce using rule 48 (sign -> PLUS .)
    STRING          reduce using rule 48 (sign -> PLUS .)
    NUMBER          reduce using rule 48 (sign -> PLUS .)
    LGPARA          reduce using rule 48 (sign -> PLUS .)
    LPARA           reduce using rule 48 (sign -> PLUS .)
    ASSIGNMENT      reduce using rule 48 (sign -> PLUS .)


state 25

    (8) stmt -> IDENTIFIER LEU .

    NEWLINE         reduce using rule 8 (stmt -> IDENTIFIER LEU .)
    $end            reduce using rule 8 (stmt -> IDENTIFIER LEU .)


state 26

    (9) stmt -> IDENTIFIER incrementsign . ASSIGNMENT exp

    ASSIGNMENT      shift and go to state 58


state 27

    (49) sign -> MINUS .

    IDENTIFIER      reduce using rule 49 (sign -> MINUS .)
    STRING          reduce using rule 49 (sign -> MINUS .)
    NUMBER          reduce using rule 49 (sign -> MINUS .)
    LGPARA          reduce using rule 49 (sign -> MINUS .)
    LPARA           reduce using rule 49 (sign -> MINUS .)
    ASSIGNMENT      reduce using rule 49 (sign -> MINUS .)


state 28

    (11) stmt -> SABEI IDENTIFIER . ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA

    ASSIGNMENT      shift and go to state 59


state 29

    (33) exp -> LGPARA variableexp . RGPARA

    RGPARA          shift and go to state 60


state 30

    (14) variableexp -> exp . COMMA variableexp
    (15) variableexp -> exp .
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    COMMA           shift and go to state 61
    RGPARA          reduce using rule 15 (variableexp -> exp .)
    EQ              shift and go to state 45
    LE              shift and go to state 33
    GE              shift and go to state 38
    NE              shift and go to state 37
    LT              shift and go to state 36
    GT              shift and go to state 39
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35
    RA              shift and go to state 41
    WA              shift and go to state 43


state 31

    (6) stmt -> dynamString LEKHA .
    (7) stmt -> dynamString LEKHA . SEMICOLON

    NEWLINE         reduce using rule 6 (stmt -> dynamString LEKHA .)
    $end            reduce using rule 6 (stmt -> dynamString LEKHA .)
    SEMICOLON       shift and go to state 62


state 32

    (1) N -> element NEWLINE . N
    (1) N -> . element NEWLINE N
    (2) N -> . element
    (3) N -> .
    (4) element -> . stmt
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (37) dynamString -> . exp COMMA dynamString
    (38) dynamString -> . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    $end            reduce using rule 3 (N -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    stmt                           shift and go to state 8
    dynamString                    shift and go to state 11
    exp                            shift and go to state 13
    element                        shift and go to state 12
    N                              shift and go to state 63

state 33

    (18) exp -> exp LE . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 64

state 34

    (26) exp -> exp DIVIDE . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 65

state 35

    (27) exp -> exp POWER . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 66

state 36

    (21) exp -> exp LT . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 67

state 37

    (20) exp -> exp NE . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 68

state 38

    (19) exp -> exp GE . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 69

state 39

    (22) exp -> exp GT . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 70

state 40

    (37) dynamString -> exp COMMA . dynamString
    (37) dynamString -> . exp COMMA dynamString
    (38) dynamString -> . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 13
    dynamString                    shift and go to state 71

state 41

    (28) exp -> exp RA . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 72

state 42

    (23) exp -> exp PLUS . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 73

state 43

    (29) exp -> exp WA . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 74

state 44

    (25) exp -> exp TIMES . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 75

state 45

    (17) exp -> exp EQ . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 76

state 46

    (24) exp -> exp MINUS . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 77

state 47

    (40) condition -> condition WA . condition
    (39) condition -> . condition RA condition
    (40) condition -> . condition WA condition
    (41) condition -> . exp BHAE
    (42) condition -> . exp NABHAE
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 16
    condition                      shift and go to state 78

state 48

    (10) stmt -> YEDI condition NEWLINE . cmpdstmt optelse DIYE
    (43) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (44) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (37) dynamString -> . exp COMMA dynamString
    (38) dynamString -> . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    ATHAWA          reduce using rule 44 (cmpdstmt -> .)
    DIYE            reduce using rule 44 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    stmt                           shift and go to state 79
    dynamString                    shift and go to state 11
    cmpdstmt                       shift and go to state 80
    exp                            shift and go to state 13

state 49

    (39) condition -> condition RA . condition
    (39) condition -> . condition RA condition
    (40) condition -> . condition WA condition
    (41) condition -> . exp BHAE
    (42) condition -> . exp NABHAE
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 16
    condition                      shift and go to state 81

state 50

    (41) condition -> exp BHAE .

    RA              reduce using rule 41 (condition -> exp BHAE .)
    WA              reduce using rule 41 (condition -> exp BHAE .)
    NEWLINE         reduce using rule 41 (condition -> exp BHAE .)


state 51

    (42) condition -> exp NABHAE .

    RA              reduce using rule 42 (condition -> exp NABHAE .)
    WA              reduce using rule 42 (condition -> exp NABHAE .)
    NEWLINE         reduce using rule 42 (condition -> exp NABHAE .)


state 52

    (35) exp -> LPARA exp RPARA .
    (36) exp -> LPARA exp RPARA . QUESTION exp COLON exp

    BHAE            reduce using rule 35 (exp -> LPARA exp RPARA .)
    NABHAE          reduce using rule 35 (exp -> LPARA exp RPARA .)
    EQ              reduce using rule 35 (exp -> LPARA exp RPARA .)
    LE              reduce using rule 35 (exp -> LPARA exp RPARA .)
    GE              reduce using rule 35 (exp -> LPARA exp RPARA .)
    NE              reduce using rule 35 (exp -> LPARA exp RPARA .)
    LT              reduce using rule 35 (exp -> LPARA exp RPARA .)
    GT              reduce using rule 35 (exp -> LPARA exp RPARA .)
    PLUS            reduce using rule 35 (exp -> LPARA exp RPARA .)
    MINUS           reduce using rule 35 (exp -> LPARA exp RPARA .)
    TIMES           reduce using rule 35 (exp -> LPARA exp RPARA .)
    DIVIDE          reduce using rule 35 (exp -> LPARA exp RPARA .)
    POWER           reduce using rule 35 (exp -> LPARA exp RPARA .)
    RA              reduce using rule 35 (exp -> LPARA exp RPARA .)
    WA              reduce using rule 35 (exp -> LPARA exp RPARA .)
    CHHA            reduce using rule 35 (exp -> LPARA exp RPARA .)
    CHHAINA         reduce using rule 35 (exp -> LPARA exp RPARA .)
    COMMA           reduce using rule 35 (exp -> LPARA exp RPARA .)
    LEKHA           reduce using rule 35 (exp -> LPARA exp RPARA .)
    RPARA           reduce using rule 35 (exp -> LPARA exp RPARA .)
    RGPARA          reduce using rule 35 (exp -> LPARA exp RPARA .)
    NEWLINE         reduce using rule 35 (exp -> LPARA exp RPARA .)
    $end            reduce using rule 35 (exp -> LPARA exp RPARA .)
    DEKHI           reduce using rule 35 (exp -> LPARA exp RPARA .)
    COLON           reduce using rule 35 (exp -> LPARA exp RPARA .)
    SEMICOLON       reduce using rule 35 (exp -> LPARA exp RPARA .)
    QUESTION        shift and go to state 82


state 53

    (12) stmt -> JABA SAMMA whilecond . NEWLINE cmpdstmt BAJA
    (53) whilecond -> whilecond . RA whilecond
    (54) whilecond -> whilecond . WA whilecond

    NEWLINE         shift and go to state 84
    RA              shift and go to state 85
    WA              shift and go to state 83


state 54

    (55) whilecond -> exp . CHHA
    (56) whilecond -> exp . CHHAINA
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    CHHA            shift and go to state 86
    CHHAINA         shift and go to state 87
    EQ              shift and go to state 45
    LE              shift and go to state 33
    GE              shift and go to state 38
    NE              shift and go to state 37
    LT              shift and go to state 36
    GT              shift and go to state 39
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35
    RA              shift and go to state 41
    WA              shift and go to state 43


state 55

    (34) exp -> IDENTIFIER LGPARA exp . RGPARA
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    RGPARA          shift and go to state 88
    EQ              shift and go to state 45
    LE              shift and go to state 33
    GE              shift and go to state 38
    NE              shift and go to state 37
    LT              shift and go to state 36
    GT              shift and go to state 39
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35
    RA              shift and go to state 41
    WA              shift and go to state 43


state 56

    (13) stmt -> IDENTIFIER ASSIGNMENT LGPARA . variableexp RGPARA
    (33) exp -> LGPARA . variableexp RGPARA
    (14) variableexp -> . exp COMMA variableexp
    (15) variableexp -> . exp
    (16) variableexp -> .
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    RGPARA          reduce using rule 16 (variableexp -> .)
    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 30
    variableexp                    shift and go to state 89

state 57

    (5) stmt -> IDENTIFIER ASSIGNMENT exp .
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    NEWLINE         reduce using rule 5 (stmt -> IDENTIFIER ASSIGNMENT exp .)
    $end            reduce using rule 5 (stmt -> IDENTIFIER ASSIGNMENT exp .)
    EQ              shift and go to state 45
    LE              shift and go to state 33
    GE              shift and go to state 38
    NE              shift and go to state 37
    LT              shift and go to state 36
    GT              shift and go to state 39
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35
    RA              shift and go to state 41
    WA              shift and go to state 43


state 58

    (9) stmt -> IDENTIFIER incrementsign ASSIGNMENT . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 90

state 59

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT . exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 91

state 60

    (33) exp -> LGPARA variableexp RGPARA .

    BHAE            reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    NABHAE          reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    EQ              reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    LE              reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    GE              reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    NE              reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    LT              reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    GT              reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    PLUS            reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    MINUS           reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    TIMES           reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    DIVIDE          reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    POWER           reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    RA              reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    WA              reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    CHHA            reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    CHHAINA         reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    COMMA           reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    LEKHA           reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    RPARA           reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    RGPARA          reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    NEWLINE         reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    $end            reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    DEKHI           reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    COLON           reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    SEMICOLON       reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)


state 61

    (14) variableexp -> exp COMMA . variableexp
    (14) variableexp -> . exp COMMA variableexp
    (15) variableexp -> . exp
    (16) variableexp -> .
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    RGPARA          reduce using rule 16 (variableexp -> .)
    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    variableexp                    shift and go to state 92
    exp                            shift and go to state 30

state 62

    (7) stmt -> dynamString LEKHA SEMICOLON .

    NEWLINE         reduce using rule 7 (stmt -> dynamString LEKHA SEMICOLON .)
    $end            reduce using rule 7 (stmt -> dynamString LEKHA SEMICOLON .)


state 63

    (1) N -> element NEWLINE N .

    $end            reduce using rule 1 (N -> element NEWLINE N .)


state 64

    (18) exp -> exp LE exp .
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    BHAE            reduce using rule 18 (exp -> exp LE exp .)
    NABHAE          reduce using rule 18 (exp -> exp LE exp .)
    EQ              reduce using rule 18 (exp -> exp LE exp .)
    LE              reduce using rule 18 (exp -> exp LE exp .)
    GE              reduce using rule 18 (exp -> exp LE exp .)
    NE              reduce using rule 18 (exp -> exp LE exp .)
    LT              reduce using rule 18 (exp -> exp LE exp .)
    GT              reduce using rule 18 (exp -> exp LE exp .)
    RA              reduce using rule 18 (exp -> exp LE exp .)
    WA              reduce using rule 18 (exp -> exp LE exp .)
    CHHA            reduce using rule 18 (exp -> exp LE exp .)
    CHHAINA         reduce using rule 18 (exp -> exp LE exp .)
    COMMA           reduce using rule 18 (exp -> exp LE exp .)
    LEKHA           reduce using rule 18 (exp -> exp LE exp .)
    RPARA           reduce using rule 18 (exp -> exp LE exp .)
    RGPARA          reduce using rule 18 (exp -> exp LE exp .)
    NEWLINE         reduce using rule 18 (exp -> exp LE exp .)
    $end            reduce using rule 18 (exp -> exp LE exp .)
    DEKHI           reduce using rule 18 (exp -> exp LE exp .)
    COLON           reduce using rule 18 (exp -> exp LE exp .)
    SEMICOLON       reduce using rule 18 (exp -> exp LE exp .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35

  ! PLUS            [ reduce using rule 18 (exp -> exp LE exp .) ]
  ! MINUS           [ reduce using rule 18 (exp -> exp LE exp .) ]
  ! TIMES           [ reduce using rule 18 (exp -> exp LE exp .) ]
  ! DIVIDE          [ reduce using rule 18 (exp -> exp LE exp .) ]
  ! POWER           [ reduce using rule 18 (exp -> exp LE exp .) ]
  ! EQ              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 38 ]
  ! NE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 39 ]
  ! RA              [ shift and go to state 41 ]
  ! WA              [ shift and go to state 43 ]


state 65

    (26) exp -> exp DIVIDE exp .
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    BHAE            reduce using rule 26 (exp -> exp DIVIDE exp .)
    NABHAE          reduce using rule 26 (exp -> exp DIVIDE exp .)
    EQ              reduce using rule 26 (exp -> exp DIVIDE exp .)
    LE              reduce using rule 26 (exp -> exp DIVIDE exp .)
    GE              reduce using rule 26 (exp -> exp DIVIDE exp .)
    NE              reduce using rule 26 (exp -> exp DIVIDE exp .)
    LT              reduce using rule 26 (exp -> exp DIVIDE exp .)
    GT              reduce using rule 26 (exp -> exp DIVIDE exp .)
    PLUS            reduce using rule 26 (exp -> exp DIVIDE exp .)
    MINUS           reduce using rule 26 (exp -> exp DIVIDE exp .)
    TIMES           reduce using rule 26 (exp -> exp DIVIDE exp .)
    DIVIDE          reduce using rule 26 (exp -> exp DIVIDE exp .)
    POWER           reduce using rule 26 (exp -> exp DIVIDE exp .)
    RA              reduce using rule 26 (exp -> exp DIVIDE exp .)
    WA              reduce using rule 26 (exp -> exp DIVIDE exp .)
    CHHA            reduce using rule 26 (exp -> exp DIVIDE exp .)
    CHHAINA         reduce using rule 26 (exp -> exp DIVIDE exp .)
    COMMA           reduce using rule 26 (exp -> exp DIVIDE exp .)
    LEKHA           reduce using rule 26 (exp -> exp DIVIDE exp .)
    RPARA           reduce using rule 26 (exp -> exp DIVIDE exp .)
    RGPARA          reduce using rule 26 (exp -> exp DIVIDE exp .)
    NEWLINE         reduce using rule 26 (exp -> exp DIVIDE exp .)
    $end            reduce using rule 26 (exp -> exp DIVIDE exp .)
    DEKHI           reduce using rule 26 (exp -> exp DIVIDE exp .)
    COLON           reduce using rule 26 (exp -> exp DIVIDE exp .)
    SEMICOLON       reduce using rule 26 (exp -> exp DIVIDE exp .)

  ! EQ              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 38 ]
  ! NE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 39 ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 44 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! POWER           [ shift and go to state 35 ]
  ! RA              [ shift and go to state 41 ]
  ! WA              [ shift and go to state 43 ]


state 66

    (27) exp -> exp POWER exp .
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    BHAE            reduce using rule 27 (exp -> exp POWER exp .)
    NABHAE          reduce using rule 27 (exp -> exp POWER exp .)
    EQ              reduce using rule 27 (exp -> exp POWER exp .)
    LE              reduce using rule 27 (exp -> exp POWER exp .)
    GE              reduce using rule 27 (exp -> exp POWER exp .)
    NE              reduce using rule 27 (exp -> exp POWER exp .)
    LT              reduce using rule 27 (exp -> exp POWER exp .)
    GT              reduce using rule 27 (exp -> exp POWER exp .)
    PLUS            reduce using rule 27 (exp -> exp POWER exp .)
    MINUS           reduce using rule 27 (exp -> exp POWER exp .)
    TIMES           reduce using rule 27 (exp -> exp POWER exp .)
    DIVIDE          reduce using rule 27 (exp -> exp POWER exp .)
    POWER           reduce using rule 27 (exp -> exp POWER exp .)
    RA              reduce using rule 27 (exp -> exp POWER exp .)
    WA              reduce using rule 27 (exp -> exp POWER exp .)
    CHHA            reduce using rule 27 (exp -> exp POWER exp .)
    CHHAINA         reduce using rule 27 (exp -> exp POWER exp .)
    COMMA           reduce using rule 27 (exp -> exp POWER exp .)
    LEKHA           reduce using rule 27 (exp -> exp POWER exp .)
    RPARA           reduce using rule 27 (exp -> exp POWER exp .)
    RGPARA          reduce using rule 27 (exp -> exp POWER exp .)
    NEWLINE         reduce using rule 27 (exp -> exp POWER exp .)
    $end            reduce using rule 27 (exp -> exp POWER exp .)
    DEKHI           reduce using rule 27 (exp -> exp POWER exp .)
    COLON           reduce using rule 27 (exp -> exp POWER exp .)
    SEMICOLON       reduce using rule 27 (exp -> exp POWER exp .)

  ! EQ              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 38 ]
  ! NE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 39 ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 44 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! POWER           [ shift and go to state 35 ]
  ! RA              [ shift and go to state 41 ]
  ! WA              [ shift and go to state 43 ]


state 67

    (21) exp -> exp LT exp .
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    BHAE            reduce using rule 21 (exp -> exp LT exp .)
    NABHAE          reduce using rule 21 (exp -> exp LT exp .)
    EQ              reduce using rule 21 (exp -> exp LT exp .)
    LE              reduce using rule 21 (exp -> exp LT exp .)
    GE              reduce using rule 21 (exp -> exp LT exp .)
    NE              reduce using rule 21 (exp -> exp LT exp .)
    LT              reduce using rule 21 (exp -> exp LT exp .)
    GT              reduce using rule 21 (exp -> exp LT exp .)
    RA              reduce using rule 21 (exp -> exp LT exp .)
    WA              reduce using rule 21 (exp -> exp LT exp .)
    CHHA            reduce using rule 21 (exp -> exp LT exp .)
    CHHAINA         reduce using rule 21 (exp -> exp LT exp .)
    COMMA           reduce using rule 21 (exp -> exp LT exp .)
    LEKHA           reduce using rule 21 (exp -> exp LT exp .)
    RPARA           reduce using rule 21 (exp -> exp LT exp .)
    RGPARA          reduce using rule 21 (exp -> exp LT exp .)
    NEWLINE         reduce using rule 21 (exp -> exp LT exp .)
    $end            reduce using rule 21 (exp -> exp LT exp .)
    DEKHI           reduce using rule 21 (exp -> exp LT exp .)
    COLON           reduce using rule 21 (exp -> exp LT exp .)
    SEMICOLON       reduce using rule 21 (exp -> exp LT exp .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35

  ! PLUS            [ reduce using rule 21 (exp -> exp LT exp .) ]
  ! MINUS           [ reduce using rule 21 (exp -> exp LT exp .) ]
  ! TIMES           [ reduce using rule 21 (exp -> exp LT exp .) ]
  ! DIVIDE          [ reduce using rule 21 (exp -> exp LT exp .) ]
  ! POWER           [ reduce using rule 21 (exp -> exp LT exp .) ]
  ! EQ              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 38 ]
  ! NE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 39 ]
  ! RA              [ shift and go to state 41 ]
  ! WA              [ shift and go to state 43 ]


state 68

    (20) exp -> exp NE exp .
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    BHAE            reduce using rule 20 (exp -> exp NE exp .)
    NABHAE          reduce using rule 20 (exp -> exp NE exp .)
    CHHA            reduce using rule 20 (exp -> exp NE exp .)
    CHHAINA         reduce using rule 20 (exp -> exp NE exp .)
    COMMA           reduce using rule 20 (exp -> exp NE exp .)
    LEKHA           reduce using rule 20 (exp -> exp NE exp .)
    RPARA           reduce using rule 20 (exp -> exp NE exp .)
    RGPARA          reduce using rule 20 (exp -> exp NE exp .)
    NEWLINE         reduce using rule 20 (exp -> exp NE exp .)
    $end            reduce using rule 20 (exp -> exp NE exp .)
    DEKHI           reduce using rule 20 (exp -> exp NE exp .)
    COLON           reduce using rule 20 (exp -> exp NE exp .)
    SEMICOLON       reduce using rule 20 (exp -> exp NE exp .)
    EQ              shift and go to state 45
    LE              shift and go to state 33
    GE              shift and go to state 38
    NE              shift and go to state 37
    LT              shift and go to state 36
    GT              shift and go to state 39
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35
    RA              shift and go to state 41
    WA              shift and go to state 43

  ! EQ              [ reduce using rule 20 (exp -> exp NE exp .) ]
  ! LE              [ reduce using rule 20 (exp -> exp NE exp .) ]
  ! GE              [ reduce using rule 20 (exp -> exp NE exp .) ]
  ! NE              [ reduce using rule 20 (exp -> exp NE exp .) ]
  ! LT              [ reduce using rule 20 (exp -> exp NE exp .) ]
  ! GT              [ reduce using rule 20 (exp -> exp NE exp .) ]
  ! PLUS            [ reduce using rule 20 (exp -> exp NE exp .) ]
  ! MINUS           [ reduce using rule 20 (exp -> exp NE exp .) ]
  ! TIMES           [ reduce using rule 20 (exp -> exp NE exp .) ]
  ! DIVIDE          [ reduce using rule 20 (exp -> exp NE exp .) ]
  ! POWER           [ reduce using rule 20 (exp -> exp NE exp .) ]
  ! RA              [ reduce using rule 20 (exp -> exp NE exp .) ]
  ! WA              [ reduce using rule 20 (exp -> exp NE exp .) ]


state 69

    (19) exp -> exp GE exp .
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    BHAE            reduce using rule 19 (exp -> exp GE exp .)
    NABHAE          reduce using rule 19 (exp -> exp GE exp .)
    EQ              reduce using rule 19 (exp -> exp GE exp .)
    LE              reduce using rule 19 (exp -> exp GE exp .)
    GE              reduce using rule 19 (exp -> exp GE exp .)
    NE              reduce using rule 19 (exp -> exp GE exp .)
    LT              reduce using rule 19 (exp -> exp GE exp .)
    GT              reduce using rule 19 (exp -> exp GE exp .)
    RA              reduce using rule 19 (exp -> exp GE exp .)
    WA              reduce using rule 19 (exp -> exp GE exp .)
    CHHA            reduce using rule 19 (exp -> exp GE exp .)
    CHHAINA         reduce using rule 19 (exp -> exp GE exp .)
    COMMA           reduce using rule 19 (exp -> exp GE exp .)
    LEKHA           reduce using rule 19 (exp -> exp GE exp .)
    RPARA           reduce using rule 19 (exp -> exp GE exp .)
    RGPARA          reduce using rule 19 (exp -> exp GE exp .)
    NEWLINE         reduce using rule 19 (exp -> exp GE exp .)
    $end            reduce using rule 19 (exp -> exp GE exp .)
    DEKHI           reduce using rule 19 (exp -> exp GE exp .)
    COLON           reduce using rule 19 (exp -> exp GE exp .)
    SEMICOLON       reduce using rule 19 (exp -> exp GE exp .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35

  ! PLUS            [ reduce using rule 19 (exp -> exp GE exp .) ]
  ! MINUS           [ reduce using rule 19 (exp -> exp GE exp .) ]
  ! TIMES           [ reduce using rule 19 (exp -> exp GE exp .) ]
  ! DIVIDE          [ reduce using rule 19 (exp -> exp GE exp .) ]
  ! POWER           [ reduce using rule 19 (exp -> exp GE exp .) ]
  ! EQ              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 38 ]
  ! NE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 39 ]
  ! RA              [ shift and go to state 41 ]
  ! WA              [ shift and go to state 43 ]


state 70

    (22) exp -> exp GT exp .
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    BHAE            reduce using rule 22 (exp -> exp GT exp .)
    NABHAE          reduce using rule 22 (exp -> exp GT exp .)
    EQ              reduce using rule 22 (exp -> exp GT exp .)
    LE              reduce using rule 22 (exp -> exp GT exp .)
    GE              reduce using rule 22 (exp -> exp GT exp .)
    NE              reduce using rule 22 (exp -> exp GT exp .)
    LT              reduce using rule 22 (exp -> exp GT exp .)
    GT              reduce using rule 22 (exp -> exp GT exp .)
    RA              reduce using rule 22 (exp -> exp GT exp .)
    WA              reduce using rule 22 (exp -> exp GT exp .)
    CHHA            reduce using rule 22 (exp -> exp GT exp .)
    CHHAINA         reduce using rule 22 (exp -> exp GT exp .)
    COMMA           reduce using rule 22 (exp -> exp GT exp .)
    LEKHA           reduce using rule 22 (exp -> exp GT exp .)
    RPARA           reduce using rule 22 (exp -> exp GT exp .)
    RGPARA          reduce using rule 22 (exp -> exp GT exp .)
    NEWLINE         reduce using rule 22 (exp -> exp GT exp .)
    $end            reduce using rule 22 (exp -> exp GT exp .)
    DEKHI           reduce using rule 22 (exp -> exp GT exp .)
    COLON           reduce using rule 22 (exp -> exp GT exp .)
    SEMICOLON       reduce using rule 22 (exp -> exp GT exp .)
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35

  ! PLUS            [ reduce using rule 22 (exp -> exp GT exp .) ]
  ! MINUS           [ reduce using rule 22 (exp -> exp GT exp .) ]
  ! TIMES           [ reduce using rule 22 (exp -> exp GT exp .) ]
  ! DIVIDE          [ reduce using rule 22 (exp -> exp GT exp .) ]
  ! POWER           [ reduce using rule 22 (exp -> exp GT exp .) ]
  ! EQ              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 38 ]
  ! NE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 39 ]
  ! RA              [ shift and go to state 41 ]
  ! WA              [ shift and go to state 43 ]


state 71

    (37) dynamString -> exp COMMA dynamString .

    LEKHA           reduce using rule 37 (dynamString -> exp COMMA dynamString .)


state 72

    (28) exp -> exp RA exp .
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    BHAE            reduce using rule 28 (exp -> exp RA exp .)
    NABHAE          reduce using rule 28 (exp -> exp RA exp .)
    CHHA            reduce using rule 28 (exp -> exp RA exp .)
    CHHAINA         reduce using rule 28 (exp -> exp RA exp .)
    COMMA           reduce using rule 28 (exp -> exp RA exp .)
    LEKHA           reduce using rule 28 (exp -> exp RA exp .)
    RPARA           reduce using rule 28 (exp -> exp RA exp .)
    RGPARA          reduce using rule 28 (exp -> exp RA exp .)
    NEWLINE         reduce using rule 28 (exp -> exp RA exp .)
    $end            reduce using rule 28 (exp -> exp RA exp .)
    DEKHI           reduce using rule 28 (exp -> exp RA exp .)
    COLON           reduce using rule 28 (exp -> exp RA exp .)
    SEMICOLON       reduce using rule 28 (exp -> exp RA exp .)
    EQ              shift and go to state 45
    LE              shift and go to state 33
    GE              shift and go to state 38
    NE              shift and go to state 37
    LT              shift and go to state 36
    GT              shift and go to state 39
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35
    RA              shift and go to state 41
    WA              shift and go to state 43

  ! EQ              [ reduce using rule 28 (exp -> exp RA exp .) ]
  ! LE              [ reduce using rule 28 (exp -> exp RA exp .) ]
  ! GE              [ reduce using rule 28 (exp -> exp RA exp .) ]
  ! NE              [ reduce using rule 28 (exp -> exp RA exp .) ]
  ! LT              [ reduce using rule 28 (exp -> exp RA exp .) ]
  ! GT              [ reduce using rule 28 (exp -> exp RA exp .) ]
  ! PLUS            [ reduce using rule 28 (exp -> exp RA exp .) ]
  ! MINUS           [ reduce using rule 28 (exp -> exp RA exp .) ]
  ! TIMES           [ reduce using rule 28 (exp -> exp RA exp .) ]
  ! DIVIDE          [ reduce using rule 28 (exp -> exp RA exp .) ]
  ! POWER           [ reduce using rule 28 (exp -> exp RA exp .) ]
  ! RA              [ reduce using rule 28 (exp -> exp RA exp .) ]
  ! WA              [ reduce using rule 28 (exp -> exp RA exp .) ]


state 73

    (23) exp -> exp PLUS exp .
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    BHAE            reduce using rule 23 (exp -> exp PLUS exp .)
    NABHAE          reduce using rule 23 (exp -> exp PLUS exp .)
    EQ              reduce using rule 23 (exp -> exp PLUS exp .)
    LE              reduce using rule 23 (exp -> exp PLUS exp .)
    GE              reduce using rule 23 (exp -> exp PLUS exp .)
    NE              reduce using rule 23 (exp -> exp PLUS exp .)
    LT              reduce using rule 23 (exp -> exp PLUS exp .)
    GT              reduce using rule 23 (exp -> exp PLUS exp .)
    PLUS            reduce using rule 23 (exp -> exp PLUS exp .)
    MINUS           reduce using rule 23 (exp -> exp PLUS exp .)
    RA              reduce using rule 23 (exp -> exp PLUS exp .)
    WA              reduce using rule 23 (exp -> exp PLUS exp .)
    CHHA            reduce using rule 23 (exp -> exp PLUS exp .)
    CHHAINA         reduce using rule 23 (exp -> exp PLUS exp .)
    COMMA           reduce using rule 23 (exp -> exp PLUS exp .)
    LEKHA           reduce using rule 23 (exp -> exp PLUS exp .)
    RPARA           reduce using rule 23 (exp -> exp PLUS exp .)
    RGPARA          reduce using rule 23 (exp -> exp PLUS exp .)
    NEWLINE         reduce using rule 23 (exp -> exp PLUS exp .)
    $end            reduce using rule 23 (exp -> exp PLUS exp .)
    DEKHI           reduce using rule 23 (exp -> exp PLUS exp .)
    COLON           reduce using rule 23 (exp -> exp PLUS exp .)
    SEMICOLON       reduce using rule 23 (exp -> exp PLUS exp .)
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35

  ! TIMES           [ reduce using rule 23 (exp -> exp PLUS exp .) ]
  ! DIVIDE          [ reduce using rule 23 (exp -> exp PLUS exp .) ]
  ! POWER           [ reduce using rule 23 (exp -> exp PLUS exp .) ]
  ! EQ              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 38 ]
  ! NE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 39 ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 46 ]
  ! RA              [ shift and go to state 41 ]
  ! WA              [ shift and go to state 43 ]


state 74

    (29) exp -> exp WA exp .
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    BHAE            reduce using rule 29 (exp -> exp WA exp .)
    NABHAE          reduce using rule 29 (exp -> exp WA exp .)
    CHHA            reduce using rule 29 (exp -> exp WA exp .)
    CHHAINA         reduce using rule 29 (exp -> exp WA exp .)
    COMMA           reduce using rule 29 (exp -> exp WA exp .)
    LEKHA           reduce using rule 29 (exp -> exp WA exp .)
    RPARA           reduce using rule 29 (exp -> exp WA exp .)
    RGPARA          reduce using rule 29 (exp -> exp WA exp .)
    NEWLINE         reduce using rule 29 (exp -> exp WA exp .)
    $end            reduce using rule 29 (exp -> exp WA exp .)
    DEKHI           reduce using rule 29 (exp -> exp WA exp .)
    COLON           reduce using rule 29 (exp -> exp WA exp .)
    SEMICOLON       reduce using rule 29 (exp -> exp WA exp .)
    EQ              shift and go to state 45
    LE              shift and go to state 33
    GE              shift and go to state 38
    NE              shift and go to state 37
    LT              shift and go to state 36
    GT              shift and go to state 39
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35
    RA              shift and go to state 41
    WA              shift and go to state 43

  ! EQ              [ reduce using rule 29 (exp -> exp WA exp .) ]
  ! LE              [ reduce using rule 29 (exp -> exp WA exp .) ]
  ! GE              [ reduce using rule 29 (exp -> exp WA exp .) ]
  ! NE              [ reduce using rule 29 (exp -> exp WA exp .) ]
  ! LT              [ reduce using rule 29 (exp -> exp WA exp .) ]
  ! GT              [ reduce using rule 29 (exp -> exp WA exp .) ]
  ! PLUS            [ reduce using rule 29 (exp -> exp WA exp .) ]
  ! MINUS           [ reduce using rule 29 (exp -> exp WA exp .) ]
  ! TIMES           [ reduce using rule 29 (exp -> exp WA exp .) ]
  ! DIVIDE          [ reduce using rule 29 (exp -> exp WA exp .) ]
  ! POWER           [ reduce using rule 29 (exp -> exp WA exp .) ]
  ! RA              [ reduce using rule 29 (exp -> exp WA exp .) ]
  ! WA              [ reduce using rule 29 (exp -> exp WA exp .) ]


state 75

    (25) exp -> exp TIMES exp .
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    BHAE            reduce using rule 25 (exp -> exp TIMES exp .)
    NABHAE          reduce using rule 25 (exp -> exp TIMES exp .)
    EQ              reduce using rule 25 (exp -> exp TIMES exp .)
    LE              reduce using rule 25 (exp -> exp TIMES exp .)
    GE              reduce using rule 25 (exp -> exp TIMES exp .)
    NE              reduce using rule 25 (exp -> exp TIMES exp .)
    LT              reduce using rule 25 (exp -> exp TIMES exp .)
    GT              reduce using rule 25 (exp -> exp TIMES exp .)
    PLUS            reduce using rule 25 (exp -> exp TIMES exp .)
    MINUS           reduce using rule 25 (exp -> exp TIMES exp .)
    TIMES           reduce using rule 25 (exp -> exp TIMES exp .)
    DIVIDE          reduce using rule 25 (exp -> exp TIMES exp .)
    POWER           reduce using rule 25 (exp -> exp TIMES exp .)
    RA              reduce using rule 25 (exp -> exp TIMES exp .)
    WA              reduce using rule 25 (exp -> exp TIMES exp .)
    CHHA            reduce using rule 25 (exp -> exp TIMES exp .)
    CHHAINA         reduce using rule 25 (exp -> exp TIMES exp .)
    COMMA           reduce using rule 25 (exp -> exp TIMES exp .)
    LEKHA           reduce using rule 25 (exp -> exp TIMES exp .)
    RPARA           reduce using rule 25 (exp -> exp TIMES exp .)
    RGPARA          reduce using rule 25 (exp -> exp TIMES exp .)
    NEWLINE         reduce using rule 25 (exp -> exp TIMES exp .)
    $end            reduce using rule 25 (exp -> exp TIMES exp .)
    DEKHI           reduce using rule 25 (exp -> exp TIMES exp .)
    COLON           reduce using rule 25 (exp -> exp TIMES exp .)
    SEMICOLON       reduce using rule 25 (exp -> exp TIMES exp .)

  ! EQ              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 38 ]
  ! NE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 39 ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 46 ]
  ! TIMES           [ shift and go to state 44 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! POWER           [ shift and go to state 35 ]
  ! RA              [ shift and go to state 41 ]
  ! WA              [ shift and go to state 43 ]


state 76

    (17) exp -> exp EQ exp .
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    BHAE            reduce using rule 17 (exp -> exp EQ exp .)
    NABHAE          reduce using rule 17 (exp -> exp EQ exp .)
    EQ              reduce using rule 17 (exp -> exp EQ exp .)
    NE              reduce using rule 17 (exp -> exp EQ exp .)
    RA              reduce using rule 17 (exp -> exp EQ exp .)
    WA              reduce using rule 17 (exp -> exp EQ exp .)
    CHHA            reduce using rule 17 (exp -> exp EQ exp .)
    CHHAINA         reduce using rule 17 (exp -> exp EQ exp .)
    COMMA           reduce using rule 17 (exp -> exp EQ exp .)
    LEKHA           reduce using rule 17 (exp -> exp EQ exp .)
    RPARA           reduce using rule 17 (exp -> exp EQ exp .)
    RGPARA          reduce using rule 17 (exp -> exp EQ exp .)
    NEWLINE         reduce using rule 17 (exp -> exp EQ exp .)
    $end            reduce using rule 17 (exp -> exp EQ exp .)
    DEKHI           reduce using rule 17 (exp -> exp EQ exp .)
    COLON           reduce using rule 17 (exp -> exp EQ exp .)
    SEMICOLON       reduce using rule 17 (exp -> exp EQ exp .)
    LE              shift and go to state 33
    GE              shift and go to state 38
    LT              shift and go to state 36
    GT              shift and go to state 39
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35

  ! LE              [ reduce using rule 17 (exp -> exp EQ exp .) ]
  ! GE              [ reduce using rule 17 (exp -> exp EQ exp .) ]
  ! LT              [ reduce using rule 17 (exp -> exp EQ exp .) ]
  ! GT              [ reduce using rule 17 (exp -> exp EQ exp .) ]
  ! PLUS            [ reduce using rule 17 (exp -> exp EQ exp .) ]
  ! MINUS           [ reduce using rule 17 (exp -> exp EQ exp .) ]
  ! TIMES           [ reduce using rule 17 (exp -> exp EQ exp .) ]
  ! DIVIDE          [ reduce using rule 17 (exp -> exp EQ exp .) ]
  ! POWER           [ reduce using rule 17 (exp -> exp EQ exp .) ]
  ! EQ              [ shift and go to state 45 ]
  ! NE              [ shift and go to state 37 ]
  ! RA              [ shift and go to state 41 ]
  ! WA              [ shift and go to state 43 ]


state 77

    (24) exp -> exp MINUS exp .
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    BHAE            reduce using rule 24 (exp -> exp MINUS exp .)
    NABHAE          reduce using rule 24 (exp -> exp MINUS exp .)
    EQ              reduce using rule 24 (exp -> exp MINUS exp .)
    LE              reduce using rule 24 (exp -> exp MINUS exp .)
    GE              reduce using rule 24 (exp -> exp MINUS exp .)
    NE              reduce using rule 24 (exp -> exp MINUS exp .)
    LT              reduce using rule 24 (exp -> exp MINUS exp .)
    GT              reduce using rule 24 (exp -> exp MINUS exp .)
    PLUS            reduce using rule 24 (exp -> exp MINUS exp .)
    MINUS           reduce using rule 24 (exp -> exp MINUS exp .)
    RA              reduce using rule 24 (exp -> exp MINUS exp .)
    WA              reduce using rule 24 (exp -> exp MINUS exp .)
    CHHA            reduce using rule 24 (exp -> exp MINUS exp .)
    CHHAINA         reduce using rule 24 (exp -> exp MINUS exp .)
    COMMA           reduce using rule 24 (exp -> exp MINUS exp .)
    LEKHA           reduce using rule 24 (exp -> exp MINUS exp .)
    RPARA           reduce using rule 24 (exp -> exp MINUS exp .)
    RGPARA          reduce using rule 24 (exp -> exp MINUS exp .)
    NEWLINE         reduce using rule 24 (exp -> exp MINUS exp .)
    $end            reduce using rule 24 (exp -> exp MINUS exp .)
    DEKHI           reduce using rule 24 (exp -> exp MINUS exp .)
    COLON           reduce using rule 24 (exp -> exp MINUS exp .)
    SEMICOLON       reduce using rule 24 (exp -> exp MINUS exp .)
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35

  ! TIMES           [ reduce using rule 24 (exp -> exp MINUS exp .) ]
  ! DIVIDE          [ reduce using rule 24 (exp -> exp MINUS exp .) ]
  ! POWER           [ reduce using rule 24 (exp -> exp MINUS exp .) ]
  ! EQ              [ shift and go to state 45 ]
  ! LE              [ shift and go to state 33 ]
  ! GE              [ shift and go to state 38 ]
  ! NE              [ shift and go to state 37 ]
  ! LT              [ shift and go to state 36 ]
  ! GT              [ shift and go to state 39 ]
  ! PLUS            [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 46 ]
  ! RA              [ shift and go to state 41 ]
  ! WA              [ shift and go to state 43 ]


state 78

    (40) condition -> condition WA condition .
    (39) condition -> condition . RA condition
    (40) condition -> condition . WA condition

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 40 (condition -> condition WA condition .)
    RA              shift and go to state 49
    WA              shift and go to state 47

  ! RA              [ reduce using rule 40 (condition -> condition WA condition .) ]
  ! WA              [ reduce using rule 40 (condition -> condition WA condition .) ]


state 79

    (43) cmpdstmt -> stmt . NEWLINE cmpdstmt

    NEWLINE         shift and go to state 93


state 80

    (10) stmt -> YEDI condition NEWLINE cmpdstmt . optelse DIYE
    (45) optelse -> . ATHAWA condition NEWLINE cmpdstmt optelse
    (46) optelse -> . ATHAWA NEWLINE cmpdstmt
    (47) optelse -> .

    ATHAWA          shift and go to state 95
    DIYE            reduce using rule 47 (optelse -> .)

    optelse                        shift and go to state 94

state 81

    (39) condition -> condition RA condition .
    (39) condition -> condition . RA condition
    (40) condition -> condition . WA condition

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 39 (condition -> condition RA condition .)
    RA              shift and go to state 49
    WA              shift and go to state 47

  ! RA              [ reduce using rule 39 (condition -> condition RA condition .) ]
  ! WA              [ reduce using rule 39 (condition -> condition RA condition .) ]


state 82

    (36) exp -> LPARA exp RPARA QUESTION . exp COLON exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 96

state 83

    (54) whilecond -> whilecond WA . whilecond
    (53) whilecond -> . whilecond RA whilecond
    (54) whilecond -> . whilecond WA whilecond
    (55) whilecond -> . exp CHHA
    (56) whilecond -> . exp CHHAINA
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 54
    whilecond                      shift and go to state 97

state 84

    (12) stmt -> JABA SAMMA whilecond NEWLINE . cmpdstmt BAJA
    (43) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (44) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (37) dynamString -> . exp COMMA dynamString
    (38) dynamString -> . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    BAJA            reduce using rule 44 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    stmt                           shift and go to state 79
    dynamString                    shift and go to state 11
    cmpdstmt                       shift and go to state 98
    exp                            shift and go to state 13

state 85

    (53) whilecond -> whilecond RA . whilecond
    (53) whilecond -> . whilecond RA whilecond
    (54) whilecond -> . whilecond WA whilecond
    (55) whilecond -> . exp CHHA
    (56) whilecond -> . exp CHHAINA
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 54
    whilecond                      shift and go to state 99

state 86

    (55) whilecond -> exp CHHA .

    RA              reduce using rule 55 (whilecond -> exp CHHA .)
    WA              reduce using rule 55 (whilecond -> exp CHHA .)
    NEWLINE         reduce using rule 55 (whilecond -> exp CHHA .)


state 87

    (56) whilecond -> exp CHHAINA .

    RA              reduce using rule 56 (whilecond -> exp CHHAINA .)
    WA              reduce using rule 56 (whilecond -> exp CHHAINA .)
    NEWLINE         reduce using rule 56 (whilecond -> exp CHHAINA .)


state 88

    (34) exp -> IDENTIFIER LGPARA exp RGPARA .

    BHAE            reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NABHAE          reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    EQ              reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LE              reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    GE              reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NE              reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LT              reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    GT              reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    PLUS            reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    MINUS           reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    TIMES           reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    DIVIDE          reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    POWER           reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RA              reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    WA              reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    CHHA            reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    CHHAINA         reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    COMMA           reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    LEKHA           reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RPARA           reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    RGPARA          reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    NEWLINE         reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    $end            reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    DEKHI           reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    COLON           reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)
    SEMICOLON       reduce using rule 34 (exp -> IDENTIFIER LGPARA exp RGPARA .)


state 89

    (13) stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp . RGPARA
    (33) exp -> LGPARA variableexp . RGPARA

    RGPARA          shift and go to state 100


state 90

    (9) stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    NEWLINE         reduce using rule 9 (stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .)
    $end            reduce using rule 9 (stmt -> IDENTIFIER incrementsign ASSIGNMENT exp .)
    EQ              shift and go to state 45
    LE              shift and go to state 33
    GE              shift and go to state 38
    NE              shift and go to state 37
    LT              shift and go to state 36
    GT              shift and go to state 39
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35
    RA              shift and go to state 41
    WA              shift and go to state 43


state 91

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp . DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    DEKHI           shift and go to state 101
    EQ              shift and go to state 45
    LE              shift and go to state 33
    GE              shift and go to state 38
    NE              shift and go to state 37
    LT              shift and go to state 36
    GT              shift and go to state 39
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35
    RA              shift and go to state 41
    WA              shift and go to state 43


state 92

    (14) variableexp -> exp COMMA variableexp .

    RGPARA          reduce using rule 14 (variableexp -> exp COMMA variableexp .)


state 93

    (43) cmpdstmt -> stmt NEWLINE . cmpdstmt
    (43) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (44) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (37) dynamString -> . exp COMMA dynamString
    (38) dynamString -> . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    ATHAWA          reduce using rule 44 (cmpdstmt -> .)
    DIYE            reduce using rule 44 (cmpdstmt -> .)
    BAJA            reduce using rule 44 (cmpdstmt -> .)
    BAISA           reduce using rule 44 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    stmt                           shift and go to state 79
    dynamString                    shift and go to state 11
    cmpdstmt                       shift and go to state 102
    exp                            shift and go to state 13

state 94

    (10) stmt -> YEDI condition NEWLINE cmpdstmt optelse . DIYE

    DIYE            shift and go to state 103


state 95

    (45) optelse -> ATHAWA . condition NEWLINE cmpdstmt optelse
    (46) optelse -> ATHAWA . NEWLINE cmpdstmt
    (39) condition -> . condition RA condition
    (40) condition -> . condition WA condition
    (41) condition -> . exp BHAE
    (42) condition -> . exp NABHAE
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    NEWLINE         shift and go to state 104
    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 16
    condition                      shift and go to state 105

state 96

    (36) exp -> LPARA exp RPARA QUESTION exp . COLON exp
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    COLON           shift and go to state 106
    EQ              shift and go to state 45
    LE              shift and go to state 33
    GE              shift and go to state 38
    NE              shift and go to state 37
    LT              shift and go to state 36
    GT              shift and go to state 39
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35
    RA              shift and go to state 41
    WA              shift and go to state 43


state 97

    (54) whilecond -> whilecond WA whilecond .
    (53) whilecond -> whilecond . RA whilecond
    (54) whilecond -> whilecond . WA whilecond

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 54 (whilecond -> whilecond WA whilecond .)
    RA              shift and go to state 85
    WA              shift and go to state 83

  ! RA              [ reduce using rule 54 (whilecond -> whilecond WA whilecond .) ]
  ! WA              [ reduce using rule 54 (whilecond -> whilecond WA whilecond .) ]


state 98

    (12) stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt . BAJA

    BAJA            shift and go to state 107


state 99

    (53) whilecond -> whilecond RA whilecond .
    (53) whilecond -> whilecond . RA whilecond
    (54) whilecond -> whilecond . WA whilecond

  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    NEWLINE         reduce using rule 53 (whilecond -> whilecond RA whilecond .)
    RA              shift and go to state 85
    WA              shift and go to state 83

  ! RA              [ reduce using rule 53 (whilecond -> whilecond RA whilecond .) ]
  ! WA              [ reduce using rule 53 (whilecond -> whilecond RA whilecond .) ]


state 100

    (13) stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .
    (33) exp -> LGPARA variableexp RGPARA .

  ! reduce/reduce conflict for NEWLINE resolved using rule 13 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
  ! reduce/reduce conflict for $end resolved using rule 13 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    NEWLINE         reduce using rule 13 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    $end            reduce using rule 13 (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA .)
    EQ              reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    LE              reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    GE              reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    NE              reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    LT              reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    GT              reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    PLUS            reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    MINUS           reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    TIMES           reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    DIVIDE          reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    POWER           reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    RA              reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)
    WA              reduce using rule 33 (exp -> LGPARA variableexp RGPARA .)

  ! NEWLINE         [ reduce using rule 33 (exp -> LGPARA variableexp RGPARA .) ]
  ! $end            [ reduce using rule 33 (exp -> LGPARA variableexp RGPARA .) ]


state 101

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI . exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 108

state 102

    (43) cmpdstmt -> stmt NEWLINE cmpdstmt .

    ATHAWA          reduce using rule 43 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    DIYE            reduce using rule 43 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    BAJA            reduce using rule 43 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    BAISA           reduce using rule 43 (cmpdstmt -> stmt NEWLINE cmpdstmt .)


state 103

    (10) stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .

    NEWLINE         reduce using rule 10 (stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .)
    $end            reduce using rule 10 (stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE .)


state 104

    (46) optelse -> ATHAWA NEWLINE . cmpdstmt
    (43) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (44) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (37) dynamString -> . exp COMMA dynamString
    (38) dynamString -> . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    DIYE            reduce using rule 44 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    stmt                           shift and go to state 79
    dynamString                    shift and go to state 11
    cmpdstmt                       shift and go to state 109
    exp                            shift and go to state 13

state 105

    (45) optelse -> ATHAWA condition . NEWLINE cmpdstmt optelse
    (39) condition -> condition . RA condition
    (40) condition -> condition . WA condition

    NEWLINE         shift and go to state 110
    RA              shift and go to state 49
    WA              shift and go to state 47


state 106

    (36) exp -> LPARA exp RPARA QUESTION exp COLON . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 111

state 107

    (12) stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .

    NEWLINE         reduce using rule 12 (stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .)
    $end            reduce using rule 12 (stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .)


state 108

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp . SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    SEMICOLON       shift and go to state 112
    EQ              shift and go to state 45
    LE              shift and go to state 33
    GE              shift and go to state 38
    NE              shift and go to state 37
    LT              shift and go to state 36
    GT              shift and go to state 39
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35
    RA              shift and go to state 41
    WA              shift and go to state 43


state 109

    (46) optelse -> ATHAWA NEWLINE cmpdstmt .

    DIYE            reduce using rule 46 (optelse -> ATHAWA NEWLINE cmpdstmt .)


state 110

    (45) optelse -> ATHAWA condition NEWLINE . cmpdstmt optelse
    (43) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (44) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (37) dynamString -> . exp COMMA dynamString
    (38) dynamString -> . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    ATHAWA          reduce using rule 44 (cmpdstmt -> .)
    DIYE            reduce using rule 44 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    stmt                           shift and go to state 79
    dynamString                    shift and go to state 11
    cmpdstmt                       shift and go to state 113
    exp                            shift and go to state 13

state 111

    (36) exp -> LPARA exp RPARA QUESTION exp COLON exp .
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
  ! shift/reduce conflict for RA resolved as shift
  ! shift/reduce conflict for WA resolved as shift
    BHAE            reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    NABHAE          reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    CHHA            reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    CHHAINA         reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    COMMA           reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    LEKHA           reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    RPARA           reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    RGPARA          reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    NEWLINE         reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    $end            reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    DEKHI           reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    COLON           reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    SEMICOLON       reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .)
    EQ              shift and go to state 45
    LE              shift and go to state 33
    GE              shift and go to state 38
    NE              shift and go to state 37
    LT              shift and go to state 36
    GT              shift and go to state 39
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35
    RA              shift and go to state 41
    WA              shift and go to state 43

  ! EQ              [ reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! LE              [ reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! GE              [ reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! NE              [ reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! LT              [ reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! GT              [ reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! PLUS            [ reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! MINUS           [ reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! TIMES           [ reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! DIVIDE          [ reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! POWER           [ reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! RA              [ reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]
  ! WA              [ reduce using rule 36 (exp -> LPARA exp RPARA QUESTION exp COLON exp .) ]


state 112

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON . sign exp NEWLINE cmpdstmt BAISA
    (48) sign -> . PLUS
    (49) sign -> . MINUS

    PLUS            shift and go to state 24
    MINUS           shift and go to state 27

    sign                           shift and go to state 114

state 113

    (45) optelse -> ATHAWA condition NEWLINE cmpdstmt . optelse
    (45) optelse -> . ATHAWA condition NEWLINE cmpdstmt optelse
    (46) optelse -> . ATHAWA NEWLINE cmpdstmt
    (47) optelse -> .

    ATHAWA          shift and go to state 95
    DIYE            reduce using rule 47 (optelse -> .)

    optelse                        shift and go to state 115

state 114

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign . exp NEWLINE cmpdstmt BAISA
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    IDENTIFIER      shift and go to state 14
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    exp                            shift and go to state 116

state 115

    (45) optelse -> ATHAWA condition NEWLINE cmpdstmt optelse .

    DIYE            reduce using rule 45 (optelse -> ATHAWA condition NEWLINE cmpdstmt optelse .)


state 116

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp . NEWLINE cmpdstmt BAISA
    (17) exp -> exp . EQ exp
    (18) exp -> exp . LE exp
    (19) exp -> exp . GE exp
    (20) exp -> exp . NE exp
    (21) exp -> exp . LT exp
    (22) exp -> exp . GT exp
    (23) exp -> exp . PLUS exp
    (24) exp -> exp . MINUS exp
    (25) exp -> exp . TIMES exp
    (26) exp -> exp . DIVIDE exp
    (27) exp -> exp . POWER exp
    (28) exp -> exp . RA exp
    (29) exp -> exp . WA exp

    NEWLINE         shift and go to state 117
    EQ              shift and go to state 45
    LE              shift and go to state 33
    GE              shift and go to state 38
    NE              shift and go to state 37
    LT              shift and go to state 36
    GT              shift and go to state 39
    PLUS            shift and go to state 42
    MINUS           shift and go to state 46
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 34
    POWER           shift and go to state 35
    RA              shift and go to state 41
    WA              shift and go to state 43


state 117

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE . cmpdstmt BAISA
    (43) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (44) cmpdstmt -> .
    (5) stmt -> . IDENTIFIER ASSIGNMENT exp
    (6) stmt -> . dynamString LEKHA
    (7) stmt -> . dynamString LEKHA SEMICOLON
    (8) stmt -> . IDENTIFIER LEU
    (9) stmt -> . IDENTIFIER incrementsign ASSIGNMENT exp
    (10) stmt -> . YEDI condition NEWLINE cmpdstmt optelse DIYE
    (11) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (12) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (13) stmt -> . IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA
    (37) dynamString -> . exp COMMA dynamString
    (38) dynamString -> . exp
    (17) exp -> . exp EQ exp
    (18) exp -> . exp LE exp
    (19) exp -> . exp GE exp
    (20) exp -> . exp NE exp
    (21) exp -> . exp LT exp
    (22) exp -> . exp GT exp
    (23) exp -> . exp PLUS exp
    (24) exp -> . exp MINUS exp
    (25) exp -> . exp TIMES exp
    (26) exp -> . exp DIVIDE exp
    (27) exp -> . exp POWER exp
    (28) exp -> . exp RA exp
    (29) exp -> . exp WA exp
    (30) exp -> . IDENTIFIER
    (31) exp -> . STRING
    (32) exp -> . NUMBER
    (33) exp -> . LGPARA variableexp RGPARA
    (34) exp -> . IDENTIFIER LGPARA exp RGPARA
    (35) exp -> . LPARA exp RPARA
    (36) exp -> . LPARA exp RPARA QUESTION exp COLON exp

    BAISA           reduce using rule 44 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LGPARA          shift and go to state 10
    LPARA           shift and go to state 2

    stmt                           shift and go to state 79
    dynamString                    shift and go to state 11
    cmpdstmt                       shift and go to state 118
    exp                            shift and go to state 13

state 118

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt . BAISA

    BAISA           shift and go to state 119


state 119

    (11) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .

    NEWLINE         reduce using rule 11 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .)
    $end            reduce using rule 11 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQ in state 68 resolved as shift
WARNING: shift/reduce conflict for LE in state 68 resolved as shift
WARNING: shift/reduce conflict for GE in state 68 resolved as shift
WARNING: shift/reduce conflict for NE in state 68 resolved as shift
WARNING: shift/reduce conflict for LT in state 68 resolved as shift
WARNING: shift/reduce conflict for GT in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 68 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 68 resolved as shift
WARNING: shift/reduce conflict for POWER in state 68 resolved as shift
WARNING: shift/reduce conflict for RA in state 68 resolved as shift
WARNING: shift/reduce conflict for WA in state 68 resolved as shift
WARNING: shift/reduce conflict for EQ in state 72 resolved as shift
WARNING: shift/reduce conflict for LE in state 72 resolved as shift
WARNING: shift/reduce conflict for GE in state 72 resolved as shift
WARNING: shift/reduce conflict for NE in state 72 resolved as shift
WARNING: shift/reduce conflict for LT in state 72 resolved as shift
WARNING: shift/reduce conflict for GT in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for POWER in state 72 resolved as shift
WARNING: shift/reduce conflict for RA in state 72 resolved as shift
WARNING: shift/reduce conflict for WA in state 72 resolved as shift
WARNING: shift/reduce conflict for EQ in state 74 resolved as shift
WARNING: shift/reduce conflict for LE in state 74 resolved as shift
WARNING: shift/reduce conflict for GE in state 74 resolved as shift
WARNING: shift/reduce conflict for NE in state 74 resolved as shift
WARNING: shift/reduce conflict for LT in state 74 resolved as shift
WARNING: shift/reduce conflict for GT in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 74 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 74 resolved as shift
WARNING: shift/reduce conflict for POWER in state 74 resolved as shift
WARNING: shift/reduce conflict for RA in state 74 resolved as shift
WARNING: shift/reduce conflict for WA in state 74 resolved as shift
WARNING: shift/reduce conflict for RA in state 78 resolved as shift
WARNING: shift/reduce conflict for WA in state 78 resolved as shift
WARNING: shift/reduce conflict for RA in state 81 resolved as shift
WARNING: shift/reduce conflict for WA in state 81 resolved as shift
WARNING: shift/reduce conflict for RA in state 97 resolved as shift
WARNING: shift/reduce conflict for WA in state 97 resolved as shift
WARNING: shift/reduce conflict for RA in state 99 resolved as shift
WARNING: shift/reduce conflict for WA in state 99 resolved as shift
WARNING: shift/reduce conflict for EQ in state 111 resolved as shift
WARNING: shift/reduce conflict for LE in state 111 resolved as shift
WARNING: shift/reduce conflict for GE in state 111 resolved as shift
WARNING: shift/reduce conflict for NE in state 111 resolved as shift
WARNING: shift/reduce conflict for LT in state 111 resolved as shift
WARNING: shift/reduce conflict for GT in state 111 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 111 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 111 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 111 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 111 resolved as shift
WARNING: shift/reduce conflict for POWER in state 111 resolved as shift
WARNING: shift/reduce conflict for RA in state 111 resolved as shift
WARNING: shift/reduce conflict for WA in state 111 resolved as shift
WARNING: reduce/reduce conflict in state 100 resolved using rule (stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA)
WARNING: rejected rule (exp -> LGPARA variableexp RGPARA) in state 100
