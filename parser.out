Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    LGPARA
    RGPARA
    ATHAWA

Grammar

Rule 0     S' -> N
Rule 1     N -> element N
Rule 2     N -> <empty>
Rule 3     element -> stmt NEWLINE
Rule 4     stmt -> IDENTIFIER ASSIGNMENT exp
Rule 5     exp -> exp EQ exp
Rule 6     exp -> exp LE exp
Rule 7     exp -> exp GE exp
Rule 8     exp -> exp NE exp
Rule 9     exp -> exp LT exp
Rule 10    exp -> exp GT exp
Rule 11    exp -> exp PLUS exp
Rule 12    exp -> exp MINUS exp
Rule 13    exp -> exp TIMES exp
Rule 14    exp -> exp DIVIDE exp
Rule 15    exp -> exp POWER exp
Rule 16    exp -> IDENTIFIER
Rule 17    exp -> STRING
Rule 18    exp -> NUMBER
Rule 19    exp -> LPARA exp RPARA
Rule 20    stmt -> dynamString LEKHA
Rule 21    dynamString -> exp COMMA dynamString
Rule 22    dynamString -> exp
Rule 23    stmt -> IDENTIFIER LEU
Rule 24    stmt -> YEDI condition NEWLINE cmpdstmt DIYE
Rule 25    condition -> condition RA condition
Rule 26    condition -> exp BHAE
Rule 27    condition -> exp NABHAE
Rule 28    cmpdstmt -> stmt NEWLINE cmpdstmt
Rule 29    cmpdstmt -> <empty>
Rule 30    stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
Rule 31    sign -> PLUS
Rule 32    sign -> MINUS
Rule 33    stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
Rule 34    whilecond -> whilecond RA whilecond
Rule 35    whilecond -> exp CHHA
Rule 36    whilecond -> exp CHHAINA

Terminals, with rules where they appear

ASSIGNMENT           : 4 30
ATHAWA               : 
BAISA                : 30
BAJA                 : 33
BHAE                 : 26
CHHA                 : 35
CHHAINA              : 36
COMMA                : 21
DEKHI                : 30
DIVIDE               : 14
DIYE                 : 24
EQ                   : 5
GE                   : 7
GT                   : 10
IDENTIFIER           : 4 16 23 30
JABA                 : 33
LE                   : 6
LEKHA                : 20
LEU                  : 23
LGPARA               : 
LPARA                : 19
LT                   : 9
MINUS                : 12 32
NABHAE               : 27
NE                   : 8
NEWLINE              : 3 24 28 30 33
NUMBER               : 18
PLUS                 : 11 31
POWER                : 15
RA                   : 25 34
RGPARA               : 
RPARA                : 19
SABEI                : 30
SAMMA                : 33
SEMICOLON            : 30
STRING               : 17
TIMES                : 13
YEDI                 : 24
error                : 

Nonterminals, with rules where they appear

N                    : 1 0
cmpdstmt             : 24 28 30 33
condition            : 24 25 25
dynamString          : 20 21
element              : 1
exp                  : 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 19 21 22 26 27 30 30 30 35 36
sign                 : 30
stmt                 : 3 28
whilecond            : 33 34 34

Parsing method: LALR

state 0

    (0) S' -> . N
    (1) N -> . element N
    (2) N -> .
    (3) element -> . stmt NEWLINE
    (4) stmt -> . IDENTIFIER ASSIGNMENT exp
    (20) stmt -> . dynamString LEKHA
    (23) stmt -> . IDENTIFIER LEU
    (24) stmt -> . YEDI condition NEWLINE cmpdstmt DIYE
    (30) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (33) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (21) dynamString -> . exp COMMA dynamString
    (22) dynamString -> . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    $end            reduce using rule 2 (N -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    stmt                           shift and go to state 8
    dynamString                    shift and go to state 10
    N                              shift and go to state 9
    exp                            shift and go to state 12
    element                        shift and go to state 11

state 1

    (24) stmt -> YEDI . condition NEWLINE cmpdstmt DIYE
    (25) condition -> . condition RA condition
    (26) condition -> . exp BHAE
    (27) condition -> . exp NABHAE
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 15
    condition                      shift and go to state 14

state 2

    (19) exp -> LPARA . exp RPARA
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 16

state 3

    (18) exp -> NUMBER .

    BHAE            reduce using rule 18 (exp -> NUMBER .)
    NABHAE          reduce using rule 18 (exp -> NUMBER .)
    EQ              reduce using rule 18 (exp -> NUMBER .)
    LE              reduce using rule 18 (exp -> NUMBER .)
    GE              reduce using rule 18 (exp -> NUMBER .)
    NE              reduce using rule 18 (exp -> NUMBER .)
    LT              reduce using rule 18 (exp -> NUMBER .)
    GT              reduce using rule 18 (exp -> NUMBER .)
    PLUS            reduce using rule 18 (exp -> NUMBER .)
    MINUS           reduce using rule 18 (exp -> NUMBER .)
    TIMES           reduce using rule 18 (exp -> NUMBER .)
    DIVIDE          reduce using rule 18 (exp -> NUMBER .)
    POWER           reduce using rule 18 (exp -> NUMBER .)
    COMMA           reduce using rule 18 (exp -> NUMBER .)
    LEKHA           reduce using rule 18 (exp -> NUMBER .)
    RPARA           reduce using rule 18 (exp -> NUMBER .)
    CHHA            reduce using rule 18 (exp -> NUMBER .)
    CHHAINA         reduce using rule 18 (exp -> NUMBER .)
    NEWLINE         reduce using rule 18 (exp -> NUMBER .)
    DEKHI           reduce using rule 18 (exp -> NUMBER .)
    SEMICOLON       reduce using rule 18 (exp -> NUMBER .)


state 4

    (33) stmt -> JABA . SAMMA whilecond NEWLINE cmpdstmt BAJA

    SAMMA           shift and go to state 17


state 5

    (17) exp -> STRING .

    BHAE            reduce using rule 17 (exp -> STRING .)
    NABHAE          reduce using rule 17 (exp -> STRING .)
    EQ              reduce using rule 17 (exp -> STRING .)
    LE              reduce using rule 17 (exp -> STRING .)
    GE              reduce using rule 17 (exp -> STRING .)
    NE              reduce using rule 17 (exp -> STRING .)
    LT              reduce using rule 17 (exp -> STRING .)
    GT              reduce using rule 17 (exp -> STRING .)
    PLUS            reduce using rule 17 (exp -> STRING .)
    MINUS           reduce using rule 17 (exp -> STRING .)
    TIMES           reduce using rule 17 (exp -> STRING .)
    DIVIDE          reduce using rule 17 (exp -> STRING .)
    POWER           reduce using rule 17 (exp -> STRING .)
    COMMA           reduce using rule 17 (exp -> STRING .)
    LEKHA           reduce using rule 17 (exp -> STRING .)
    RPARA           reduce using rule 17 (exp -> STRING .)
    CHHA            reduce using rule 17 (exp -> STRING .)
    CHHAINA         reduce using rule 17 (exp -> STRING .)
    NEWLINE         reduce using rule 17 (exp -> STRING .)
    DEKHI           reduce using rule 17 (exp -> STRING .)
    SEMICOLON       reduce using rule 17 (exp -> STRING .)


state 6

    (4) stmt -> IDENTIFIER . ASSIGNMENT exp
    (23) stmt -> IDENTIFIER . LEU
    (16) exp -> IDENTIFIER .

    ASSIGNMENT      shift and go to state 18
    LEU             shift and go to state 19
    COMMA           reduce using rule 16 (exp -> IDENTIFIER .)
    EQ              reduce using rule 16 (exp -> IDENTIFIER .)
    LE              reduce using rule 16 (exp -> IDENTIFIER .)
    GE              reduce using rule 16 (exp -> IDENTIFIER .)
    NE              reduce using rule 16 (exp -> IDENTIFIER .)
    LT              reduce using rule 16 (exp -> IDENTIFIER .)
    GT              reduce using rule 16 (exp -> IDENTIFIER .)
    PLUS            reduce using rule 16 (exp -> IDENTIFIER .)
    MINUS           reduce using rule 16 (exp -> IDENTIFIER .)
    TIMES           reduce using rule 16 (exp -> IDENTIFIER .)
    DIVIDE          reduce using rule 16 (exp -> IDENTIFIER .)
    POWER           reduce using rule 16 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 16 (exp -> IDENTIFIER .)


state 7

    (30) stmt -> SABEI . IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA

    IDENTIFIER      shift and go to state 20


state 8

    (3) element -> stmt . NEWLINE

    NEWLINE         shift and go to state 21


state 9

    (0) S' -> N .



state 10

    (20) stmt -> dynamString . LEKHA

    LEKHA           shift and go to state 22


state 11

    (1) N -> element . N
    (1) N -> . element N
    (2) N -> .
    (3) element -> . stmt NEWLINE
    (4) stmt -> . IDENTIFIER ASSIGNMENT exp
    (20) stmt -> . dynamString LEKHA
    (23) stmt -> . IDENTIFIER LEU
    (24) stmt -> . YEDI condition NEWLINE cmpdstmt DIYE
    (30) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (33) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (21) dynamString -> . exp COMMA dynamString
    (22) dynamString -> . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    $end            reduce using rule 2 (N -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    stmt                           shift and go to state 8
    dynamString                    shift and go to state 10
    exp                            shift and go to state 12
    element                        shift and go to state 11
    N                              shift and go to state 23

state 12

    (21) dynamString -> exp . COMMA dynamString
    (22) dynamString -> exp .
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

    COMMA           shift and go to state 31
    LEKHA           reduce using rule 22 (dynamString -> exp .)
    EQ              shift and go to state 34
    LE              shift and go to state 24
    GE              shift and go to state 29
    NE              shift and go to state 28
    LT              shift and go to state 27
    GT              shift and go to state 30
    PLUS            shift and go to state 32
    MINUS           shift and go to state 35
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 25
    POWER           shift and go to state 26


state 13

    (16) exp -> IDENTIFIER .

    BHAE            reduce using rule 16 (exp -> IDENTIFIER .)
    NABHAE          reduce using rule 16 (exp -> IDENTIFIER .)
    EQ              reduce using rule 16 (exp -> IDENTIFIER .)
    LE              reduce using rule 16 (exp -> IDENTIFIER .)
    GE              reduce using rule 16 (exp -> IDENTIFIER .)
    NE              reduce using rule 16 (exp -> IDENTIFIER .)
    LT              reduce using rule 16 (exp -> IDENTIFIER .)
    GT              reduce using rule 16 (exp -> IDENTIFIER .)
    PLUS            reduce using rule 16 (exp -> IDENTIFIER .)
    MINUS           reduce using rule 16 (exp -> IDENTIFIER .)
    TIMES           reduce using rule 16 (exp -> IDENTIFIER .)
    DIVIDE          reduce using rule 16 (exp -> IDENTIFIER .)
    POWER           reduce using rule 16 (exp -> IDENTIFIER .)
    COMMA           reduce using rule 16 (exp -> IDENTIFIER .)
    LEKHA           reduce using rule 16 (exp -> IDENTIFIER .)
    RPARA           reduce using rule 16 (exp -> IDENTIFIER .)
    CHHA            reduce using rule 16 (exp -> IDENTIFIER .)
    CHHAINA         reduce using rule 16 (exp -> IDENTIFIER .)
    NEWLINE         reduce using rule 16 (exp -> IDENTIFIER .)
    DEKHI           reduce using rule 16 (exp -> IDENTIFIER .)
    SEMICOLON       reduce using rule 16 (exp -> IDENTIFIER .)


state 14

    (24) stmt -> YEDI condition . NEWLINE cmpdstmt DIYE
    (25) condition -> condition . RA condition

    NEWLINE         shift and go to state 36
    RA              shift and go to state 37


state 15

    (26) condition -> exp . BHAE
    (27) condition -> exp . NABHAE
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

    BHAE            shift and go to state 38
    NABHAE          shift and go to state 39
    EQ              shift and go to state 34
    LE              shift and go to state 24
    GE              shift and go to state 29
    NE              shift and go to state 28
    LT              shift and go to state 27
    GT              shift and go to state 30
    PLUS            shift and go to state 32
    MINUS           shift and go to state 35
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 25
    POWER           shift and go to state 26


state 16

    (19) exp -> LPARA exp . RPARA
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

    RPARA           shift and go to state 40
    EQ              shift and go to state 34
    LE              shift and go to state 24
    GE              shift and go to state 29
    NE              shift and go to state 28
    LT              shift and go to state 27
    GT              shift and go to state 30
    PLUS            shift and go to state 32
    MINUS           shift and go to state 35
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 25
    POWER           shift and go to state 26


state 17

    (33) stmt -> JABA SAMMA . whilecond NEWLINE cmpdstmt BAJA
    (34) whilecond -> . whilecond RA whilecond
    (35) whilecond -> . exp CHHA
    (36) whilecond -> . exp CHHAINA
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 42
    whilecond                      shift and go to state 41

state 18

    (4) stmt -> IDENTIFIER ASSIGNMENT . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 43

state 19

    (23) stmt -> IDENTIFIER LEU .

    NEWLINE         reduce using rule 23 (stmt -> IDENTIFIER LEU .)


state 20

    (30) stmt -> SABEI IDENTIFIER . ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA

    ASSIGNMENT      shift and go to state 44


state 21

    (3) element -> stmt NEWLINE .

    IDENTIFIER      reduce using rule 3 (element -> stmt NEWLINE .)
    YEDI            reduce using rule 3 (element -> stmt NEWLINE .)
    SABEI           reduce using rule 3 (element -> stmt NEWLINE .)
    JABA            reduce using rule 3 (element -> stmt NEWLINE .)
    STRING          reduce using rule 3 (element -> stmt NEWLINE .)
    NUMBER          reduce using rule 3 (element -> stmt NEWLINE .)
    LPARA           reduce using rule 3 (element -> stmt NEWLINE .)
    $end            reduce using rule 3 (element -> stmt NEWLINE .)


state 22

    (20) stmt -> dynamString LEKHA .

    NEWLINE         reduce using rule 20 (stmt -> dynamString LEKHA .)


state 23

    (1) N -> element N .

    $end            reduce using rule 1 (N -> element N .)


state 24

    (6) exp -> exp LE . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 45

state 25

    (14) exp -> exp DIVIDE . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 46

state 26

    (15) exp -> exp POWER . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 47

state 27

    (9) exp -> exp LT . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 48

state 28

    (8) exp -> exp NE . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 49

state 29

    (7) exp -> exp GE . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 50

state 30

    (10) exp -> exp GT . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 51

state 31

    (21) dynamString -> exp COMMA . dynamString
    (21) dynamString -> . exp COMMA dynamString
    (22) dynamString -> . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 12
    dynamString                    shift and go to state 52

state 32

    (11) exp -> exp PLUS . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 53

state 33

    (13) exp -> exp TIMES . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 54

state 34

    (5) exp -> exp EQ . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 55

state 35

    (12) exp -> exp MINUS . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 56

state 36

    (24) stmt -> YEDI condition NEWLINE . cmpdstmt DIYE
    (28) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (29) cmpdstmt -> .
    (4) stmt -> . IDENTIFIER ASSIGNMENT exp
    (20) stmt -> . dynamString LEKHA
    (23) stmt -> . IDENTIFIER LEU
    (24) stmt -> . YEDI condition NEWLINE cmpdstmt DIYE
    (30) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (33) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (21) dynamString -> . exp COMMA dynamString
    (22) dynamString -> . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    DIYE            reduce using rule 29 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    stmt                           shift and go to state 57
    cmpdstmt                       shift and go to state 58
    exp                            shift and go to state 12
    dynamString                    shift and go to state 10

state 37

    (25) condition -> condition RA . condition
    (25) condition -> . condition RA condition
    (26) condition -> . exp BHAE
    (27) condition -> . exp NABHAE
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 15
    condition                      shift and go to state 59

state 38

    (26) condition -> exp BHAE .

    RA              reduce using rule 26 (condition -> exp BHAE .)
    NEWLINE         reduce using rule 26 (condition -> exp BHAE .)


state 39

    (27) condition -> exp NABHAE .

    RA              reduce using rule 27 (condition -> exp NABHAE .)
    NEWLINE         reduce using rule 27 (condition -> exp NABHAE .)


state 40

    (19) exp -> LPARA exp RPARA .

    BHAE            reduce using rule 19 (exp -> LPARA exp RPARA .)
    NABHAE          reduce using rule 19 (exp -> LPARA exp RPARA .)
    EQ              reduce using rule 19 (exp -> LPARA exp RPARA .)
    LE              reduce using rule 19 (exp -> LPARA exp RPARA .)
    GE              reduce using rule 19 (exp -> LPARA exp RPARA .)
    NE              reduce using rule 19 (exp -> LPARA exp RPARA .)
    LT              reduce using rule 19 (exp -> LPARA exp RPARA .)
    GT              reduce using rule 19 (exp -> LPARA exp RPARA .)
    PLUS            reduce using rule 19 (exp -> LPARA exp RPARA .)
    MINUS           reduce using rule 19 (exp -> LPARA exp RPARA .)
    TIMES           reduce using rule 19 (exp -> LPARA exp RPARA .)
    DIVIDE          reduce using rule 19 (exp -> LPARA exp RPARA .)
    POWER           reduce using rule 19 (exp -> LPARA exp RPARA .)
    COMMA           reduce using rule 19 (exp -> LPARA exp RPARA .)
    LEKHA           reduce using rule 19 (exp -> LPARA exp RPARA .)
    RPARA           reduce using rule 19 (exp -> LPARA exp RPARA .)
    CHHA            reduce using rule 19 (exp -> LPARA exp RPARA .)
    CHHAINA         reduce using rule 19 (exp -> LPARA exp RPARA .)
    NEWLINE         reduce using rule 19 (exp -> LPARA exp RPARA .)
    DEKHI           reduce using rule 19 (exp -> LPARA exp RPARA .)
    SEMICOLON       reduce using rule 19 (exp -> LPARA exp RPARA .)


state 41

    (33) stmt -> JABA SAMMA whilecond . NEWLINE cmpdstmt BAJA
    (34) whilecond -> whilecond . RA whilecond

    NEWLINE         shift and go to state 60
    RA              shift and go to state 61


state 42

    (35) whilecond -> exp . CHHA
    (36) whilecond -> exp . CHHAINA
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

    CHHA            shift and go to state 62
    CHHAINA         shift and go to state 63
    EQ              shift and go to state 34
    LE              shift and go to state 24
    GE              shift and go to state 29
    NE              shift and go to state 28
    LT              shift and go to state 27
    GT              shift and go to state 30
    PLUS            shift and go to state 32
    MINUS           shift and go to state 35
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 25
    POWER           shift and go to state 26


state 43

    (4) stmt -> IDENTIFIER ASSIGNMENT exp .
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

    NEWLINE         reduce using rule 4 (stmt -> IDENTIFIER ASSIGNMENT exp .)
    EQ              shift and go to state 34
    LE              shift and go to state 24
    GE              shift and go to state 29
    NE              shift and go to state 28
    LT              shift and go to state 27
    GT              shift and go to state 30
    PLUS            shift and go to state 32
    MINUS           shift and go to state 35
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 25
    POWER           shift and go to state 26


state 44

    (30) stmt -> SABEI IDENTIFIER ASSIGNMENT . exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 64

state 45

    (6) exp -> exp LE exp .
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

    BHAE            reduce using rule 6 (exp -> exp LE exp .)
    NABHAE          reduce using rule 6 (exp -> exp LE exp .)
    EQ              reduce using rule 6 (exp -> exp LE exp .)
    LE              reduce using rule 6 (exp -> exp LE exp .)
    GE              reduce using rule 6 (exp -> exp LE exp .)
    NE              reduce using rule 6 (exp -> exp LE exp .)
    LT              reduce using rule 6 (exp -> exp LE exp .)
    GT              reduce using rule 6 (exp -> exp LE exp .)
    COMMA           reduce using rule 6 (exp -> exp LE exp .)
    LEKHA           reduce using rule 6 (exp -> exp LE exp .)
    RPARA           reduce using rule 6 (exp -> exp LE exp .)
    CHHA            reduce using rule 6 (exp -> exp LE exp .)
    CHHAINA         reduce using rule 6 (exp -> exp LE exp .)
    NEWLINE         reduce using rule 6 (exp -> exp LE exp .)
    DEKHI           reduce using rule 6 (exp -> exp LE exp .)
    SEMICOLON       reduce using rule 6 (exp -> exp LE exp .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 35
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 25
    POWER           shift and go to state 26

  ! PLUS            [ reduce using rule 6 (exp -> exp LE exp .) ]
  ! MINUS           [ reduce using rule 6 (exp -> exp LE exp .) ]
  ! TIMES           [ reduce using rule 6 (exp -> exp LE exp .) ]
  ! DIVIDE          [ reduce using rule 6 (exp -> exp LE exp .) ]
  ! POWER           [ reduce using rule 6 (exp -> exp LE exp .) ]
  ! EQ              [ shift and go to state 34 ]
  ! LE              [ shift and go to state 24 ]
  ! GE              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 27 ]
  ! GT              [ shift and go to state 30 ]


state 46

    (14) exp -> exp DIVIDE exp .
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

    BHAE            reduce using rule 14 (exp -> exp DIVIDE exp .)
    NABHAE          reduce using rule 14 (exp -> exp DIVIDE exp .)
    EQ              reduce using rule 14 (exp -> exp DIVIDE exp .)
    LE              reduce using rule 14 (exp -> exp DIVIDE exp .)
    GE              reduce using rule 14 (exp -> exp DIVIDE exp .)
    NE              reduce using rule 14 (exp -> exp DIVIDE exp .)
    LT              reduce using rule 14 (exp -> exp DIVIDE exp .)
    GT              reduce using rule 14 (exp -> exp DIVIDE exp .)
    PLUS            reduce using rule 14 (exp -> exp DIVIDE exp .)
    MINUS           reduce using rule 14 (exp -> exp DIVIDE exp .)
    TIMES           reduce using rule 14 (exp -> exp DIVIDE exp .)
    DIVIDE          reduce using rule 14 (exp -> exp DIVIDE exp .)
    POWER           reduce using rule 14 (exp -> exp DIVIDE exp .)
    COMMA           reduce using rule 14 (exp -> exp DIVIDE exp .)
    LEKHA           reduce using rule 14 (exp -> exp DIVIDE exp .)
    RPARA           reduce using rule 14 (exp -> exp DIVIDE exp .)
    CHHA            reduce using rule 14 (exp -> exp DIVIDE exp .)
    CHHAINA         reduce using rule 14 (exp -> exp DIVIDE exp .)
    NEWLINE         reduce using rule 14 (exp -> exp DIVIDE exp .)
    DEKHI           reduce using rule 14 (exp -> exp DIVIDE exp .)
    SEMICOLON       reduce using rule 14 (exp -> exp DIVIDE exp .)

  ! EQ              [ shift and go to state 34 ]
  ! LE              [ shift and go to state 24 ]
  ! GE              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 27 ]
  ! GT              [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 35 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 25 ]
  ! POWER           [ shift and go to state 26 ]


state 47

    (15) exp -> exp POWER exp .
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

    BHAE            reduce using rule 15 (exp -> exp POWER exp .)
    NABHAE          reduce using rule 15 (exp -> exp POWER exp .)
    EQ              reduce using rule 15 (exp -> exp POWER exp .)
    LE              reduce using rule 15 (exp -> exp POWER exp .)
    GE              reduce using rule 15 (exp -> exp POWER exp .)
    NE              reduce using rule 15 (exp -> exp POWER exp .)
    LT              reduce using rule 15 (exp -> exp POWER exp .)
    GT              reduce using rule 15 (exp -> exp POWER exp .)
    PLUS            reduce using rule 15 (exp -> exp POWER exp .)
    MINUS           reduce using rule 15 (exp -> exp POWER exp .)
    TIMES           reduce using rule 15 (exp -> exp POWER exp .)
    DIVIDE          reduce using rule 15 (exp -> exp POWER exp .)
    POWER           reduce using rule 15 (exp -> exp POWER exp .)
    COMMA           reduce using rule 15 (exp -> exp POWER exp .)
    LEKHA           reduce using rule 15 (exp -> exp POWER exp .)
    RPARA           reduce using rule 15 (exp -> exp POWER exp .)
    CHHA            reduce using rule 15 (exp -> exp POWER exp .)
    CHHAINA         reduce using rule 15 (exp -> exp POWER exp .)
    NEWLINE         reduce using rule 15 (exp -> exp POWER exp .)
    DEKHI           reduce using rule 15 (exp -> exp POWER exp .)
    SEMICOLON       reduce using rule 15 (exp -> exp POWER exp .)

  ! EQ              [ shift and go to state 34 ]
  ! LE              [ shift and go to state 24 ]
  ! GE              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 27 ]
  ! GT              [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 35 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 25 ]
  ! POWER           [ shift and go to state 26 ]


state 48

    (9) exp -> exp LT exp .
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

    BHAE            reduce using rule 9 (exp -> exp LT exp .)
    NABHAE          reduce using rule 9 (exp -> exp LT exp .)
    EQ              reduce using rule 9 (exp -> exp LT exp .)
    LE              reduce using rule 9 (exp -> exp LT exp .)
    GE              reduce using rule 9 (exp -> exp LT exp .)
    NE              reduce using rule 9 (exp -> exp LT exp .)
    LT              reduce using rule 9 (exp -> exp LT exp .)
    GT              reduce using rule 9 (exp -> exp LT exp .)
    COMMA           reduce using rule 9 (exp -> exp LT exp .)
    LEKHA           reduce using rule 9 (exp -> exp LT exp .)
    RPARA           reduce using rule 9 (exp -> exp LT exp .)
    CHHA            reduce using rule 9 (exp -> exp LT exp .)
    CHHAINA         reduce using rule 9 (exp -> exp LT exp .)
    NEWLINE         reduce using rule 9 (exp -> exp LT exp .)
    DEKHI           reduce using rule 9 (exp -> exp LT exp .)
    SEMICOLON       reduce using rule 9 (exp -> exp LT exp .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 35
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 25
    POWER           shift and go to state 26

  ! PLUS            [ reduce using rule 9 (exp -> exp LT exp .) ]
  ! MINUS           [ reduce using rule 9 (exp -> exp LT exp .) ]
  ! TIMES           [ reduce using rule 9 (exp -> exp LT exp .) ]
  ! DIVIDE          [ reduce using rule 9 (exp -> exp LT exp .) ]
  ! POWER           [ reduce using rule 9 (exp -> exp LT exp .) ]
  ! EQ              [ shift and go to state 34 ]
  ! LE              [ shift and go to state 24 ]
  ! GE              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 27 ]
  ! GT              [ shift and go to state 30 ]


state 49

    (8) exp -> exp NE exp .
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    BHAE            reduce using rule 8 (exp -> exp NE exp .)
    NABHAE          reduce using rule 8 (exp -> exp NE exp .)
    COMMA           reduce using rule 8 (exp -> exp NE exp .)
    LEKHA           reduce using rule 8 (exp -> exp NE exp .)
    RPARA           reduce using rule 8 (exp -> exp NE exp .)
    CHHA            reduce using rule 8 (exp -> exp NE exp .)
    CHHAINA         reduce using rule 8 (exp -> exp NE exp .)
    NEWLINE         reduce using rule 8 (exp -> exp NE exp .)
    DEKHI           reduce using rule 8 (exp -> exp NE exp .)
    SEMICOLON       reduce using rule 8 (exp -> exp NE exp .)
    EQ              shift and go to state 34
    LE              shift and go to state 24
    GE              shift and go to state 29
    NE              shift and go to state 28
    LT              shift and go to state 27
    GT              shift and go to state 30
    PLUS            shift and go to state 32
    MINUS           shift and go to state 35
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 25
    POWER           shift and go to state 26

  ! EQ              [ reduce using rule 8 (exp -> exp NE exp .) ]
  ! LE              [ reduce using rule 8 (exp -> exp NE exp .) ]
  ! GE              [ reduce using rule 8 (exp -> exp NE exp .) ]
  ! NE              [ reduce using rule 8 (exp -> exp NE exp .) ]
  ! LT              [ reduce using rule 8 (exp -> exp NE exp .) ]
  ! GT              [ reduce using rule 8 (exp -> exp NE exp .) ]
  ! PLUS            [ reduce using rule 8 (exp -> exp NE exp .) ]
  ! MINUS           [ reduce using rule 8 (exp -> exp NE exp .) ]
  ! TIMES           [ reduce using rule 8 (exp -> exp NE exp .) ]
  ! DIVIDE          [ reduce using rule 8 (exp -> exp NE exp .) ]
  ! POWER           [ reduce using rule 8 (exp -> exp NE exp .) ]


state 50

    (7) exp -> exp GE exp .
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

    BHAE            reduce using rule 7 (exp -> exp GE exp .)
    NABHAE          reduce using rule 7 (exp -> exp GE exp .)
    EQ              reduce using rule 7 (exp -> exp GE exp .)
    LE              reduce using rule 7 (exp -> exp GE exp .)
    GE              reduce using rule 7 (exp -> exp GE exp .)
    NE              reduce using rule 7 (exp -> exp GE exp .)
    LT              reduce using rule 7 (exp -> exp GE exp .)
    GT              reduce using rule 7 (exp -> exp GE exp .)
    COMMA           reduce using rule 7 (exp -> exp GE exp .)
    LEKHA           reduce using rule 7 (exp -> exp GE exp .)
    RPARA           reduce using rule 7 (exp -> exp GE exp .)
    CHHA            reduce using rule 7 (exp -> exp GE exp .)
    CHHAINA         reduce using rule 7 (exp -> exp GE exp .)
    NEWLINE         reduce using rule 7 (exp -> exp GE exp .)
    DEKHI           reduce using rule 7 (exp -> exp GE exp .)
    SEMICOLON       reduce using rule 7 (exp -> exp GE exp .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 35
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 25
    POWER           shift and go to state 26

  ! PLUS            [ reduce using rule 7 (exp -> exp GE exp .) ]
  ! MINUS           [ reduce using rule 7 (exp -> exp GE exp .) ]
  ! TIMES           [ reduce using rule 7 (exp -> exp GE exp .) ]
  ! DIVIDE          [ reduce using rule 7 (exp -> exp GE exp .) ]
  ! POWER           [ reduce using rule 7 (exp -> exp GE exp .) ]
  ! EQ              [ shift and go to state 34 ]
  ! LE              [ shift and go to state 24 ]
  ! GE              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 27 ]
  ! GT              [ shift and go to state 30 ]


state 51

    (10) exp -> exp GT exp .
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

    BHAE            reduce using rule 10 (exp -> exp GT exp .)
    NABHAE          reduce using rule 10 (exp -> exp GT exp .)
    EQ              reduce using rule 10 (exp -> exp GT exp .)
    LE              reduce using rule 10 (exp -> exp GT exp .)
    GE              reduce using rule 10 (exp -> exp GT exp .)
    NE              reduce using rule 10 (exp -> exp GT exp .)
    LT              reduce using rule 10 (exp -> exp GT exp .)
    GT              reduce using rule 10 (exp -> exp GT exp .)
    COMMA           reduce using rule 10 (exp -> exp GT exp .)
    LEKHA           reduce using rule 10 (exp -> exp GT exp .)
    RPARA           reduce using rule 10 (exp -> exp GT exp .)
    CHHA            reduce using rule 10 (exp -> exp GT exp .)
    CHHAINA         reduce using rule 10 (exp -> exp GT exp .)
    NEWLINE         reduce using rule 10 (exp -> exp GT exp .)
    DEKHI           reduce using rule 10 (exp -> exp GT exp .)
    SEMICOLON       reduce using rule 10 (exp -> exp GT exp .)
    PLUS            shift and go to state 32
    MINUS           shift and go to state 35
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 25
    POWER           shift and go to state 26

  ! PLUS            [ reduce using rule 10 (exp -> exp GT exp .) ]
  ! MINUS           [ reduce using rule 10 (exp -> exp GT exp .) ]
  ! TIMES           [ reduce using rule 10 (exp -> exp GT exp .) ]
  ! DIVIDE          [ reduce using rule 10 (exp -> exp GT exp .) ]
  ! POWER           [ reduce using rule 10 (exp -> exp GT exp .) ]
  ! EQ              [ shift and go to state 34 ]
  ! LE              [ shift and go to state 24 ]
  ! GE              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 27 ]
  ! GT              [ shift and go to state 30 ]


state 52

    (21) dynamString -> exp COMMA dynamString .

    LEKHA           reduce using rule 21 (dynamString -> exp COMMA dynamString .)


state 53

    (11) exp -> exp PLUS exp .
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

    BHAE            reduce using rule 11 (exp -> exp PLUS exp .)
    NABHAE          reduce using rule 11 (exp -> exp PLUS exp .)
    EQ              reduce using rule 11 (exp -> exp PLUS exp .)
    LE              reduce using rule 11 (exp -> exp PLUS exp .)
    GE              reduce using rule 11 (exp -> exp PLUS exp .)
    NE              reduce using rule 11 (exp -> exp PLUS exp .)
    LT              reduce using rule 11 (exp -> exp PLUS exp .)
    GT              reduce using rule 11 (exp -> exp PLUS exp .)
    PLUS            reduce using rule 11 (exp -> exp PLUS exp .)
    MINUS           reduce using rule 11 (exp -> exp PLUS exp .)
    COMMA           reduce using rule 11 (exp -> exp PLUS exp .)
    LEKHA           reduce using rule 11 (exp -> exp PLUS exp .)
    RPARA           reduce using rule 11 (exp -> exp PLUS exp .)
    CHHA            reduce using rule 11 (exp -> exp PLUS exp .)
    CHHAINA         reduce using rule 11 (exp -> exp PLUS exp .)
    NEWLINE         reduce using rule 11 (exp -> exp PLUS exp .)
    DEKHI           reduce using rule 11 (exp -> exp PLUS exp .)
    SEMICOLON       reduce using rule 11 (exp -> exp PLUS exp .)
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 25
    POWER           shift and go to state 26

  ! TIMES           [ reduce using rule 11 (exp -> exp PLUS exp .) ]
  ! DIVIDE          [ reduce using rule 11 (exp -> exp PLUS exp .) ]
  ! POWER           [ reduce using rule 11 (exp -> exp PLUS exp .) ]
  ! EQ              [ shift and go to state 34 ]
  ! LE              [ shift and go to state 24 ]
  ! GE              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 27 ]
  ! GT              [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 35 ]


state 54

    (13) exp -> exp TIMES exp .
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

    BHAE            reduce using rule 13 (exp -> exp TIMES exp .)
    NABHAE          reduce using rule 13 (exp -> exp TIMES exp .)
    EQ              reduce using rule 13 (exp -> exp TIMES exp .)
    LE              reduce using rule 13 (exp -> exp TIMES exp .)
    GE              reduce using rule 13 (exp -> exp TIMES exp .)
    NE              reduce using rule 13 (exp -> exp TIMES exp .)
    LT              reduce using rule 13 (exp -> exp TIMES exp .)
    GT              reduce using rule 13 (exp -> exp TIMES exp .)
    PLUS            reduce using rule 13 (exp -> exp TIMES exp .)
    MINUS           reduce using rule 13 (exp -> exp TIMES exp .)
    TIMES           reduce using rule 13 (exp -> exp TIMES exp .)
    DIVIDE          reduce using rule 13 (exp -> exp TIMES exp .)
    POWER           reduce using rule 13 (exp -> exp TIMES exp .)
    COMMA           reduce using rule 13 (exp -> exp TIMES exp .)
    LEKHA           reduce using rule 13 (exp -> exp TIMES exp .)
    RPARA           reduce using rule 13 (exp -> exp TIMES exp .)
    CHHA            reduce using rule 13 (exp -> exp TIMES exp .)
    CHHAINA         reduce using rule 13 (exp -> exp TIMES exp .)
    NEWLINE         reduce using rule 13 (exp -> exp TIMES exp .)
    DEKHI           reduce using rule 13 (exp -> exp TIMES exp .)
    SEMICOLON       reduce using rule 13 (exp -> exp TIMES exp .)

  ! EQ              [ shift and go to state 34 ]
  ! LE              [ shift and go to state 24 ]
  ! GE              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 27 ]
  ! GT              [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 35 ]
  ! TIMES           [ shift and go to state 33 ]
  ! DIVIDE          [ shift and go to state 25 ]
  ! POWER           [ shift and go to state 26 ]


state 55

    (5) exp -> exp EQ exp .
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

    BHAE            reduce using rule 5 (exp -> exp EQ exp .)
    NABHAE          reduce using rule 5 (exp -> exp EQ exp .)
    EQ              reduce using rule 5 (exp -> exp EQ exp .)
    NE              reduce using rule 5 (exp -> exp EQ exp .)
    COMMA           reduce using rule 5 (exp -> exp EQ exp .)
    LEKHA           reduce using rule 5 (exp -> exp EQ exp .)
    RPARA           reduce using rule 5 (exp -> exp EQ exp .)
    CHHA            reduce using rule 5 (exp -> exp EQ exp .)
    CHHAINA         reduce using rule 5 (exp -> exp EQ exp .)
    NEWLINE         reduce using rule 5 (exp -> exp EQ exp .)
    DEKHI           reduce using rule 5 (exp -> exp EQ exp .)
    SEMICOLON       reduce using rule 5 (exp -> exp EQ exp .)
    LE              shift and go to state 24
    GE              shift and go to state 29
    LT              shift and go to state 27
    GT              shift and go to state 30
    PLUS            shift and go to state 32
    MINUS           shift and go to state 35
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 25
    POWER           shift and go to state 26

  ! LE              [ reduce using rule 5 (exp -> exp EQ exp .) ]
  ! GE              [ reduce using rule 5 (exp -> exp EQ exp .) ]
  ! LT              [ reduce using rule 5 (exp -> exp EQ exp .) ]
  ! GT              [ reduce using rule 5 (exp -> exp EQ exp .) ]
  ! PLUS            [ reduce using rule 5 (exp -> exp EQ exp .) ]
  ! MINUS           [ reduce using rule 5 (exp -> exp EQ exp .) ]
  ! TIMES           [ reduce using rule 5 (exp -> exp EQ exp .) ]
  ! DIVIDE          [ reduce using rule 5 (exp -> exp EQ exp .) ]
  ! POWER           [ reduce using rule 5 (exp -> exp EQ exp .) ]
  ! EQ              [ shift and go to state 34 ]
  ! NE              [ shift and go to state 28 ]


state 56

    (12) exp -> exp MINUS exp .
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

    BHAE            reduce using rule 12 (exp -> exp MINUS exp .)
    NABHAE          reduce using rule 12 (exp -> exp MINUS exp .)
    EQ              reduce using rule 12 (exp -> exp MINUS exp .)
    LE              reduce using rule 12 (exp -> exp MINUS exp .)
    GE              reduce using rule 12 (exp -> exp MINUS exp .)
    NE              reduce using rule 12 (exp -> exp MINUS exp .)
    LT              reduce using rule 12 (exp -> exp MINUS exp .)
    GT              reduce using rule 12 (exp -> exp MINUS exp .)
    PLUS            reduce using rule 12 (exp -> exp MINUS exp .)
    MINUS           reduce using rule 12 (exp -> exp MINUS exp .)
    COMMA           reduce using rule 12 (exp -> exp MINUS exp .)
    LEKHA           reduce using rule 12 (exp -> exp MINUS exp .)
    RPARA           reduce using rule 12 (exp -> exp MINUS exp .)
    CHHA            reduce using rule 12 (exp -> exp MINUS exp .)
    CHHAINA         reduce using rule 12 (exp -> exp MINUS exp .)
    NEWLINE         reduce using rule 12 (exp -> exp MINUS exp .)
    DEKHI           reduce using rule 12 (exp -> exp MINUS exp .)
    SEMICOLON       reduce using rule 12 (exp -> exp MINUS exp .)
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 25
    POWER           shift and go to state 26

  ! TIMES           [ reduce using rule 12 (exp -> exp MINUS exp .) ]
  ! DIVIDE          [ reduce using rule 12 (exp -> exp MINUS exp .) ]
  ! POWER           [ reduce using rule 12 (exp -> exp MINUS exp .) ]
  ! EQ              [ shift and go to state 34 ]
  ! LE              [ shift and go to state 24 ]
  ! GE              [ shift and go to state 29 ]
  ! NE              [ shift and go to state 28 ]
  ! LT              [ shift and go to state 27 ]
  ! GT              [ shift and go to state 30 ]
  ! PLUS            [ shift and go to state 32 ]
  ! MINUS           [ shift and go to state 35 ]


state 57

    (28) cmpdstmt -> stmt . NEWLINE cmpdstmt

    NEWLINE         shift and go to state 65


state 58

    (24) stmt -> YEDI condition NEWLINE cmpdstmt . DIYE

    DIYE            shift and go to state 66


state 59

    (25) condition -> condition RA condition .
    (25) condition -> condition . RA condition

  ! shift/reduce conflict for RA resolved as shift
    NEWLINE         reduce using rule 25 (condition -> condition RA condition .)
    RA              shift and go to state 37

  ! RA              [ reduce using rule 25 (condition -> condition RA condition .) ]


state 60

    (33) stmt -> JABA SAMMA whilecond NEWLINE . cmpdstmt BAJA
    (28) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (29) cmpdstmt -> .
    (4) stmt -> . IDENTIFIER ASSIGNMENT exp
    (20) stmt -> . dynamString LEKHA
    (23) stmt -> . IDENTIFIER LEU
    (24) stmt -> . YEDI condition NEWLINE cmpdstmt DIYE
    (30) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (33) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (21) dynamString -> . exp COMMA dynamString
    (22) dynamString -> . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    BAJA            reduce using rule 29 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    stmt                           shift and go to state 57
    dynamString                    shift and go to state 10
    cmpdstmt                       shift and go to state 67
    exp                            shift and go to state 12

state 61

    (34) whilecond -> whilecond RA . whilecond
    (34) whilecond -> . whilecond RA whilecond
    (35) whilecond -> . exp CHHA
    (36) whilecond -> . exp CHHAINA
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 42
    whilecond                      shift and go to state 68

state 62

    (35) whilecond -> exp CHHA .

    NEWLINE         reduce using rule 35 (whilecond -> exp CHHA .)
    RA              reduce using rule 35 (whilecond -> exp CHHA .)


state 63

    (36) whilecond -> exp CHHAINA .

    NEWLINE         reduce using rule 36 (whilecond -> exp CHHAINA .)
    RA              reduce using rule 36 (whilecond -> exp CHHAINA .)


state 64

    (30) stmt -> SABEI IDENTIFIER ASSIGNMENT exp . DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

    DEKHI           shift and go to state 69
    EQ              shift and go to state 34
    LE              shift and go to state 24
    GE              shift and go to state 29
    NE              shift and go to state 28
    LT              shift and go to state 27
    GT              shift and go to state 30
    PLUS            shift and go to state 32
    MINUS           shift and go to state 35
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 25
    POWER           shift and go to state 26


state 65

    (28) cmpdstmt -> stmt NEWLINE . cmpdstmt
    (28) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (29) cmpdstmt -> .
    (4) stmt -> . IDENTIFIER ASSIGNMENT exp
    (20) stmt -> . dynamString LEKHA
    (23) stmt -> . IDENTIFIER LEU
    (24) stmt -> . YEDI condition NEWLINE cmpdstmt DIYE
    (30) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (33) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (21) dynamString -> . exp COMMA dynamString
    (22) dynamString -> . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    DIYE            reduce using rule 29 (cmpdstmt -> .)
    BAJA            reduce using rule 29 (cmpdstmt -> .)
    BAISA           reduce using rule 29 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    stmt                           shift and go to state 57
    cmpdstmt                       shift and go to state 70
    exp                            shift and go to state 12
    dynamString                    shift and go to state 10

state 66

    (24) stmt -> YEDI condition NEWLINE cmpdstmt DIYE .

    NEWLINE         reduce using rule 24 (stmt -> YEDI condition NEWLINE cmpdstmt DIYE .)


state 67

    (33) stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt . BAJA

    BAJA            shift and go to state 71


state 68

    (34) whilecond -> whilecond RA whilecond .
    (34) whilecond -> whilecond . RA whilecond

  ! shift/reduce conflict for RA resolved as shift
    NEWLINE         reduce using rule 34 (whilecond -> whilecond RA whilecond .)
    RA              shift and go to state 61

  ! RA              [ reduce using rule 34 (whilecond -> whilecond RA whilecond .) ]


state 69

    (30) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI . exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 72

state 70

    (28) cmpdstmt -> stmt NEWLINE cmpdstmt .

    BAJA            reduce using rule 28 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    DIYE            reduce using rule 28 (cmpdstmt -> stmt NEWLINE cmpdstmt .)
    BAISA           reduce using rule 28 (cmpdstmt -> stmt NEWLINE cmpdstmt .)


state 71

    (33) stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .

    NEWLINE         reduce using rule 33 (stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA .)


state 72

    (30) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp . SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

    SEMICOLON       shift and go to state 73
    EQ              shift and go to state 34
    LE              shift and go to state 24
    GE              shift and go to state 29
    NE              shift and go to state 28
    LT              shift and go to state 27
    GT              shift and go to state 30
    PLUS            shift and go to state 32
    MINUS           shift and go to state 35
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 25
    POWER           shift and go to state 26


state 73

    (30) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON . sign exp NEWLINE cmpdstmt BAISA
    (31) sign -> . PLUS
    (32) sign -> . MINUS

    PLUS            shift and go to state 75
    MINUS           shift and go to state 76

    sign                           shift and go to state 74

state 74

    (30) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign . exp NEWLINE cmpdstmt BAISA
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    IDENTIFIER      shift and go to state 13
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    exp                            shift and go to state 77

state 75

    (31) sign -> PLUS .

    IDENTIFIER      reduce using rule 31 (sign -> PLUS .)
    STRING          reduce using rule 31 (sign -> PLUS .)
    NUMBER          reduce using rule 31 (sign -> PLUS .)
    LPARA           reduce using rule 31 (sign -> PLUS .)


state 76

    (32) sign -> MINUS .

    IDENTIFIER      reduce using rule 32 (sign -> MINUS .)
    STRING          reduce using rule 32 (sign -> MINUS .)
    NUMBER          reduce using rule 32 (sign -> MINUS .)
    LPARA           reduce using rule 32 (sign -> MINUS .)


state 77

    (30) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp . NEWLINE cmpdstmt BAISA
    (5) exp -> exp . EQ exp
    (6) exp -> exp . LE exp
    (7) exp -> exp . GE exp
    (8) exp -> exp . NE exp
    (9) exp -> exp . LT exp
    (10) exp -> exp . GT exp
    (11) exp -> exp . PLUS exp
    (12) exp -> exp . MINUS exp
    (13) exp -> exp . TIMES exp
    (14) exp -> exp . DIVIDE exp
    (15) exp -> exp . POWER exp

    NEWLINE         shift and go to state 78
    EQ              shift and go to state 34
    LE              shift and go to state 24
    GE              shift and go to state 29
    NE              shift and go to state 28
    LT              shift and go to state 27
    GT              shift and go to state 30
    PLUS            shift and go to state 32
    MINUS           shift and go to state 35
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 25
    POWER           shift and go to state 26


state 78

    (30) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE . cmpdstmt BAISA
    (28) cmpdstmt -> . stmt NEWLINE cmpdstmt
    (29) cmpdstmt -> .
    (4) stmt -> . IDENTIFIER ASSIGNMENT exp
    (20) stmt -> . dynamString LEKHA
    (23) stmt -> . IDENTIFIER LEU
    (24) stmt -> . YEDI condition NEWLINE cmpdstmt DIYE
    (30) stmt -> . SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA
    (33) stmt -> . JABA SAMMA whilecond NEWLINE cmpdstmt BAJA
    (21) dynamString -> . exp COMMA dynamString
    (22) dynamString -> . exp
    (5) exp -> . exp EQ exp
    (6) exp -> . exp LE exp
    (7) exp -> . exp GE exp
    (8) exp -> . exp NE exp
    (9) exp -> . exp LT exp
    (10) exp -> . exp GT exp
    (11) exp -> . exp PLUS exp
    (12) exp -> . exp MINUS exp
    (13) exp -> . exp TIMES exp
    (14) exp -> . exp DIVIDE exp
    (15) exp -> . exp POWER exp
    (16) exp -> . IDENTIFIER
    (17) exp -> . STRING
    (18) exp -> . NUMBER
    (19) exp -> . LPARA exp RPARA

    BAISA           reduce using rule 29 (cmpdstmt -> .)
    IDENTIFIER      shift and go to state 6
    YEDI            shift and go to state 1
    SABEI           shift and go to state 7
    JABA            shift and go to state 4
    STRING          shift and go to state 5
    NUMBER          shift and go to state 3
    LPARA           shift and go to state 2

    stmt                           shift and go to state 57
    dynamString                    shift and go to state 10
    cmpdstmt                       shift and go to state 79
    exp                            shift and go to state 12

state 79

    (30) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt . BAISA

    BAISA           shift and go to state 80


state 80

    (30) stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .

    NEWLINE         reduce using rule 30 (stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQ in state 49 resolved as shift
WARNING: shift/reduce conflict for LE in state 49 resolved as shift
WARNING: shift/reduce conflict for GE in state 49 resolved as shift
WARNING: shift/reduce conflict for NE in state 49 resolved as shift
WARNING: shift/reduce conflict for LT in state 49 resolved as shift
WARNING: shift/reduce conflict for GT in state 49 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 49 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 49 resolved as shift
WARNING: shift/reduce conflict for POWER in state 49 resolved as shift
WARNING: shift/reduce conflict for RA in state 59 resolved as shift
WARNING: shift/reduce conflict for RA in state 68 resolved as shift
