
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xc5c=\x9c\x13W\x011\xad\x9eL{<m2\xe0'
    
_lr_action_items = {'DIVIDE':([11,13,16,18,19,21,22,24,25,27,66,75,79,81,84,88,89,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,123,126,127,130,131,132,136,143,146,158,159,161,164,166,174,],[42,-54,-56,51,-53,-52,51,51,51,-55,-57,-59,51,51,51,-52,51,51,-47,-48,51,51,51,51,51,51,51,51,-46,51,51,51,42,-64,51,51,-58,-64,51,51,-57,-60,51,51,51,51,51,]),'LGPARA':([0,1,2,3,9,11,21,30,32,35,36,38,41,45,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,83,86,88,90,114,117,118,119,122,129,133,135,144,149,152,154,155,160,163,168,171,176,],[1,1,1,1,1,32,67,1,1,83,1,-77,-76,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,67,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'HATAU':([11,],[33,]),'BATA':([11,],[34,]),'YEDI':([0,9,49,71,118,133,152,155,163,168,176,],[2,2,2,2,2,2,2,2,2,2,2,]),'ASSIGNMENT':([11,31,38,40,41,42,44,48,123,145,],[35,-79,-77,86,-76,-80,-78,90,144,160,]),'LPARA':([0,1,2,3,9,11,21,28,30,32,35,36,38,41,45,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,83,86,88,90,114,117,118,119,122,129,133,135,144,149,152,154,155,160,163,168,171,176,],[3,3,3,3,3,36,68,77,3,3,3,3,-77,-76,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,68,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'NUMBER':([0,1,2,3,5,9,30,32,35,36,38,41,45,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,83,86,90,114,117,118,119,122,129,133,135,144,149,152,154,155,160,163,168,171,176,],[13,13,13,13,27,13,13,13,13,13,-77,-76,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'JABA':([0,9,49,71,118,133,152,155,163,168,176,],[10,10,10,10,10,10,10,10,10,10,10,]),'COLON':([13,16,19,21,27,32,66,67,75,80,81,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,131,132,136,158,164,],[-54,-56,-53,-52,-55,-62,-57,-62,-59,122,-61,-39,-47,-48,-49,-42,-41,-40,-43,-50,-44,-51,-46,-38,-45,-61,-58,-64,154,-60,-63,]),'LEKHA':([4,11,13,16,18,19,21,27,66,75,87,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,123,126,131,132,158,164,],[26,-52,-54,-56,-66,-53,-52,-55,-57,-59,128,-52,-66,-39,-47,-48,-49,-42,-41,-40,-43,-65,-50,-44,-51,-46,-38,-45,-58,-64,-58,-64,-60,-63,]),'NABHAE':([13,16,19,21,24,27,66,75,92,93,94,95,96,97,98,99,101,102,103,104,105,106,131,132,158,164,],[-54,-56,-53,-52,74,-55,-57,-59,-39,-47,-48,-49,-42,-41,-40,-43,-50,-44,-51,-46,-38,-45,-58,-64,-60,-63,]),'CHHAINA':([13,16,19,21,27,66,75,79,92,93,94,95,96,97,98,99,101,102,103,104,105,106,131,132,158,164,],[-54,-56,-53,-52,-55,-57,-59,121,-39,-47,-48,-49,-42,-41,-40,-43,-50,-44,-51,-46,-38,-45,-58,-64,-60,-63,]),'BANDAGARA':([11,],[37,]),'RGPARA':([1,13,16,19,20,21,22,27,66,69,75,81,83,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,109,122,125,131,132,142,143,158,164,],[-37,-54,-56,-53,66,-52,-36,-55,-57,-37,-59,123,-37,-39,-47,-48,-49,-42,-41,-40,-43,-50,-44,-51,-46,-38,-45,131,-35,-62,146,-58,-64,158,-61,-60,-63,]),'MINUS':([0,1,2,3,9,11,13,16,18,19,21,22,24,25,27,30,32,35,36,38,41,45,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,79,81,83,84,86,88,89,90,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,114,117,118,119,122,123,126,127,129,130,131,132,133,135,136,143,144,146,149,152,154,155,158,159,160,161,163,164,166,167,168,171,174,176,],[5,5,5,5,5,38,-54,-56,65,-53,-52,65,65,65,-55,5,5,5,5,-77,-76,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-57,5,5,5,5,5,5,-59,65,65,5,65,5,-52,65,5,65,-47,-48,65,65,65,65,65,65,-44,65,-46,65,-45,65,5,5,5,5,5,38,-64,65,5,65,-58,-64,5,5,65,65,5,-57,5,5,5,5,-60,65,5,65,5,65,65,38,5,5,65,5,]),'BAHIRA':([0,9,49,71,118,133,152,155,163,168,176,],[6,6,6,6,6,6,6,6,6,6,6,]),'BANAU':([11,],[39,]),'ARKO':([0,9,49,71,118,133,152,155,163,168,176,],[7,7,7,7,7,7,7,7,7,7,7,]),'DEKHI':([13,16,19,21,27,66,75,92,93,94,95,96,97,98,99,101,102,103,104,105,106,130,131,132,158,164,],[-54,-56,-53,-52,-55,-57,-59,-39,-47,-48,-49,-42,-41,-40,-43,-50,-44,-51,-46,-38,-45,149,-58,-64,-60,-63,]),'WA':([11,13,16,18,19,21,22,23,24,25,27,66,73,74,75,78,79,81,84,88,89,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,110,113,120,121,123,126,127,130,131,132,136,139,141,143,146,153,158,159,161,164,166,174,],[-52,-54,-56,62,-53,-52,62,70,62,62,-55,-57,-69,-70,-59,117,62,62,62,-52,62,-39,-47,-48,62,-42,62,-40,-43,62,-44,62,-46,-38,-45,62,70,70,-83,-84,-58,-64,62,62,-58,-64,62,117,117,62,-57,70,-60,62,62,62,62,62,]),'POWER':([11,13,16,18,19,21,22,24,25,27,66,75,79,81,84,88,89,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,123,126,127,130,131,132,136,143,146,158,159,161,164,166,174,],[-52,-54,-56,52,-53,-52,52,52,52,-55,-57,-59,52,52,52,-52,52,52,-47,-48,52,52,52,52,52,52,52,52,-46,52,52,52,-58,-64,52,52,-58,-64,52,52,-57,-60,52,52,52,52,52,]),'EQ':([11,13,16,18,19,21,22,24,25,27,66,75,79,81,84,88,89,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,123,126,127,130,131,132,136,143,146,158,159,161,164,166,174,],[-52,-54,-56,64,-53,-52,64,64,64,-55,-57,-59,64,64,64,-52,64,-39,-47,-48,64,-42,64,-40,-43,64,-44,64,-46,-38,-45,64,-58,-64,64,64,-58,-64,64,64,-57,-60,64,64,64,64,64,]),'KAAM':([0,9,49,71,118,133,152,155,163,168,176,],[8,8,8,8,8,8,8,8,8,8,8,]),'NEWLINE':([0,6,7,9,13,14,16,17,19,21,22,23,26,27,33,37,39,43,46,47,49,56,66,69,73,74,75,76,78,84,92,93,94,95,96,97,98,99,101,102,103,104,105,106,109,110,111,113,120,121,124,126,127,128,129,131,132,135,137,139,141,146,147,148,151,153,157,158,159,161,164,166,170,174,175,178,],[9,-9,-10,9,-54,-5,-56,49,-53,-52,-36,71,-7,-55,-16,-14,-17,-18,-15,-20,9,-30,-57,-37,-69,-70,-59,-8,118,-6,-39,-47,-48,-49,-42,-41,-40,-43,-50,-44,-51,-46,-38,-45,-35,-68,133,-67,-83,-84,-13,-29,-21,-12,-37,-58,-64,152,155,-82,-81,-27,-11,-19,-23,163,-26,-60,-31,168,-63,-22,-28,176,-25,-24,]),'QUESTION':([75,],[114,]),'NE':([11,13,16,18,19,21,22,24,25,27,66,75,79,81,84,88,89,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,123,126,127,130,131,132,136,143,146,158,159,161,164,166,174,],[-52,-54,-56,55,-53,-52,55,55,55,-55,-57,-59,55,55,55,-52,55,-39,-47,-48,55,-42,55,-40,-43,55,-44,55,-46,-38,-45,55,-58,-64,55,55,-58,-64,55,55,-57,-60,55,55,55,55,55,]),'DIYE':([71,112,133,134,150,152,162,163,169,173,],[-72,-75,-72,151,-71,-72,-74,-72,-75,-73,]),'LT':([11,13,16,18,19,21,22,24,25,27,66,75,79,81,84,88,89,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,123,126,127,130,131,132,136,143,146,158,159,161,164,166,174,],[-52,-54,-56,54,-53,-52,54,54,54,-55,-57,-59,54,54,54,-52,54,-39,-47,-48,54,-42,54,-40,-43,54,-44,54,-46,54,-45,54,-58,-64,54,54,-58,-64,54,54,-57,-60,54,54,54,54,54,]),'PLUS':([11,13,16,18,19,21,22,24,25,27,66,75,79,81,84,88,89,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,123,126,127,130,131,132,136,143,146,158,159,161,164,166,167,174,],[41,-54,-56,61,-53,-52,61,61,61,-55,-57,-59,61,61,61,-52,61,61,-47,-48,61,61,61,61,61,61,-44,61,-46,61,-45,61,41,-64,61,61,-58,-64,61,61,-57,-60,61,61,61,61,41,61,]),'RA':([11,13,16,18,19,21,22,23,24,25,27,66,73,74,75,78,79,81,84,88,89,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,110,113,120,121,123,126,127,130,131,132,136,139,141,143,146,153,158,159,161,164,166,174,],[-52,-54,-56,60,-53,-52,60,72,60,60,-55,-57,-69,-70,-59,119,60,60,60,-52,60,-39,-47,-48,60,-42,60,-40,-43,60,-44,60,-46,-38,-45,60,72,72,-83,-84,-58,-64,60,60,-58,-64,60,119,119,60,-57,72,-60,60,60,60,60,60,]),'COMMA':([11,13,16,18,19,21,22,27,66,75,88,89,92,93,94,95,96,97,98,99,101,102,103,104,105,106,116,123,126,131,132,158,164,],[-52,-54,-56,59,-53,-52,69,-55,-57,-59,-52,59,-39,-47,-48,-49,-42,-41,-40,-43,-50,-44,-51,-46,-38,-45,138,-58,-64,-58,-64,-60,-63,]),'IDENTIFIER':([0,1,2,3,8,9,12,30,32,34,35,36,38,41,45,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,77,83,86,90,114,117,118,119,122,129,133,135,138,144,149,152,154,155,160,163,168,171,176,],[11,21,21,21,28,11,48,21,21,82,21,21,-77,-76,88,11,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,11,21,116,21,21,21,21,21,11,21,21,21,11,21,116,21,21,11,21,11,21,11,11,21,11,]),'KORA':([88,],[129,]),'SABEI':([0,9,49,71,118,133,152,155,163,168,176,],[12,12,12,12,12,12,12,12,12,12,12,]),'$end':([0,6,7,9,13,14,15,16,17,19,21,22,26,27,29,33,37,39,43,46,47,49,56,66,69,75,76,84,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,109,124,126,127,128,129,131,132,146,147,148,151,157,158,159,164,166,170,175,178,],[-4,-9,-10,-4,-54,-5,0,-56,-3,-53,-52,-36,-7,-55,-2,-16,-14,-17,-18,-15,-20,-4,-30,-57,-37,-59,-8,-6,-1,-39,-47,-48,-49,-42,-41,-40,-43,-50,-44,-51,-46,-38,-45,-35,-13,-29,-21,-12,-37,-58,-64,-27,-11,-19,-23,-26,-60,-31,-63,-22,-28,-25,-24,]),'BHAE':([13,16,19,21,24,27,66,75,92,93,94,95,96,97,98,99,101,102,103,104,105,106,131,132,158,164,],[-54,-56,-53,-52,73,-55,-57,-59,-39,-47,-48,-49,-42,-41,-40,-43,-50,-44,-51,-46,-38,-45,-58,-64,-60,-63,]),'GT':([11,13,16,18,19,21,22,24,25,27,66,75,79,81,84,88,89,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,123,126,127,130,131,132,136,143,146,158,159,161,164,166,174,],[-52,-54,-56,58,-53,-52,58,58,58,-55,-57,-59,58,58,58,-52,58,-39,-47,-48,58,-42,58,-40,-43,58,-44,58,-46,58,-45,58,-58,-64,58,58,-58,-64,58,58,-57,-60,58,58,58,58,58,]),'STRING':([0,1,2,3,9,30,32,35,36,38,41,45,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,83,86,90,114,117,118,119,122,129,133,135,144,149,152,154,155,160,163,168,171,176,],[19,19,19,19,19,19,19,19,19,-77,-76,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'TIMES':([11,13,16,18,19,21,22,24,25,27,66,75,79,81,84,88,89,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,123,126,127,130,131,132,136,143,146,158,159,161,164,166,174,],[31,-54,-56,63,-53,-52,63,63,63,-55,-57,-59,63,63,63,-52,63,63,-47,-48,63,63,63,63,63,63,63,63,-46,63,63,63,31,-64,63,63,-58,-64,63,63,-57,-60,63,63,63,63,63,]),'SUNYA':([0,1,2,3,9,30,32,35,36,38,41,45,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,83,86,90,114,117,118,119,122,129,133,135,144,149,152,154,155,160,163,168,171,176,],[16,16,16,16,16,16,16,16,16,-77,-76,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'GE':([11,13,16,18,19,21,22,24,25,27,66,75,79,81,84,88,89,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,123,126,127,130,131,132,136,143,146,158,159,161,164,166,174,],[-52,-54,-56,57,-53,-52,57,57,57,-55,-57,-59,57,57,57,-52,57,-39,-47,-48,57,-42,57,-40,-43,57,-44,57,-46,57,-45,57,-58,-64,57,57,-58,-64,57,57,-57,-60,57,57,57,57,57,]),'LE':([11,13,16,18,19,21,22,24,25,27,66,75,79,81,84,88,89,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,123,126,127,130,131,132,136,143,146,158,159,161,164,166,174,],[-52,-54,-56,50,-53,-52,50,50,50,-55,-57,-59,50,50,50,-52,50,-39,-47,-48,50,-42,50,-40,-43,50,-44,50,-46,50,-45,50,-58,-64,50,50,-58,-64,50,50,-57,-60,50,50,50,50,50,]),'METAU':([11,],[43,]),'BAJA':([118,133,140,150,],[-72,-72,157,-71,]),'CHHA':([13,16,19,21,27,66,75,79,92,93,94,95,96,97,98,99,101,102,103,104,105,106,131,132,158,164,],[-54,-56,-53,-52,-55,-57,-59,120,-39,-47,-48,-49,-42,-41,-40,-43,-50,-44,-51,-46,-38,-45,-58,-64,-60,-63,]),'MODULUS':([11,13,16,18,19,21,22,24,25,27,66,75,79,81,84,88,89,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,123,126,127,130,131,132,136,143,146,158,159,161,164,166,174,],[-52,-54,-56,53,-53,-52,53,53,53,-55,-57,-59,53,53,53,-52,53,-39,-47,-48,53,-42,53,-40,-43,53,-44,53,-46,-38,-45,53,-58,-64,53,53,-58,-64,53,53,-57,-60,53,53,53,53,53,]),'RPARA':([13,16,19,21,22,25,27,36,66,68,69,75,77,85,92,93,94,95,96,97,98,99,101,102,103,104,105,106,108,109,115,116,131,132,138,156,158,164,],[-54,-56,-53,-52,-36,75,-55,-37,-57,-37,-37,-59,-34,126,-39,-47,-48,-49,-42,-41,-40,-43,-50,-44,-51,-46,-38,-45,132,-35,137,-33,-58,-64,-34,-32,-60,-63,]),'SAMMA':([10,],[30,]),'MA':([11,],[45,]),'SEMICOLON':([13,16,19,21,26,27,66,75,92,93,94,95,96,97,98,99,101,102,103,104,105,106,128,131,132,158,161,164,],[-54,-56,-53,-52,76,-55,-57,-59,-39,-47,-48,-49,-42,-41,-40,-43,-50,-44,-51,-46,-38,-45,147,-58,-64,-60,167,-63,]),'PATHAU':([11,13,16,18,19,21,27,66,75,92,93,94,95,96,97,98,99,101,102,103,104,105,106,123,126,131,132,158,164,],[-52,-54,-56,56,-53,-52,-55,-57,-59,-39,-47,-48,-49,-42,-41,-40,-43,-50,-44,-51,-46,-38,-45,-58,-64,-58,-64,-60,-63,]),'DEKHAU':([11,],[46,]),'MAKA':([133,150,155,165,],[-72,-71,-72,170,]),'ATHAWA':([71,112,133,150,163,169,],[-72,135,-72,-71,-72,135,]),'LEU':([11,82,],[47,124,]),'BAISA':([133,150,168,172,176,177,],[-72,-71,-72,175,-72,178,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'optelse':([112,169,],[134,173,]),'whilecond':([30,117,119,],[78,139,141,]),'sliceexp':([32,67,122,],[80,80,142,]),'incrementsign':([11,123,],[40,145,]),'sign':([11,123,167,],[44,44,171,]),'variableexp':([1,36,68,69,83,129,],[20,85,108,109,125,148,]),'dynamString':([0,9,45,49,59,71,118,133,152,155,163,168,176,],[4,4,87,4,100,4,4,4,4,4,4,4,4,]),'cmpdstmt':([71,118,133,152,155,163,168,176,],[112,140,150,162,165,169,172,177,]),'variableArgs':([77,138,],[115,156,]),'stmt':([0,9,49,71,118,133,152,155,163,168,176,],[14,14,14,111,111,111,111,111,111,111,111,]),'exp':([0,1,2,3,9,30,32,35,36,45,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,83,86,90,114,117,118,119,122,129,133,135,144,149,152,154,155,160,163,168,171,176,],[18,22,24,25,18,79,81,84,22,89,18,92,93,94,95,96,97,98,99,89,101,102,103,104,105,106,107,22,22,24,18,24,22,127,130,136,79,18,79,143,22,18,24,159,161,18,164,18,166,18,18,174,18,]),'element':([0,9,49,],[17,17,17,]),'N':([0,9,49,],[15,29,91,]),'condition':([2,70,72,135,],[23,110,113,153,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> N","S'",1,None,None,None),
  ('N -> element NEWLINE N','N',3,'p_N','D:\\rhee\\NepParser.py',17),
  ('N -> NEWLINE N','N',2,'p_N_newline','D:\\rhee\\NepParser.py',23),
  ('N -> element','N',1,'p_N_lastone','D:\\rhee\\NepParser.py',26),
  ('N -> <empty>','N',0,'p_N_empty','D:\\rhee\\NepParser.py',29),
  ('element -> stmt','element',1,'p_element_stmt','D:\\rhee\\NepParser.py',35),
  ('stmt -> IDENTIFIER ASSIGNMENT exp','stmt',3,'p_stmt_assign','D:\\rhee\\NepParser.py',39),
  ('stmt -> dynamString LEKHA','stmt',2,'p_stmt_withoutCommaNewline','D:\\rhee\\NepParser.py',48),
  ('stmt -> dynamString LEKHA SEMICOLON','stmt',3,'p_stmt_WOCommaSameline','D:\\rhee\\NepParser.py',56),
  ('stmt -> BAHIRA','stmt',1,'p_stmt_break','D:\\rhee\\NepParser.py',64),
  ('stmt -> ARKO','stmt',1,'p_stmt_continue','D:\\rhee\\NepParser.py',68),
  ('stmt -> IDENTIFIER MA dynamString LEKHA SEMICOLON','stmt',5,'p_stmt_filewritewithnewline','D:\\rhee\\NepParser.py',72),
  ('stmt -> IDENTIFIER MA dynamString LEKHA','stmt',4,'p_stmt_filewrite','D:\\rhee\\NepParser.py',76),
  ('stmt -> IDENTIFIER BATA IDENTIFIER LEU','stmt',4,'p_stmt_fileread','D:\\rhee\\NepParser.py',80),
  ('stmt -> IDENTIFIER BANDAGARA','stmt',2,'p_stmt_fileclose','D:\\rhee\\NepParser.py',84),
  ('stmt -> IDENTIFIER DEKHAU','stmt',2,'p_stmt_graphicshow','D:\\rhee\\NepParser.py',88),
  ('stmt -> IDENTIFIER HATAU','stmt',2,'p_stmt_graphichide','D:\\rhee\\NepParser.py',96),
  ('stmt -> IDENTIFIER BANAU','stmt',2,'p_stmt_graphicupdate','D:\\rhee\\NepParser.py',100),
  ('stmt -> IDENTIFIER METAU','stmt',2,'p_stmt_graphiclear','D:\\rhee\\NepParser.py',104),
  ('stmt -> IDENTIFIER MA IDENTIFIER KORA variableexp','stmt',5,'p_stmt_graphicdraw','D:\\rhee\\NepParser.py',109),
  ('stmt -> IDENTIFIER LEU','stmt',2,'p_stmt_input','D:\\rhee\\NepParser.py',114),
  ('stmt -> IDENTIFIER incrementsign ASSIGNMENT exp','stmt',4,'p_stmt_increment','D:\\rhee\\NepParser.py',118),
  ('stmt -> IDENTIFIER LGPARA exp RGPARA incrementsign ASSIGNMENT exp','stmt',7,'p_stmt_incrementarray','D:\\rhee\\NepParser.py',122),
  ('stmt -> YEDI condition NEWLINE cmpdstmt optelse DIYE','stmt',6,'p_stmt_ifcondition','D:\\rhee\\NepParser.py',126),
  ('stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp SEMICOLON sign exp NEWLINE cmpdstmt BAISA','stmt',12,'p_stmt_for','D:\\rhee\\NepParser.py',130),
  ('stmt -> SABEI IDENTIFIER ASSIGNMENT exp DEKHI exp NEWLINE cmpdstmt BAISA','stmt',9,'p_stmt_for1','D:\\rhee\\NepParser.py',134),
  ('stmt -> JABA SAMMA whilecond NEWLINE cmpdstmt BAJA','stmt',6,'p_stmt_while','D:\\rhee\\NepParser.py',138),
  ('stmt -> IDENTIFIER ASSIGNMENT LGPARA variableexp RGPARA','stmt',5,'p_stmt_list','D:\\rhee\\NepParser.py',142),
  ('stmt -> KAAM IDENTIFIER LPARA variableArgs RPARA NEWLINE cmpdstmt MAKA','stmt',8,'p_stmt_function','D:\\rhee\\NepParser.py',146),
  ('stmt -> IDENTIFIER LPARA variableexp RPARA','stmt',4,'p_stmt_functionCall','D:\\rhee\\NepParser.py',150),
  ('stmt -> exp PATHAU','stmt',2,'p_stmt_returnStatement','D:\\rhee\\NepParser.py',154),
  ('stmt -> IDENTIFIER LGPARA exp RGPARA ASSIGNMENT exp','stmt',6,'p_stmt_listitemassignment','D:\\rhee\\NepParser.py',158),
  ('variableArgs -> IDENTIFIER COMMA variableArgs','variableArgs',3,'p_variableArgs_arguments','D:\\rhee\\NepParser.py',162),
  ('variableArgs -> IDENTIFIER','variableArgs',1,'p_variableArgs_single','D:\\rhee\\NepParser.py',165),
  ('variableArgs -> <empty>','variableArgs',0,'p_variableArgs_empty','D:\\rhee\\NepParser.py',168),
  ('variableexp -> exp COMMA variableexp','variableexp',3,'p_variableexp_more','D:\\rhee\\NepParser.py',172),
  ('variableexp -> exp','variableexp',1,'p_variableexp_one','D:\\rhee\\NepParser.py',175),
  ('variableexp -> <empty>','variableexp',0,'p_variableexp_empty','D:\\rhee\\NepParser.py',178),
  ('exp -> exp EQ exp','exp',3,'p_exp_equal','D:\\rhee\\NepParser.py',184),
  ('exp -> exp LE exp','exp',3,'p_exp_equal','D:\\rhee\\NepParser.py',185),
  ('exp -> exp GE exp','exp',3,'p_exp_equal','D:\\rhee\\NepParser.py',186),
  ('exp -> exp NE exp','exp',3,'p_exp_equal','D:\\rhee\\NepParser.py',187),
  ('exp -> exp LT exp','exp',3,'p_exp_equal','D:\\rhee\\NepParser.py',188),
  ('exp -> exp GT exp','exp',3,'p_exp_equal','D:\\rhee\\NepParser.py',189),
  ('exp -> exp PLUS exp','exp',3,'p_exp_equal','D:\\rhee\\NepParser.py',190),
  ('exp -> exp MINUS exp','exp',3,'p_exp_equal','D:\\rhee\\NepParser.py',191),
  ('exp -> exp TIMES exp','exp',3,'p_exp_equal','D:\\rhee\\NepParser.py',192),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_equal','D:\\rhee\\NepParser.py',193),
  ('exp -> exp POWER exp','exp',3,'p_exp_equal','D:\\rhee\\NepParser.py',194),
  ('exp -> exp MODULUS exp','exp',3,'p_exp_equal','D:\\rhee\\NepParser.py',195),
  ('exp -> exp RA exp','exp',3,'p_exp_equal','D:\\rhee\\NepParser.py',196),
  ('exp -> exp WA exp','exp',3,'p_exp_equal','D:\\rhee\\NepParser.py',197),
  ('exp -> IDENTIFIER','exp',1,'p_exp_identifier','D:\\rhee\\NepParser.py',202),
  ('exp -> STRING','exp',1,'p_exp_string','D:\\rhee\\NepParser.py',205),
  ('exp -> NUMBER','exp',1,'p_exp_number','D:\\rhee\\NepParser.py',208),
  ('exp -> MINUS NUMBER','exp',2,'p_exp_minus','D:\\rhee\\NepParser.py',212),
  ('exp -> SUNYA','exp',1,'p_exp_sunya','D:\\rhee\\NepParser.py',216),
  ('exp -> LGPARA variableexp RGPARA','exp',3,'p_exp_list','D:\\rhee\\NepParser.py',219),
  ('exp -> IDENTIFIER LGPARA exp RGPARA','exp',4,'p_exp_listitem','D:\\rhee\\NepParser.py',222),
  ('exp -> LPARA exp RPARA','exp',3,'p_exp_paren','D:\\rhee\\NepParser.py',225),
  ('exp -> IDENTIFIER LGPARA sliceexp COLON sliceexp RGPARA','exp',6,'p_exp_slicing','D:\\rhee\\NepParser.py',229),
  ('sliceexp -> exp','sliceexp',1,'p_sliceexp_var','D:\\rhee\\NepParser.py',232),
  ('sliceexp -> <empty>','sliceexp',0,'p_sliceexp_empty','D:\\rhee\\NepParser.py',235),
  ('exp -> LPARA exp RPARA QUESTION exp COLON exp','exp',7,'p_exp_conditional','D:\\rhee\\NepParser.py',239),
  ('exp -> IDENTIFIER LPARA variableexp RPARA','exp',4,'p_exp_functionCall','D:\\rhee\\NepParser.py',243),
  ('dynamString -> exp COMMA dynamString','dynamString',3,'p_dynamString_ident','D:\\rhee\\NepParser.py',247),
  ('dynamString -> exp','dynamString',1,'p_dynamString_exp','D:\\rhee\\NepParser.py',250),
  ('condition -> condition RA condition','condition',3,'p_condition_binop','D:\\rhee\\NepParser.py',254),
  ('condition -> condition WA condition','condition',3,'p_condition_binop','D:\\rhee\\NepParser.py',255),
  ('condition -> exp BHAE','condition',2,'p_condition_positive','D:\\rhee\\NepParser.py',260),
  ('condition -> exp NABHAE','condition',2,'p_condition_neg','D:\\rhee\\NepParser.py',264),
  ('cmpdstmt -> stmt NEWLINE cmpdstmt','cmpdstmt',3,'p_cmpdstmt_stmt','D:\\rhee\\NepParser.py',268),
  ('cmpdstmt -> <empty>','cmpdstmt',0,'p_cmpdstmt_empty','D:\\rhee\\NepParser.py',271),
  ('optelse -> ATHAWA condition NEWLINE cmpdstmt optelse','optelse',5,'p_optelse_elseif','D:\\rhee\\NepParser.py',275),
  ('optelse -> ATHAWA NEWLINE cmpdstmt','optelse',3,'p_optelse_else','D:\\rhee\\NepParser.py',278),
  ('optelse -> <empty>','optelse',0,'p_optelse_empty','D:\\rhee\\NepParser.py',281),
  ('sign -> PLUS','sign',1,'p_sign','D:\\rhee\\NepParser.py',289),
  ('sign -> MINUS','sign',1,'p_sign','D:\\rhee\\NepParser.py',290),
  ('incrementsign -> sign','incrementsign',1,'p_incrementsign','D:\\rhee\\NepParser.py',294),
  ('incrementsign -> TIMES','incrementsign',1,'p_incrementsign','D:\\rhee\\NepParser.py',295),
  ('incrementsign -> DIVIDE','incrementsign',1,'p_incrementsign','D:\\rhee\\NepParser.py',296),
  ('whilecond -> whilecond RA whilecond','whilecond',3,'p_whilecond_normal','D:\\rhee\\NepParser.py',303),
  ('whilecond -> whilecond WA whilecond','whilecond',3,'p_whilecond_normal','D:\\rhee\\NepParser.py',304),
  ('whilecond -> exp CHHA','whilecond',2,'p_whilecond_pos','D:\\rhee\\NepParser.py',309),
  ('whilecond -> exp CHHAINA','whilecond',2,'p_whilecond_neg','D:\\rhee\\NepParser.py',312),
]
